{"version":3,"file":"FlashcardHeader-D_pwsQm8.js","sources":["../../src/views/practice/components/FlashcardHeader.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white dark:bg-black shadow border-b border-gray-200 dark:border-gray-800\">\n    <div class=\"max-w-4xl mx-auto py-3 sm:py-4 md:py-6 px-3 sm:px-4 md:px-6\">\n      <!-- Mobile Layout (below sm) -->\n      <div class=\"sm:hidden\">\n        <!-- Top Row: Back button + Title -->\n        <div class=\"flex items-center justify-between mb-3\">\n          <div class=\"flex items-center\">\n            <button @click=\"$emit('go-back')\" class=\"mr-3 text-gray-500 dark:text-white/70 hover:text-gray-700 dark:hover:text-white\">\n              <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n            <div>\n              <h1 class=\"text-xl font-bold text-gray-900 dark:text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 dark:from-blue-400 dark:via-purple-400 dark:to-pink-400\">{{ t('flashcard.modes.flashcard', 'Flashcard') }}</h1>\n            </div>\n          </div>\n          <div class=\"text-right\">\n            <p class=\"text-xs text-gray-500 dark:text-white/60\">{{ t('flashcard.header.progress', 'Progress') }}</p>\n            <p class=\"text-sm font-semibo ld text-gray-900 dark:text-white\">{{ currentIndex + 1 }}/{{ totalCards }}</p>\n          </div>\n        </div>\n        \n        <!-- Bottom Row: Controls -->\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-2\">\n            <!-- History Button -->\n            <button @click=\"$emit('show-history')\" class=\"text-gray-500 dark:text-white/70 hover:text-gray-700 dark:hover:text-white\" :title=\"t('flashcard.header.history', 'History')\">\n              <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n            \n            <!-- Settings Button -->\n            <button\n              @click=\"onShowSettings\"\n              :disabled=\"practiceStarted\"\n              :aria-disabled=\"practiceStarted ? 'true' : 'false'\"\n              class=\"text-gray-500 dark:text-white/70 hover:text-gray-700 dark:hover:text-white\"\n              :class=\"practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\"\n              :title=\"practiceStarted ? t('flashcard.settings.disabledDuringPractice', 'Settings are disabled during practice') : t('flashcard.header.settings', 'Settings')\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n          </div>\n          \n          <div class=\"flex items-center space-x-2\">\n            <!-- Practice Mode Select (custom dropdown to allow image-mode toggle) -->\n            <div class=\"relative\">\n              <button\n                type=\"button\"\n                @click=\"toggleMobileDropdown\"\n                class=\"relative pl-2 pr-8 py-1 text-xs border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-[#0f0f0f] cursor-pointer text-gray-900 dark:text-white flex items-center min-w-[120px]\"\n                :class=\"practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\"\n                :disabled=\"practiceStarted\"\n                :aria-disabled=\"practiceStarted ? 'true' : 'false'\"\n                :title=\"practiceStarted ? t('flashcard.modes.change_disabled_during_practice', 'Mode change is disabled during practice') : t('flashcard.header.selectMode', 'Select mode')\"\n                :aria-label=\"t('flashcard.header.selectMode', 'Select mode')\"\n              >\n                <span class=\"truncate\">\n                  {{\n                    practiceMode === 'flashcard' ? t('flashcard.modes.flashcard', 'Flashcard') :\n                    practiceMode === 'quiz' ? t('flashcard.modes.quiz', 'Quiz') :\n                    practiceMode === 'typing' ? t('flashcard.modes.typing', 'Typing') :\n                    practiceMode === 'listening' ? t('flashcard.modes.listening', 'Listening') :\n                    practiceMode === 'image' ? t('flashcard.modes.image', 'Image') :\n                    practiceMode === 'pictionary' ? t('flashcard.modes.pictionary', 'Pictionary') :\n                    practiceMode === 'flip-tile' ? t('flashcard.modes.flipTile', 'Flip Tile') :\n                    practiceMode === 'bubble-shooter' ? t('flashcard.modes.bubbleShooter', 'Bubble Shooter') :\n                    practiceMode === 'snake-game' ? t('flashcard.modes.snakeGame', 'Snake Hunt') :\n                    t('flashcard.modes.pronunciation', 'Pronunciation')\n                  }}\n                </span>\n                <svg class=\"w-3.5 h-3.5 opacity-80 absolute right-2 top-1/2 -translate-y-1/2 pointer-events-none\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.17l3.71-3.94a.75.75 0 111.08 1.04l-4.24 4.5a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\"/>\n                </svg>\n              </button>\n              <transition name=\"fade\" appear>\n                <div\n                  v-if=\"mobileDropdownOpen && !practiceStarted\"\n                  class=\"absolute right-0 mt-1 w-44 z-[9999] rounded-md shadow-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-[#0f0f0f] overflow-hidden\"\n                >\n                  <ul class=\"py-1 text-xs text-gray-900 dark:text-white\">\n                    <!-- Flashcard option with inline scramble toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('flashcard')\">{{ t('flashcard.modes.flashcard', 'Flashcard') }}</button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"scrambleWordsEnabled ? 'bg-green-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleScrambleWordsFromDropdown()\"\n                        :title=\"t('flashcard.scrambleWords.toggle', 'Scramble Words')\"\n                        :aria-label=\"t('flashcard.scrambleWords.toggle', 'Scramble Words')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', scrambleWordsEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <li><button class=\"w-full text-left px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10\" @click=\"selectMode('quiz')\">{{ t('flashcard.modes.quiz', 'Quiz') }}</button></li>\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('typing')\">{{ t('flashcard.modes.typing', 'Typing') }}</button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"typingQuizEnabled ? 'bg-purple-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleTypingQuizFromDropdown()\"\n                        :title=\"t('flashcard.typing.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.typing.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', typingQuizEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Listening option with inline toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('listening')\">{{ t('flashcard.modes.listening', 'Listening') }}</button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"listeningQuizEnabled ? 'bg-cyan-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleListeningQuizFromDropdown()\"\n                        :title=\"t('flashcard.listening.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.listening.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', listeningQuizEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Image option with inline toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button\n                        class=\"text-left flex-1 truncate\"\n                        @click=\"selectMode('image')\"\n                        :disabled=\"!imageModeAvailable\"\n                        :aria-disabled=\"!imageModeAvailable ? 'true' : 'false'\"\n                        :title=\"!imageModeAvailable ? t('flashcard.image.unavailable', 'Image mode is unavailable for the selected date') : t('flashcard.modes.image', 'Image')\"\n                        :class=\"!imageModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.image', 'Image') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          imageModeAvailable ? (imageQuizEnabled ? 'bg-purple-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"imageModeAvailable && toggleImageQuizFromDropdown()\"\n                        :title=\"t('flashcard.image.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.image.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', imageQuizEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Pictionary option with inline definition toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('pictionary')\"\n                        :disabled=\"!pictionaryModeAvailable\"\n                        :aria-disabled=\"!pictionaryModeAvailable ? 'true' : 'false'\"\n                        :title=\"!pictionaryModeAvailable ? t('flashcard.pictionary.unavailable', 'Pictionary mode is unavailable for the selected date') : t('flashcard.modes.pictionary', 'Pictionary')\"\n                        :class=\"!pictionaryModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.pictionary', 'Pictionary') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          pictionaryModeAvailable ? (pictionaryDefinitionMode ? 'bg-teal-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"pictionaryModeAvailable && togglePictionaryDefinitionModeFromDropdown()\"\n                        :title=\"t('flashcard.pictionary.definitionToggle', 'Definition Mode')\"\n                        :aria-label=\"t('flashcard.pictionary.definitionToggle', 'Definition Mode')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', pictionaryDefinitionMode ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Flip Tile mode with inline hints toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('flip-tile')\"\n                        :disabled=\"!flipTileModeAvailable\"\n                        :aria-disabled=\"!flipTileModeAvailable ? 'true' : 'false'\"\n                        :title=\"!flipTileModeAvailable ? t('flashcard.flipTile.unavailable', 'Flip Tile mode is unavailable for the selected date') : t('flashcard.modes.flipTile', 'Flip Tile')\"\n                        :class=\"!flipTileModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.flipTile', 'Flip Tile') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          flipTileModeAvailable ? (useFlipTileHints ? 'bg-teal-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"flipTileModeAvailable && toggleFlipTileHintsFromDropdown()\"\n                        :title=\"t('flashcard.flipTile.hintsToggle', 'Use Definition Hints')\"\n                        :aria-label=\"t('flashcard.flipTile.hintsToggle', 'Use Definition Hints')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', useFlipTileHints ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Bubble Shooter option with inline toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button \n                        class=\"text-left flex-1 truncate\"\n                        @click=\"selectMode('bubble-shooter')\"\n                        :disabled=\"!bubbleShooterModeAvailable\"\n                        :aria-disabled=\"!bubbleShooterModeAvailable ? 'true' : 'false'\"\n                        :title=\"!bubbleShooterModeAvailable ? t('flashcard.bubbleShooter.unavailable', 'Bubble Shooter mode is disabled for dates with more than 8 vocabulary words') : t('flashcard.modes.bubbleShooter', 'Bubble Shooter')\"\n                        :class=\"!bubbleShooterModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.bubbleShooter', 'Bubble Shooter') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          bubbleShooterModeAvailable ? (bubbleShooterVietnameseMode ? 'bg-orange-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"bubbleShooterModeAvailable && toggleBubbleShooterVietnameseMode()\"\n                        :title=\"t('flashcard.bubbleShooter.vietnameseModeToggle', 'Vietnamese First Letter Mode')\"\n                        :aria-label=\"t('flashcard.bubbleShooter.vietnameseModeToggle', 'Vietnamese First Letter Mode')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', bubbleShooterVietnameseMode ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Snake Game option with inline double-bait toggle (mobile) -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('snake-game')\"\n                        :title=\"t('flashcard.modes.snakeGame', 'Snake Hunt')\"\n                      >\n                        {{ t('flashcard.modes.snakeGame', 'Snake Hunt') }}\n                      </button>\n                      <!-- Double Bait Toggle -->\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          snakeDoubleBaitEnabled ? 'bg-emerald-600' : 'bg-gray-200 dark:bg-[#0a0a0a]',\n                          practiceStarted ? 'opacity-50 cursor-not-allowed pointer-events-none' : ''\n                        ]\"\n                        @click.stop=\"toggleSnakeDoubleBaitFromDropdown()\"\n                        :title=\"practiceStarted ? t('flashcard.settings.disabledDuringPractice', 'Settings are disabled during practice') : t('flashcard.snake.doubleBaitToggle', 'Double Bait Mode')\"\n                        :aria-label=\"t('flashcard.snake.doubleBaitToggle', 'Double Bait Mode')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', snakeDoubleBaitEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Pronunciation option with inline Words Crush toggle -->\n                    <li class=\"px-3 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-2\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('pronunciation')\">{{ t('flashcard.modes.pronunciation', 'Pronunciation') }}</button>\n                      <button\n                        class=\"relative inline-flex h-4 w-8 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"wordsCrushEnabled ? 'bg-amber-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleWordsCrushFromDropdown()\"\n                        :title=\"t('flashcard.pronunciation.wordsCrushToggle', 'Hidden Words Mode')\"\n                        :aria-label=\"t('flashcard.pronunciation.wordsCrushToggle', 'Hidden Words Mode')\"\n                      >\n                        <span :class=\"['inline-block h-3.5 w-3.5 transform rounded-full bg-white transition-transform', wordsCrushEnabled ? 'translate-x-4' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </transition>\n            </div>\n            \n            <!-- Shuffle Toggle -->\n            <button\n              @click=\"$emit('toggle-shuffle')\"\n              :disabled=\"practiceStarted\"\n              :class=\"[\n                'relative inline-flex h-5 w-9 items-center rounded-full transition-colors',\n                shuffleEnabled ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-600',\n                practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\n              ]\"\n              :title=\"practiceStarted ? t('flashcard.settings.shuffle_disabled_during_practice', 'Shuffle is disabled during practice') : t('flashcard.settings.shuffle', 'Shuffle')\"\n            >\n              <span\n                :class=\"[\n                  'inline-block h-3 w-3 transform rounded-full bg-white transition-transform',\n                  shuffleEnabled ? 'translate-x-5' : 'translate-x-1'\n                ]\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Tablet & Desktop Layout (sm and above) -->\n      <div class=\"hidden sm:flex items-center justify-between\">\n        <div class=\"flex items-center\">\n          <button @click=\"$emit('go-back')\" class=\"mr-4 text-gray-500 dark:text-white/70 hover:text-gray-700 dark:hover:text-white\">\n            <svg class=\"w-6 h-6 md:w-7 md:h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n            </svg>\n          </button>\n          <div>\n            <h1 class=\"text-2xl md:text-3xl font-bold text-gray-900 dark:text-transparent bg-clip-text bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 dark:from-blue-400 dark:via-purple-400 dark:to-pink-400\">{{ t('flashcard.modes.flashcard', 'Flashcard') }}</h1>\n            <p class=\"mt-1 md:mt-2 text-sm md:text-base text-gray-600 dark:text-white/70\">{{ t('flashcard.header.description', 'Practice vocabulary with flashcards') }}</p>\n          </div>\n        </div>\n        \n        <div class=\"flex items-center space-x-3 md:space-x-4\">\n          <!-- History Button -->\n          <button @click=\"$emit('show-history')\" class=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\" :title=\"t('flashcard.header.history', 'History')\">\n            <svg class=\"w-6 h-6 md:w-7 md:h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clip-rule=\"evenodd\"/>\n            </svg>\n          </button>\n\n          <!-- Shuffle Toggle -->\n          <div class=\"flex items-center space-x-2 md:space-x-3\">\n            <span class=\"text-sm md:text-base text-gray-600 dark:text-white/70\">{{ t('flashcard.settings.shuffle', 'Shuffle') }}</span>\n            <button\n              @click=\"$emit('toggle-shuffle')\"\n              :disabled=\"practiceStarted\"\n              :class=\"[\n                'relative inline-flex items-center rounded-full transition-colors',\n                'h-6 w-11 md:h-7 md:w-12',\n                shuffleEnabled ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-600',\n                practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\n              ]\"\n              :title=\"practiceStarted ? t('flashcard.settings.shuffle_disabled_during_practice', 'Shuffle is disabled during practice') : t('flashcard.settings.shuffle', 'Shuffle')\"\n            >\n              <span\n                :class=\"[\n                  'inline-block transform rounded-full bg-white transition-transform',\n                  'h-4 w-4 md:h-5 md:w-5',\n                  shuffleEnabled ? 'translate-x-6 md:translate-x-6' : 'translate-x-1'\n                ]\"\n              />\n            </button>\n          </div>\n\n          <div class=\"text-right\">\n            <p class=\"text-sm md:text-base text-gray-500 dark:text-white/60\">{{ t('flashcard.header.progress', 'Progress') }}</p>\n            <p class=\"text-lg md:text-xl font-semibold text-gray-900 dark:text-white\">{{ currentIndex + 1 }} / {{ totalCards }}</p>\n          </div>\n          \n          <div class=\"flex items-center space-x-2 md:space-x-3\">\n            <div class=\"relative\">\n              <button\n                type=\"button\"\n                @click=\"toggleDesktopDropdown\"\n                class=\"relative pl-3 pr-10 py-1 md:pl-4 md:pr-12 md:py-2 text-sm md:text-base border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-[#0f0f0f] cursor-pointer text-gray-900 dark:text-white flex items-center min-w-[140px]\"\n                :class=\"practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\"\n                :disabled=\"practiceStarted\"\n                :aria-disabled=\"practiceStarted ? 'true' : 'false'\"\n                :title=\"practiceStarted ? t('flashcard.modes.change_disabled_during_practice', 'Mode change is disabled during practice') : t('flashcard.header.selectMode', 'Select mode')\"\n                :aria-label=\"t('flashcard.header.selectMode', 'Select mode')\"\n              >\n                <span class=\"truncate\">\n                  {{\n                    practiceMode === 'flashcard' ? t('flashcard.modes.flashcard', 'Flashcard') :\n                    practiceMode === 'quiz' ? t('flashcard.modes.quiz', 'Quiz') :\n                    practiceMode === 'typing' ? t('flashcard.modes.typing', 'Typing') :\n                    practiceMode === 'listening' ? t('flashcard.modes.listening', 'Listening') :\n                    practiceMode === 'image' ? t('flashcard.modes.image', 'Image') :\n                    practiceMode === 'pictionary' ? t('flashcard.modes.pictionary', 'Pictionary') :\n                    practiceMode === 'flip-tile' ? t('flashcard.modes.flipTile', 'Flip Tile') :\n                    practiceMode === 'bubble-shooter' ? t('flashcard.modes.bubbleShooter', 'Bubble Shooter') :\n                    practiceMode === 'snake-game' ? t('flashcard.modes.snakeGame', 'Snake Hunt') :\n                    t('flashcard.modes.pronunciation', 'Pronunciation')\n                  }}\n                </span>\n                <svg class=\"w-4 h-4 opacity-80 absolute right-2 md:right-3 top-1/2 -translate-y-1/2 pointer-events-none\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.17l3.71-3.94a.75.75 0 111.08 1.04l-4.24 4.5a.75.75 0 01-1.08 0L5.21 8.27a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\"/>\n                </svg>\n              </button>\n              <transition name=\"fade\" appear>\n                <div\n                  v-if=\"desktopDropdownOpen && !practiceStarted\"\n                  class=\"absolute right-0 mt-1 w-52 z-[9999] rounded-md shadow-xl border border-gray-200 dark:border-gray-700 bg-white dark:bg-[#0f0f0f] overflow-hidden\"\n                >\n                  <ul class=\"py-1 text-sm text-gray-900 dark:text-white\">\n                    <!-- Flashcard option with inline scramble toggle -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('flashcard')\">{{ t('flashcard.modes.flashcard', 'Flashcard') }}</button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"scrambleWordsEnabled ? 'bg-green-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleScrambleWordsFromDropdown()\"\n                        :title=\"t('flashcard.scrambleWords.toggle', 'Scramble Words')\"\n                        :aria-label=\"t('flashcard.scrambleWords.toggle', 'Scramble Words')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', scrambleWordsEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <li><button class=\"w-full text-left px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10\" @click=\"selectMode('quiz')\">{{ t('flashcard.modes.quiz', 'Quiz') }}</button></li>\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('typing')\">{{ t('flashcard.modes.typing', 'Typing') }}</button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"typingQuizEnabled ? 'bg-purple-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleTypingQuizFromDropdown()\"\n                        :title=\"t('flashcard.typing.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.typing.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', typingQuizEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('listening')\">{{ t('flashcard.modes.listening', 'Listening') }}</button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"listeningQuizEnabled ? 'bg-cyan-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleListeningQuizFromDropdown()\"\n                        :title=\"t('flashcard.listening.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.listening.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', listeningQuizEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button\n                        class=\"text-left flex-1 truncate\"\n                        @click=\"selectMode('image')\"\n                        :disabled=\"!imageModeAvailable\"\n                        :aria-disabled=\"!imageModeAvailable ? 'true' : 'false'\"\n                        :title=\"!imageModeAvailable ? t('flashcard.image.unavailable', 'Image mode is unavailable for the selected date') : t('flashcard.modes.image', 'Image')\"\n                        :class=\"!imageModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.image', 'Image') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          imageModeAvailable ? (imageQuizEnabled ? 'bg-purple-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"imageModeAvailable && toggleImageQuizFromDropdown()\"\n                        :title=\"t('flashcard.image.quizToggle', 'Multiple Choice')\"\n                        :aria-label=\"t('flashcard.image.quizToggle', 'Multiple Choice')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', imageQuizEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Pictionary option with inline definition toggle -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('pictionary')\"\n                        :disabled=\"!pictionaryModeAvailable\"\n                        :aria-disabled=\"!pictionaryModeAvailable ? 'true' : 'false'\"\n                        :title=\"!pictionaryModeAvailable ? t('flashcard.pictionary.unavailable', 'Pictionary mode is unavailable for the selected date') : t('flashcard.modes.pictionary', 'Pictionary')\"\n                        :class=\"!pictionaryModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.pictionary', 'Pictionary') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          pictionaryModeAvailable ? (pictionaryDefinitionMode ? 'bg-teal-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"pictionaryModeAvailable && togglePictionaryDefinitionModeFromDropdown()\"\n                        :title=\"t('flashcard.pictionary.definitionToggle', 'Definition Mode')\"\n                        :aria-label=\"t('flashcard.pictionary.definitionToggle', 'Definition Mode')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', pictionaryDefinitionMode ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Flip Tile mode with inline hints toggle -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('flip-tile')\"\n                        :disabled=\"!flipTileModeAvailable\"\n                        :aria-disabled=\"!flipTileModeAvailable ? 'true' : 'false'\"\n                        :title=\"!flipTileModeAvailable ? t('flashcard.flipTile.unavailable', 'Flip Tile mode is unavailable for the selected date') : t('flashcard.modes.flipTile', 'Flip Tile')\"\n                        :class=\"!flipTileModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.flipTile', 'Flip Tile') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          flipTileModeAvailable ? (useFlipTileHints ? 'bg-teal-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"flipTileModeAvailable && toggleFlipTileHintsFromDropdown()\"\n                        :title=\"t('flashcard.flipTile.hintsToggle', 'Use Definition Hints')\"\n                        :aria-label=\"t('flashcard.flipTile.hintsToggle', 'Use Definition Hints')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', useFlipTileHints ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Bubble Shooter option with inline toggle -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button\n                        class=\"text-left flex-1 truncate\"\n                        @click=\"selectMode('bubble-shooter')\"\n                        :disabled=\"!bubbleShooterModeAvailable\"\n                        :aria-disabled=\"!bubbleShooterModeAvailable ? 'true' : 'false'\"\n                        :title=\"!bubbleShooterModeAvailable ? t('flashcard.bubbleShooter.unavailable', 'Bubble Shooter mode is disabled for dates with more than 8 vocabulary words') : t('flashcard.modes.bubbleShooter', 'Bubble Shooter')\"\n                        :class=\"!bubbleShooterModeAvailable ? 'opacity-50 cursor-not-allowed' : ''\"\n                      >\n                        {{ t('flashcard.modes.bubbleShooter', 'Bubble Shooter') }}\n                      </button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          bubbleShooterModeAvailable ? (bubbleShooterVietnameseMode ? 'bg-orange-600' : 'bg-gray-200 dark:bg-[#0a0a0a]') : 'opacity-50 cursor-not-allowed pointer-events-none bg-gray-200 dark:bg-[#0a0a0a]'\n                        ]\"\n                        @click.stop=\"bubbleShooterModeAvailable && toggleBubbleShooterVietnameseMode()\"\n                        :title=\"t('flashcard.bubbleShooter.vietnameseModeToggle', 'Vietnamese First Letter Mode')\"\n                        :aria-label=\"t('flashcard.bubbleShooter.vietnameseModeToggle', 'Vietnamese First Letter Mode')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', bubbleShooterVietnameseMode ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Snake Game option with inline double-bait toggle (desktop) -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button \n                        class=\"text-left flex-1 truncate\" \n                        @click=\"selectMode('snake-game')\"\n                        :title=\"t('flashcard.modes.snakeGame', 'Snake Hunt')\"\n                      >\n                        {{ t('flashcard.modes.snakeGame', 'Snake Hunt') }}\n                      </button>\n                      <!-- Double Bait Toggle -->\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"[\n                          snakeDoubleBaitEnabled ? 'bg-emerald-600' : 'bg-gray-200 dark:bg-[#0a0a0a]',\n                          practiceStarted ? 'opacity-50 cursor-not-allowed pointer-events-none' : ''\n                        ]\"\n                        @click.stop=\"toggleSnakeDoubleBaitFromDropdown()\"\n                        :title=\"practiceStarted ? t('flashcard.settings.disabledDuringPractice', 'Settings are disabled during practice') : t('flashcard.snake.doubleBaitToggle', 'Double Bait Mode')\"\n                        :aria-label=\"t('flashcard.snake.doubleBaitToggle', 'Double Bait Mode')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', snakeDoubleBaitEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                    <!-- Pronunciation option with inline Words Crush toggle -->\n                    <li class=\"px-4 py-2 hover:bg-gray-100 dark:hover:bg-white/10 flex items-center justify-between gap-3\">\n                      <button class=\"text-left flex-1 truncate\" @click=\"selectMode('pronunciation')\">{{ t('flashcard.modes.pronunciation', 'Pronunciation') }}</button>\n                      <button\n                        class=\"relative inline-flex h-5 w-10 items-center rounded-full transition-colors border border-gray-300 dark:border-gray-600\"\n                        :class=\"wordsCrushEnabled ? 'bg-amber-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n                        @click.stop=\"toggleWordsCrushFromDropdown()\"\n                        :title=\"t('flashcard.pronunciation.wordsCrushToggle', 'Hidden Words Mode')\"\n                        :aria-label=\"t('flashcard.pronunciation.wordsCrushToggle', 'Hidden Words Mode')\"\n                      >\n                        <span :class=\"['inline-block h-4 w-4 transform rounded-full bg-white transition-transform', wordsCrushEnabled ? 'translate-x-5' : 'translate-x-0.5']\" />\n                      </button>\n                    </li>\n                  </ul>\n                </div>\n              </transition>\n            </div>\n            <button\n              @click=\"onShowSettings\"\n              :disabled=\"practiceStarted\"\n              :aria-disabled=\"practiceStarted ? 'true' : 'false'\"\n              class=\"text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300\"\n              :class=\"practiceStarted ? 'opacity-50 cursor-not-allowed' : ''\"\n              :title=\"practiceStarted ? t('flashcard.settings.disabledDuringPractice', 'Settings are disabled during practice') : t('flashcard.header.settings', 'Settings')\"\n            >\n              <svg class=\"w-6 h-6 md:w-7 md:h-7\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\nimport type { PracticeMode } from '../types'\nimport { ref, onMounted, onBeforeUnmount, computed, watch } from 'vue'\nimport { useModalStore } from '../../../stores/modalStore'\n\ninterface Props {\n  currentIndex: number\n  totalCards: number\n  practiceMode: PracticeMode\n  shuffleEnabled: boolean\n  practiceStarted?: boolean\n  imageQuizEnabled?: boolean\n  listeningQuizEnabled?: boolean\n  typingQuizEnabled?: boolean\n  imageModeAvailable?: boolean\n  pictionaryModeAvailable?: boolean\n  flipTileModeAvailable?: boolean\n  bubbleShooterModeAvailable?: boolean\n  bubbleShooterVietnameseMode?: boolean\n  // Snake game: double bait mode toggle state (prop down from FlashcardView)\n  snakeDoubleBaitEnabled?: boolean\n  // Pictionary: definition mode toggle state (prop down from FlashcardView)\n  pictionaryDefinitionMode?: boolean\n  // Scramble Words: toggle state for flashcard mode (prop down from FlashcardView)\n  scrambleWordsEnabled?: boolean\n  // Words Crush: toggle state for pronunciation mode (prop down from FlashcardView)\n  wordsCrushEnabled?: boolean\n  useFlipTileHints?: boolean\n}\n\nconst props = defineProps<Props>()\nconst imageQuizEnabled = computed(() => props.imageQuizEnabled ?? false)\nconst listeningQuizEnabled = computed(           () => props.listeningQuizEnabled ?? false)\nconst typingQuizEnabled = computed(() => props.typingQuizEnabled ?? false)\nconst imageModeAvailable = computed(() => props.imageModeAvailable ?? true)\nconst pictionaryModeAvailable = computed(() => props.pictionaryModeAvailable ?? true)\nconst flipTileModeAvailable = computed(() => props.flipTileModeAvailable ?? true)\nconst bubbleShooterModeAvailable = computed(() => props.bubbleShooterModeAvailable ?? true)\nconst bubbleShooterVietnameseMode = computed(() => props.bubbleShooterVietnameseMode ?? false)\nconst snakeDoubleBaitEnabled = computed(() => props.snakeDoubleBaitEnabled ?? false)\nconst pictionaryDefinitionMode = computed(() => props.pictionaryDefinitionMode ?? false)\nconst scrambleWordsEnabled = computed(() => props.scrambleWordsEnabled ?? false)\nconst wordsCrushEnabled = computed(() => props.wordsCrushEnabled ?? false)\nconst useFlipTileHints = computed(() => props.useFlipTileHints ?? false)\n\nconst { t } = useI18n()\n\n// Modal store for dropdown auto-hide functionality\nconst modalStore = useModalStore()\n\nconst emit = defineEmits<{\n  'go-back': []\n  'show-history': []\n  'change-practice-mode': [mode: PracticeMode]\n  'show-settings': []\n  'toggle-shuffle': []\n  'update:image-quiz-enabled': [enabled: boolean]\n  'update:listening-quiz-enabled': [enabled: boolean]\n  'update:typing-quiz-enabled': [enabled: boolean]\n  'update:bubble-shooter-vietnamese-mode': [enabled: boolean]\n  'update:snake-double-bait-enabled': [enabled: boolean]\n  'update:pictionary-definition-mode': [enabled: boolean]\n  'update:scramble-words-enabled': [enabled: boolean]\n  'update:words-crush-enabled': [enabled: boolean]\n  'update:use-flip-tile-hints': [enabled: boolean]\n}>()\n\nconst handlePracticeModeChange = (event: Event) => {\n  const target = event.target as HTMLSelectElement\n  emit('change-practice-mode', target.value as PracticeMode)\n}\n\n// Custom dropdown logic (keeps original look & feel)\nconst mobileDropdownOpen = ref(false)\nconst desktopDropdownOpen = ref(false)\n\nconst closeAll = () => {\n  mobileDropdownOpen.value = false\n  desktopDropdownOpen.value = false\n}\n\nconst toggleMobileDropdown = () => {\n  if (props.practiceStarted) return\n  mobileDropdownOpen.value = !mobileDropdownOpen.value\n  if (mobileDropdownOpen.value) desktopDropdownOpen.value = false\n}\nconst toggleDesktopDropdown = () => {\n  if (props.practiceStarted) return\n  desktopDropdownOpen.value = !desktopDropdownOpen.value\n  if (desktopDropdownOpen.value) mobileDropdownOpen.value = false\n}\n\nconst selectMode = (mode: PracticeMode) => {\n  if (props.practiceStarted) {\n    // Do not allow mode changes during active practice\n    closeAll()\n    return\n  }\n  if (mode === 'image' && !imageModeAvailable.value) {\n    // Prevent selecting Image mode when unavailable for current date filter\n    closeAll()\n    return\n  }\n  if (mode === 'pictionary' && !pictionaryModeAvailable.value) {\n    // Prevent selecting Pictionary mode when unavailable for current date filter\n    closeAll()\n    return\n  }\n  if (mode === 'bubble-shooter' && !bubbleShooterModeAvailable.value) {\n    // Prevent selecting Bubble Shooter mode when too many vocabulary words (>8) for selected date\n    closeAll()\n    return\n  }\n  emit('change-practice-mode', mode)\n  closeAll()\n}\n\nconst toggleImageQuizFromDropdown = () => {\n  // Prevent toggling during active practice or when image mode is unavailable\n  if (props.practiceStarted) return\n  if (!imageModeAvailable.value) return\n  emit('update:image-quiz-enabled', !imageQuizEnabled.value)\n}\n\nconst toggleListeningQuizFromDropdown = () => {\n  if (props.practiceStarted) return \n  emit('update:listening-quiz-enabled', !listeningQuizEnabled.value)\n}\n\nconst toggleTypingQuizFromDropdown = () => {\n  if (props.practiceStarted) return\n  emit('update:typing-quiz-enabled', !typingQuizEnabled.value)\n}\n\nconst toggleSnakeDoubleBaitFromDropdown = () => {\n  // Prevent toggling during active practice\n  if (props.practiceStarted) return\n  emit('update:snake-double-bait-enabled', !snakeDoubleBaitEnabled.value)\n}\n\nconst toggleBubbleShooterVietnameseMode = () => {\n  // Prevent toggling during active practice or when bubble shooter mode is unavailable\n  if (props.practiceStarted) return\n  if (!bubbleShooterModeAvailable.value) return\n  emit('update:bubble-shooter-vietnamese-mode', !bubbleShooterVietnameseMode.value)\n}\n\nconst togglePictionaryDefinitionModeFromDropdown = () => {\n  // Prevent toggling during active practice or when pictionary mode is unavailable\n  if (props.practiceStarted) return\n  if (!pictionaryModeAvailable.value) return\n  emit('update:pictionary-definition-mode', !pictionaryDefinitionMode.value)\n}\n\nconst toggleFlipTileHintsFromDropdown = () => {\n  // Prevent toggling during active practice or when flip tile mode is unavailable\n  if (props.practiceStarted) return\n  if (!flipTileModeAvailable.value) return\n  emit('update:use-flip-tile-hints', !useFlipTileHints.value)\n}\n\nconst toggleScrambleWordsFromDropdown = () => {\n  // Prevent toggling during active practice\n  if (props.practiceStarted) return\n  emit('update:scramble-words-enabled', !scrambleWordsEnabled.value)\n}\n\nconst toggleWordsCrushFromDropdown = () => {\n  // Prevent toggling during active practice\n  if (props.practiceStarted) return\n  emit('update:words-crush-enabled', !wordsCrushEnabled.value)\n}\n\n// Guarded settings emitter to prevent opening during active practice\nconst onShowSettings = () => {\n  if (props.practiceStarted) return\n  closeAll()\n  emit('show-settings')\n}\n\nconst onClickOutside = (e: MouseEvent) => {\n  const target = e.target as HTMLElement\n  // Close when clicking outside any dropdown container within this header\n  if (!target.closest('.relative')) {\n    closeAll()\n  }\n}\n\n// Auto-hide dropdowns when any modal is displayed\nwatch(() => modalStore.shouldHideDropdowns, (shouldHide) => {\n  if (shouldHide) {\n    closeAll()\n  }\n})\n\nonMounted(() => {\n  window.addEventListener('click', onClickOutside, { capture: true })\n})\nonBeforeUnmount(() => {\n  window.removeEventListener('click', onClickOutside, { capture: true } as any)\n})\n</script>\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","$emit","_toDisplayString","_unref","currentIndex","totalCards","practiceStarted","_normalizeClass","practiceMode","_createVNode","_Transition","_withModifiers","shuffleEnabled"],"mappings":"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"}