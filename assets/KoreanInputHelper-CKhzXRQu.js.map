{"version":3,"file":"KoreanInputHelper-CKhzXRQu.js","sources":["../../src/views/vocabulary/components/KoreanInputHelper.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Backdrop -->\n    <Transition\n      enter-active-class=\"transition-all duration-500 ease-out\"\n      enter-from-class=\"opacity-0\"\n      enter-to-class=\"opacity-100\"\n      leave-active-class=\"transition-all duration-300 ease-in\"\n      leave-from-class=\"opacity-100\"\n      leave-to-class=\"opacity-0\"\n    >\n      <div \n        v-if=\"modelValue\" \n        class=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50 backdrop-blur-sm\"\n      >\n        <!-- Dialog Container -->\n        <Transition\n          enter-active-class=\"transition-all duration-500 ease-out\"\n          enter-from-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n          enter-to-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-active-class=\"transition-all duration-300 ease-in\"\n          leave-from-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-to-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n        >\n          <div class=\"w-full max-h-[90vh] flex flex-col max-w-full sm:max-w-lg md:max-w-2xl lg:max-w-4xl\">\n            <!-- Dialog Content -->\n            <div \n              class=\"bg-white dark:bg-[#0a0a0a] shadow-2xl rounded-xl border border-gray-200 dark:border-gray-700 flex flex-col h-full overflow-hidden transform\"\n              @click.stop\n            >\n              <!-- Header -->\n              <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a]\">\n                <div class=\"flex items-center justify-between\">\n                  <h2 class=\"text-lg sm:text-xl md:text-2xl font-semibold text-gray-900 dark:text-white flex items-center space-x-2\">\n                    <span class=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></span>\n                    <span>{{ t('korean.inputHelper.title', 'Korean Input Helper') }}</span>\n                  </h2>\n                  <button \n                    @click=\"closeDialog\"\n                    class=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-all duration-300 hover:scale-110 hover:rotate-90 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800\"\n                  >\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Sticky Preview Section -->\n              <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-[#0a0a0a] sticky top-0 z-10\">\n                <!-- Search Input -->\n                <div class=\"relative mb-4\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg class=\"h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                    </svg>\n                  </div>\n                  <input\n                    ref=\"searchInputRef\"\n                    v-model=\"searchQuery\"\n                    type=\"text\"\n                    class=\"block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-dark-bg-mute rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-dark-bg-mute dark:text-white\"\n                    :placeholder=\"t('common.search', 'Search Korean characters...')\"\n                    @blur=\"refocusSearchInput\"\n                  />\n                </div>\n\n                <!-- Preview Section -->\n                <div>\n                  <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                    <span class=\"w-1 h-4 bg-green-500 rounded mr-2\"></span>\n                    {{ t('korean.inputHelper.preview', 'Preview') }}\n                  </label>\n                  <div class=\"relative\">\n                    <input\n                      v-model=\"currentInput\"\n                      type=\"text\"\n                      class=\"w-full px-3 py-2 pr-20 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 text-lg\"\n                      :placeholder=\"t('korean.inputHelper.placeholder', 'Type or click characters below...')\"\n                      readonly\n                    />\n                    <!-- Backspace Button -->\n                    <button\n                      v-if=\"currentInput\"\n                      @click=\"backspaceInput\"\n                      class=\"absolute right-12 top-1/2 -translate-y-1/2 w-8 h-6 bg-orange-500 hover:bg-orange-600 text-white rounded flex items-center justify-center text-xs font-bold transition-all duration-300 hover:scale-110\"\n                      :title=\"t('common.backspace', 'Backspace')\"\n                    >\n                      ⌫\n                    </button>\n                    <!-- Clear Button -->\n                    <button\n                      v-if=\"currentInput\"\n                      @click=\"clearInput\"\n                      class=\"absolute right-2 top-1/2 -translate-y-1/2 w-6 h-6 bg-red-500 hover:bg-red-600 text-white rounded-full flex items-center justify-center text-xs font-bold transition-all duration-300 hover:scale-110\"\n                      :title=\"t('common.clear', 'Clear')\"\n                    >\n                      ×\n                    </button>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Scrollable Content -->\n              <div class=\"px-6 py-4 flex-1 overflow-y-auto min-h-0\">\n\n                <!-- Character Categories -->\n                <div class=\"space-y-6\">\n                  <!-- Consonants (자음) -->\n                  <div>\n                    <h3 class=\"text-md font-semibold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n                      <span class=\"w-1 h-4 bg-blue-500 rounded mr-2\"></span>\n                      {{ t('korean.inputHelper.consonants', 'Consonants (자음)') }}\n                    </h3>\n                    <div class=\"grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-2\">\n                      <button\n                        v-for=\"consonant in filteredConsonants\"\n                        :key=\"consonant.char\"\n                        @click=\"addCharacter(consonant.char)\"\n                        class=\"p-2 bg-blue-100 hover:bg-blue-200 dark:bg-blue-900 dark:hover:bg-blue-800 text-gray-800 dark:text-gray-200 rounded-lg transition-all duration-200 hover:scale-105 flex flex-col items-center text-sm\"\n                        :title=\"consonant.description\"\n                      >\n                        <span class=\"font-bold text-base\">{{ consonant.char }}</span>\n                        <span class=\"text-xs text-gray-600 dark:text-gray-400\">{{ consonant.romanization }}</span>\n                      </button>\n                    </div>\n                  </div>\n\n                  <!-- Vowels (모음) -->\n                  <div>\n                    <h3 class=\"text-md font-semibold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n                      <span class=\"w-1 h-4 bg-green-500 rounded mr-2\"></span>\n                      {{ t('korean.inputHelper.vowels', 'Vowels (모음)') }}\n                    </h3>\n                    <div class=\"grid grid-cols-4 sm:grid-cols-6 md:grid-cols-8 gap-2\">\n                      <button\n                        v-for=\"vowel in filteredVowels\"\n                        :key=\"vowel.char\"\n                        @click=\"addCharacter(vowel.char)\"\n                        class=\"p-2 bg-green-100 hover:bg-green-200 dark:bg-green-900 dark:hover:bg-green-800 text-gray-800 dark:text-gray-200 rounded-lg transition-all duration-200 hover:scale-105 flex flex-col items-center text-sm\"\n                        :title=\"vowel.description\"\n                      >\n                        <span class=\"font-bold text-base\">{{ vowel.char }}</span>\n                        <span class=\"text-xs text-gray-600 dark:text-gray-400\">{{ vowel.romanization }}</span>\n                      </button>\n                    </div>\n                  </div>\n\n                  <!-- Common Syllables (자주 쓰이는 글자) -->\n                  <div>\n                    <h3 class=\"text-md font-semibold text-gray-800 dark:text-gray-200 mb-3 flex items-center\">\n                      <span class=\"w-1 h-4 bg-purple-500 rounded mr-2\"></span>\n                      {{ t('korean.inputHelper.commonSyllables', 'Common Syllables') }}\n                    </h3>\n                    <div class=\"grid grid-cols-6 sm:grid-cols-8 md:grid-cols-10 gap-2\">\n                      <button\n                        v-for=\"syllable in filteredCommonSyllables\"\n                        :key=\"syllable\"\n                        @click=\"addCharacter(syllable)\"\n                        class=\"px-3 py-2 bg-purple-100 hover:bg-purple-200 dark:bg-purple-900 dark:hover:bg-purple-800 text-gray-800 dark:text-gray-200 rounded-lg transition-all duration-200 hover:scale-105 font-medium\"\n                      >\n                        {{ syllable }}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <!-- Footer -->\n              <div class=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gray-50 dark:bg-[#0a0a0a]\">\n                <div class=\"flex justify-between items-center space-x-3\">\n                  <button\n                    type=\"button\"\n                    @click=\"clearInput\"\n                    class=\"px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg transition-all duration-300 hover:scale-105\"\n                  >\n                    {{ t('common.clear', 'Clear') }}\n                  </button>\n                  <div class=\"flex space-x-3\">\n                    <button\n                      type=\"button\"\n                      @click=\"closeDialog\"\n                      class=\"px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 rounded-lg transition-all duration-300 hover:scale-105\"\n                    >\n                      {{ t('common.cancel', 'Cancel') }}\n                    </button>\n                    <button\n                      type=\"button\"\n                      @click=\"confirmInput\"\n                      class=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-all duration-300 hover:scale-105 shadow-lg\"\n                    >\n                      {{ t('common.confirm', 'Confirm') }}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Transition>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, nextTick, computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\ninterface Props {\n  modelValue: boolean\n  initialValue?: string\n}\n\ninterface Emits {\n  (event: 'update:modelValue', value: boolean): void\n  (event: 'input-confirmed', value: string): void\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  initialValue: ''\n})\n\nconst emit = defineEmits<Emits>()\nconst { t } = useI18n()\n\n// State\nconst currentInput = ref('')\nconst searchQuery = ref('')\nconst searchInputRef = ref<HTMLInputElement | null>(null)\n\n// Korean Characters with Romanization\nconst koreanConsonants = [\n  { char: 'ㄱ', romanization: 'g/k', description: 'g as in go, k as in sky' },\n  { char: 'ㄴ', romanization: 'n', description: 'n as in no' },\n  { char: 'ㄷ', romanization: 'd/t', description: 'd as in do, t as in stop' },\n  { char: 'ㄹ', romanization: 'r/l', description: 'r as in run, l as in love' },\n  { char: 'ㅁ', romanization: 'm', description: 'm as in moon' },\n  { char: 'ㅂ', romanization: 'b/p', description: 'b as in boy, p as in spy' },\n  { char: 'ㅅ', romanization: 's', description: 's as in see' },\n  { char: 'ㅇ', romanization: 'ng', description: 'ng as in sing (silent at start)' },\n  { char: 'ㅈ', romanization: 'j', description: 'j as in jump' },\n  { char: 'ㅊ', romanization: 'ch', description: 'ch as in chair' },\n  { char: 'ㅋ', romanization: 'k', description: 'k as in key' },\n  { char: 'ㅌ', romanization: 't', description: 't as in top' },\n  { char: 'ㅍ', romanization: 'p', description: 'p as in pie' },\n  { char: 'ㅎ', romanization: 'h', description: 'h as in home' },\n  { char: 'ㄲ', romanization: 'kk', description: 'stronger k sound' },\n  { char: 'ㄸ', romanization: 'tt', description: 'stronger t sound' },\n  { char: 'ㅃ', romanization: 'pp', description: 'stronger p sound' },\n  { char: 'ㅆ', romanization: 'ss', description: 'stronger s sound' },\n  { char: 'ㅉ', romanization: 'jj', description: 'stronger j sound' }\n]\n\nconst koreanVowels = [\n  { char: 'ㅏ', romanization: 'a', description: 'a as in father' },\n  { char: 'ㅑ', romanization: 'ya', description: 'ya as in yard' },\n  { char: 'ㅓ', romanization: 'eo', description: 'uh as in up' },\n  { char: 'ㅕ', romanization: 'yeo', description: 'yuh sound' },\n  { char: 'ㅗ', romanization: 'o', description: 'o as in go' },\n  { char: 'ㅛ', romanization: 'yo', description: 'yo as in yo-yo' },\n  { char: 'ㅜ', romanization: 'u', description: 'u as in moon' },\n  { char: 'ㅠ', romanization: 'yu', description: 'yu as in you' },\n  { char: 'ㅡ', romanization: 'eu', description: 'uh sound (lips spread)' },\n  { char: 'ㅣ', romanization: 'i', description: 'i as in machine' },\n  { char: 'ㅐ', romanization: 'ae', description: 'ae as in cat' },\n  { char: 'ㅒ', romanization: 'yae', description: 'yae sound' },\n  { char: 'ㅔ', romanization: 'e', description: 'e as in red' },\n  { char: 'ㅖ', romanization: 'ye', description: 'ye as in yes' },\n  { char: 'ㅘ', romanization: 'wa', description: 'wa as in water' },\n  { char: 'ㅙ', romanization: 'wae', description: 'wae sound' },\n  { char: 'ㅚ', romanization: 'oe', description: 'we sound' },\n  { char: 'ㅝ', romanization: 'wo', description: 'wo sound' },\n  { char: 'ㅞ', romanization: 'we', description: 'we sound' },\n  { char: 'ㅟ', romanization: 'wi', description: 'wi as in we' },\n  { char: 'ㅢ', romanization: 'ui', description: 'ui sound' }\n]\n\nconst commonKoreanSyllables = [\n  // Basic syllables (기본 음절)\n  '가', '나', '다', '라', '마', '바', '사', '아', '자', '차', '카', '타', '파', '하',\n  \n  // Common particles & endings (조사 및 어미)\n  '은', '을', '이', '가', '의', '에', '로', '와', '과', '나', '도', '만', '부터', '까지',\n  \n  // Frequent syllables (자주 쓰이는 음절)\n  '고', '수', '한', '그', '요', '지', '시', '인', '대', '중', '모', '서', '있', '있다',\n  \n  // Common verbs/adjectives (동사/형용사)\n  '하다', '되다', '있다', '없다', '같다', '다르다', '좋다', '나쁘다', '크다', '작다',\n  \n  // Common nouns (명사)\n  '사람', '시간', '일', '날', '년', '월', '주', '분', '초', '때', '곳', '것', '말', '글',\n  \n  // Common adverbs (부사)\n  '정말', '진짜', '아주', '매우', '너무', '조금', '많이', '잘', '못', '안', '또', '다시',\n  \n  // Numbers (숫자)\n  '일', '이', '삼', '사', '오', '육', '칠', '팔', '구', '십', '백', '천', '만'\n]\n\n// Hangeul composition constants\nconst HANGEUL_START = 0xAC00 // 가\nconst JUNGSUNG_COUNT = 21 // number of vowels\nconst JONGSUNG_COUNT = 28 // number of final consonants (including empty)\nconst chosungMap = ['ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ']\nconst jungsungMap = ['ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ', 'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ', 'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ', 'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ']\nconst jongsungMap = ['', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ', 'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ']\n\n// Helper functions\nconst isConsonant = (char: string) => {\n  const code = char.charCodeAt(0)\n  return (code >= 0x3131 && code <= 0x314E) // ㄱ-ㅎ\n}\n\nconst isVowel = (char: string) => {\n  const code = char.charCodeAt(0)\n  return (code >= 0x314F && code <= 0x3163) // ㅏ-ㅢ\n}\n\nconst isSyllable = (char: string) => {\n  const code = char.charCodeAt(0)\n  return (code >= 0xAC00 && code <= 0xD7A3) // 가-힣\n}\n\nconst decomposeSyllable = (syllable: string) => {\n  const code = syllable.charCodeAt(0) - HANGEUL_START\n  const chosung = Math.floor(code / (JUNGSUNG_COUNT * JONGSUNG_COUNT))\n  const jungsung = Math.floor((code % (JUNGSUNG_COUNT * JONGSUNG_COUNT)) / JONGSUNG_COUNT)\n  const jongsung = code % JONGSUNG_COUNT\n  \n  return {\n    chosung: chosungMap[chosung],\n    jungsung: jungsungMap[jungsung],\n    jongsung: jongsung > 0 ? jongsungMap[jongsung] : ''\n  }\n}\n\nconst composeSyllable = (chosung: string, jungsung: string, jongsung: string = '') => {\n  const chosungIndex = chosungMap.indexOf(chosung)\n  const jungsungIndex = jungsungMap.indexOf(jungsung)\n  const jongsungIndex = jongsung ? jongsungMap.indexOf(jongsung) : 0\n  \n  if (chosungIndex === -1 || jungsungIndex === -1 || jongsungIndex === -1) {\n    return null\n  }\n  \n  const syllableCode = HANGEUL_START + (chosungIndex * JUNGSUNG_COUNT * JONGSUNG_COUNT) + (jungsungIndex * JONGSUNG_COUNT) + jongsungIndex\n  return String.fromCharCode(syllableCode)\n}\n\n// Methods\nconst focusSearchInput = () => {\n  if (searchInputRef.value) {\n    searchInputRef.value.focus()\n  }\n}\n\nconst refocusSearchInput = () => {\n  // Refocus after a short delay to ensure any click actions complete first\n  setTimeout(() => {\n    focusSearchInput()\n  }, 50)\n}\n\nconst addCharacter = (character: string) => {\n  const currentText = currentInput.value\n  \n  // If adding a consonant or vowel, try to compose with previous characters\n  if (isConsonant(character) || isVowel(character)) {\n    // Get the last character\n    const lastChar = currentText.slice(-1)\n    \n    if (lastChar && isSyllable(lastChar)) {\n      // Decompose the last syllable\n      const decomposed = decomposeSyllable(lastChar)\n      \n      if (isVowel(character) && decomposed.chosung && !decomposed.jungsung) {\n        // Add vowel to consonant\n        const newSyllable = composeSyllable(decomposed.chosung, character)\n        if (newSyllable) {\n          currentInput.value = currentText.slice(0, -1) + newSyllable\n          return\n        }\n      } else if (isConsonant(character) && decomposed.chosung && decomposed.jungsung && !decomposed.jongsung) {\n        // Add final consonant\n        const newSyllable = composeSyllable(decomposed.chosung, decomposed.jungsung, character)\n        if (newSyllable) {\n          currentInput.value = currentText.slice(0, -1) + newSyllable\n          return\n        }\n      }\n    } else if (lastChar && isConsonant(lastChar) && isVowel(character)) {\n      // Compose consonant + vowel\n      const newSyllable = composeSyllable(lastChar, character)\n      if (newSyllable) {\n        currentInput.value = currentText.slice(0, -1) + newSyllable\n        return\n      }\n    }\n  }\n  \n  // Default: just add the character\n  currentInput.value += character\n  \n  // Maintain focus on search input after adding character\n  setTimeout(() => {\n    focusSearchInput()\n  }, 10)\n}\n\nconst clearInput = () => {\n  currentInput.value = ''\n  // Maintain focus on search input after clearing\n  setTimeout(() => {\n    focusSearchInput()\n  }, 10)\n}\n\nconst backspaceInput = () => {\n  if (currentInput.value.length === 0) return\n  \n  const currentText = currentInput.value\n  const lastChar = currentText.slice(-1)\n  \n  // If the last character is a complete syllable, decompose it step by step\n  if (isSyllable(lastChar)) {\n    const decomposed = decomposeSyllable(lastChar)\n    \n    if (decomposed.jongsung) {\n      // Remove final consonant: 각 → 가\n      const newSyllable = composeSyllable(decomposed.chosung, decomposed.jungsung)\n      if (newSyllable) {\n        currentInput.value = currentText.slice(0, -1) + newSyllable\n        return\n      }\n    } else if (decomposed.jungsung) {\n      // Remove vowel, keep only initial consonant: 가 → ㄱ  \n      currentInput.value = currentText.slice(0, -1) + decomposed.chosung\n      return\n    }\n    // If only chosung exists, it will be handled by default case below\n  }\n  \n  // Default: remove last character (for consonants, vowels, or other characters)\n  currentInput.value = currentText.slice(0, -1)\n  \n  // Maintain focus on search input after backspace\n  setTimeout(() => {\n    focusSearchInput()\n  }, 10)\n}\n\nconst closeDialog = () => {\n  emit('update:modelValue', false)\n}\n\nconst confirmInput = () => {\n  emit('input-confirmed', currentInput.value)\n  emit('update:modelValue', false)\n}\n\n// Computed filtered arrays based on search\nconst filteredConsonants = computed(() => {\n  if (!searchQuery.value) return koreanConsonants\n  const query = searchQuery.value.toLowerCase()\n  return koreanConsonants.filter(consonant => \n    consonant.char.includes(query) || \n    consonant.romanization.toLowerCase().includes(query) || \n    consonant.description.toLowerCase().includes(query)\n  )\n})\n\nconst filteredVowels = computed(() => {\n  if (!searchQuery.value) return koreanVowels\n  const query = searchQuery.value.toLowerCase()\n  return koreanVowels.filter(vowel => \n    vowel.char.includes(query) || \n    vowel.romanization.toLowerCase().includes(query) || \n    vowel.description.toLowerCase().includes(query)\n  )\n})\n\nconst filteredCommonSyllables = computed(() => {\n  if (!searchQuery.value) return commonKoreanSyllables\n  const query = searchQuery.value.toLowerCase()\n  return commonKoreanSyllables.filter(syllable => syllable.includes(query))\n})\n\n// Watch for initial value changes\nwatch(() => props.initialValue, (newValue) => {\n  if (newValue !== undefined) {\n    currentInput.value = newValue\n  }\n})\n\n// Watch for modal open to reset and focus search\nwatch(() => props.modelValue, async (isOpen) => {\n  if (isOpen) {\n    currentInput.value = props.initialValue || ''\n    searchQuery.value = ''\n    // Focus search input after modal animation\n    await nextTick()\n    setTimeout(() => {\n      focusSearchInput()\n    }, 100)\n  }\n})\n</script>\n"],"names":["_createElementBlock","_createVNode","_Transition","modelValue","_openBlock","_createElementVNode","_unref","_createTextVNode","_Fragment","_renderList","_toDisplayString"],"mappings":"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"}