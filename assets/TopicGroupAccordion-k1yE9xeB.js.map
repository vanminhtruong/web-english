{"version":3,"mappings":"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","names":["currentPage","_openBlock","_createElementBlock","_Fragment","_renderList","_createElementVNode","_toDisplayString","_unref","_normalizeClass","_createVNode","_Transition","$emit"],"ignoreList":[],"sources":["../../src/views/vocabulary/components/TopicGroupAccordion.vue"],"sourcesContent":["<template>\n  <div class=\"space-y-4\">\n    <div\n      v-for=\"(group, topicKey) in groupedVocabulary\"\n      :key=\"topicKey\"\n      class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.002]\"\n    >\n      <!-- Topic Header with Accordion Toggle -->\n      <div \n        @click=\"toggleGroup(topicKey)\"\n        class=\"flex items-center justify-between p-4 cursor-pointer hover:bg-white/20 dark:hover:bg-[#0a0a0a]/20 rounded-t-2xl transition-all duration-300\"\n      >\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"animate-pulse-slow\">\n            <div class=\"w-2.5 h-2.5 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full\"></div>\n          </div>\n          <div>\n            <h3 class=\"text-lg font-bold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent\">\n              {{ getTopicName(topicKey) }}\n            </h3>\n            <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n              {{ group.length }} {{ group.length === 1 ? t('vocabulary.word', 'word') : t('vocabulary.words', 'words') }}\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"flex items-center space-x-2\">\n          <!-- Examples count -->\n          <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n            {{ getTotalExamplesForTopic(group) }} {{ t('vocabulary.examples.examples', 'examples') }}\n          </span>\n          \n          <!-- Accordion toggle icon -->\n          <svg \n            class=\"w-5 h-5 text-gray-500 dark:text-gray-400 transition-transform duration-300\"\n            :class=\"{ 'rotate-180': expandedGroups[topicKey] }\"\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n      </div>\n\n      <!-- Vocabulary Content (Collapsible) -->\n      <transition\n        name=\"accordion\"\n        @enter=\"enter\"\n        @after-enter=\"afterEnter\"\n        @leave=\"leave\"\n        @after-leave=\"afterLeave\"\n      >\n        <div v-if=\"expandedGroups[topicKey]\" class=\"accordion-content border-t border-gray-200/50 dark:border-gray-700/50\">\n          <div class=\"p-4 space-y-4\">\n            <div\n              v-for=\"vocab in group\"\n              :key=\"vocab.id\"\n              class=\"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-4 hover:shadow-lg transition-all duration-300\"\n            >\n              <!-- Vocabulary Header -->\n              <div class=\"flex items-center justify-between mb-3 pb-2 border-b border-gray-200/30 dark:border-gray-700/30\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"animate-pulse-slow\">\n                    <div class=\"w-2 h-2 bg-gradient-to-r from-green-400 to-blue-500 rounded-full\"></div>\n                  </div>\n                  <div>\n                    <div class=\"flex items-center space-x-2\">\n                      <h4 class=\"text-base font-bold text-gray-900 dark:text-white\">{{ vocab.word }}</h4>\n                      <button\n                        @click=\"playVocabularyAudio(vocab.word)\"\n                        class=\"p-1 text-blue-600 hover:text-blue-700 hover:bg-blue-50/50 dark:text-blue-400 dark:hover:text-blue-300 dark:hover:bg-blue-900/20 rounded transition-all duration-300 group\"\n                        :title=\"t('vocabulary.examples.playPronunciation', 'Play pronunciation')\"\n                      >\n                        <svg class=\"w-3.5 h-3.5 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.464-9.536a9 9 0 010 12.728M9 9l3-3v6l-3-3H4a1 1 0 01-1-1V10a1 1 0 011-1h5z\" />\n                        </svg>\n                      </button>\n                      <!-- Examples Toggle Button -->\n                      <button\n                        v-if=\"getVocabExampleCount(vocab.id) > 0\"\n                        @click=\"toggleVocabExamples(vocab.id)\"\n                        class=\"p-1 text-gray-600 hover:text-gray-700 hover:bg-gray-50/50 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-[#0a0a0a]/20 rounded transition-all duration-300 group\"\n                        :title=\"expandedVocabExamples[vocab.id] ? t('vocabulary.examples.hideExamples', 'Hide examples') : t('vocabulary.examples.showExamples', 'Show examples')\"\n                      >\n                        <svg \n                          class=\"w-3.5 h-3.5 group-hover:scale-110 transition-all duration-200\" \n                          :class=\"{ 'rotate-180': expandedVocabExamples[vocab.id] }\"\n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </button>\n                    </div>\n                    <p class=\"text-sm text-gray-600 dark:text-gray-300\">{{ vocab.meaning }}</p>\n                    <div class=\"flex items-center space-x-2 mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300\">\n                        {{ vocab.partOfSpeech }}\n                      </span>\n                      <span class=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {{ getVocabExampleCount(vocab.id) }} {{ getVocabExampleCount(vocab.id) === 1 ? 'example' : 'examples' }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  @click=\"$emit('add-example', vocab)\"\n                  class=\"px-3 py-1.5 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white rounded-lg font-medium transition-all duration-300 shadow-lg hover:shadow-xl flex items-center space-x-1.5\"\n                >\n                  <svg class=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span class=\"text-sm\">{{ t('vocabulary.examples.addExample', 'Add Example') }}</span>\n                </button>\n              </div>\n\n              <!-- Examples for this vocabulary (Collapsible) -->\n              <transition\n                name=\"vocab-examples-accordion\"\n                @enter=\"vocabExamplesEnter\"\n                @after-enter=\"vocabExamplesAfterEnter\"\n                @leave=\"vocabExamplesLeave\"\n                @after-leave=\"vocabExamplesAfterLeave\"\n              >\n                <div v-if=\"expandedVocabExamples[vocab.id]\" class=\"vocab-examples-accordion-content space-y-2\">\n                  <div v-if=\"getVocabExamples(vocab.id).length === 0\" class=\"text-center py-3 text-gray-500 dark:text-gray-400\">\n                    <svg class=\"mx-auto h-6 w-6 text-gray-400 mb-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p class=\"text-xs\">{{ t('vocabulary.examples.noExamplesForWord', 'No examples yet') }}</p>\n                  </div>\n\n                  <div\n                    v-for=\"example in getPaginatedVocabExamples(vocab.id)\"\n                    :key=\"example.id\"\n                    class=\"bg-white/40 dark:bg-[#0a0a0a]/40 backdrop-blur-sm rounded-lg border border-white/20 dark:border-white/10 p-3 hover:shadow-md transition-all duration-300\"\n                  >\n                    <div class=\"flex items-start justify-between\">\n                      <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-2 mb-2\">\n                          <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium\"\n                                :class=\"getTypeColorClass(example.type)\">\n                            {{ getTypeLabel(example.type) }}\n                          </span>\n                          <span v-if=\"example.difficulty\" class=\"text-sm\" :class=\"getDifficultyColorClass(example.difficulty)\">\n                            {{ getDifficultyLabel(example.difficulty) }}\n                          </span>\n                        </div>\n                        \n                        <div class=\"mb-2\">\n                          <div class=\"flex items-center justify-between\">\n                            <p class=\"text-gray-900 dark:text-white font-medium text-sm\">{{ example.title }}</p>\n                            <button\n                              @click=\"playExampleAudio(example.content)\"\n                              class=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-50/50 dark:text-green-400 dark:hover:text-green-300 dark:hover:bg-green-900/20 rounded transition-all duration-300 group\"\n                              :title=\"t('vocabulary.examples.playExample', 'Play example')\"\n                            >\n                              <svg class=\"w-3 h-3 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.464-9.536a9 9 0 010 12.728M9 9l3-3v6l-3-3H4a1 1 0 01-1-1V10a1 1 0 011-1h5z\" />\n                              </svg>\n                            </button>\n                          </div>\n                          <p class=\"text-gray-700 dark:text-gray-300 mt-1 text-sm\">{{ example.content }}</p>\n                          <p v-if=\"example.translation\" class=\"text-gray-600 dark:text-gray-400 text-xs mt-1 italic\">\n                            {{ example.translation }}\n                          </p>\n                        </div>\n\n                        <div v-if=\"example.tags && example.tags.length > 0\" class=\"flex flex-wrap gap-1\">\n                          <span\n                            v-for=\"tag in example.tags\"\n                            :key=\"tag\"\n                            class=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                          >\n                            {{ tag }}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div class=\"flex items-center gap-1.5 ml-3\">\n                        <button\n                          @click=\"$emit('edit-example', example)\"\n                          class=\"px-2 py-1.5 text-blue-600 hover:text-blue-700 hover:bg-blue-50/50 dark:text-blue-400 dark:hover:text-blue-300 dark:hover:bg-blue-900/20 rounded-md transition-all duration-300 text-sm\"\n                        >\n                          {{ t('common.edit', 'Edit') }}\n                        </button>\n                        <button\n                          @click=\"deleteExample(example)\"\n                          class=\"px-2 py-1.5 text-red-600 hover:text-red-700 hover:bg-red-50/50 dark:text-red-400 dark:hover:text-red-300 dark:hover:bg-red-900/20 rounded-md transition-all duration-300 text-sm\"\n                        >\n                          {{ t('common.delete', 'Delete') }}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Examples Pagination -->\n                  <div v-if=\"getVocabExamplePages(vocab.id) > 1\" class=\"border-t border-white/20 dark:border-white/10 px-3 py-2 mt-3\">\n                    <div class=\"flex items-center justify-between\">\n                      <!-- Mobile Pagination (Simple) -->\n                      <div class=\"flex sm:hidden items-center gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Previous') }}\n                        </button>\n                        <span class=\"text-xs text-slate-600 dark:text-slate-400\">\n                          {{ getExamplePaginationInfo(vocab.id).currentPage }} / {{ getExamplePaginationInfo(vocab.id).totalPages }}\n                        </span>\n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Desktop Pagination (Full) -->\n                      <div class=\"hidden sm:flex items-center gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Previous') }}\n                        </button>\n                        \n                        <div class=\"flex gap-1\">\n                          <button\n                            v-for=\"page in Math.min(getExamplePaginationInfo(vocab.id).totalPages, 5)\"\n                            :key=\"page\"\n                            @click=\"goToExamplePage(vocab.id, page)\"\n                            :class=\"[\n                              'px-3 py-1.5 text-sm rounded transition-colors',\n                              getExamplePaginationInfo(vocab.id).currentPage === page\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'\n                            ]\"\n                          >\n                            {{ page }}\n                          </button>\n                        </div>\n                        \n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Examples count info -->\n                      <div class=\"text-xs text-slate-500 dark:text-slate-400\">\n                        {{ t('vocabulary.examples.showingExamples', { start: getExamplePaginationInfo(vocab.id).start, end: getExamplePaginationInfo(vocab.id).end, total: getExamplePaginationInfo(vocab.id).totalExamples }, 'Showing {start} to {end} of {total} examples') }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </transition>\n            </div>\n          </div>\n        </div>\n      </transition>\n    </div>\n    \n    <!-- Pagination for Grouped View -->\n    <div v-if=\"paginationInfo.totalPages > 1\" class=\"mt-6 group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-4\">\n      <div class=\"flex items-center justify-between\">\n        <!-- Mobile pagination -->\n        <div class=\"flex-1 flex justify-between sm:hidden\">\n          <button \n            @click=\"previousPage\" \n            :disabled=\"!paginationInfo.hasPrevious\" \n            class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {{ t('common.previous', 'Previous') }}\n          </button>\n          <button \n            @click=\"nextPage\" \n            :disabled=\"!paginationInfo.hasNext\" \n            class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {{ t('common.next', 'Next') }}\n          </button>\n        </div>\n        \n        <!-- Desktop pagination -->\n        <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-700 dark:text-gray-300\">\n              {{ t('vocabulary.examples.showingTopics', { \n                start: paginationInfo.startIndex, \n                end: paginationInfo.endIndex, \n                total: paginationInfo.totalTopics \n              }, `Showing ${paginationInfo.startIndex} to ${paginationInfo.endIndex} of ${paginationInfo.totalTopics} topics`) }}\n            </p>\n          </div>\n          <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n            <!-- Previous button -->\n            <button \n              @click=\"previousPage\" \n              :disabled=\"!paginationInfo.hasPrevious\" \n              class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span class=\"sr-only\">{{ t('common.previous', 'Previous') }}</span>\n              <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n            \n            <!-- Page numbers -->\n            <button\n              v-for=\"page in visiblePages\"\n              :key=\"page\"\n              @click=\"goToPage(page)\"\n              :class=\"[\n                page === currentPage\n                  ? 'z-10 bg-blue-50 dark:bg-blue-900 border-blue-500 dark:border-blue-400 text-blue-600 dark:text-blue-300'\n                  : 'bg-white dark:bg-[#0a0a0a] border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600',\n                'relative inline-flex items-center px-4 py-2 border text-sm font-medium'\n              ]\"\n            >\n              {{ page }}\n            </button>\n            \n            <!-- Next button -->\n            <button \n              @click=\"nextPage\" \n              :disabled=\"!paginationInfo.hasNext\" \n              class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span class=\"sr-only\">{{ t('common.next', 'Next') }}</span>\n              <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\" name=\"TopicGroupAccordion\">\nimport { ref, computed, watch, onMounted, defineAsyncComponent } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useToast, POSITION } from 'vue-toastification'\nimport { useVocabularyStore } from '../../../composables/useVocabularyStore'\nimport { useAudioSystem } from '../../practice/composables/bubble-shooter/useAudioSystem'\nimport { useTopicName } from '../../../utils/topicUtils'\nconst ExampleFormDialog = defineAsyncComponent(() => import('./ExampleFormDialog.vue'))\nconst ConfirmToast = defineAsyncComponent(() => import('../../../components/common/ConfirmToast.vue'))\n\ninterface Example {\n  id: string\n  vocabularyId: string\n  vocabulary?: {\n    id: string\n    word: string\n  }\n  title: string\n  content: string\n  translation?: string\n  context?: string\n  type: 'sentence' | 'dialogue' | 'phrase' | 'context'\n  difficulty?: 'easy' | 'medium' | 'hard'\n  tags?: string[]\n  createdAt: string\n  updatedAt: string\n}\n\ninterface Vocabulary {\n  id: string\n  word: string\n  meaning: string\n  partOfSpeech: string\n  category: string\n  level: string\n}\n\ninterface Props {\n  vocabularyList: Vocabulary[]\n  examples: Example[]\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  'add-example': [vocab: Vocabulary]\n  'edit-example': [example: Example]\n  'delete-example': [example: Example]\n}>()\n\nconst { t } = useI18n()\nconst toast = useToast()\nconst vocabularyStore = useVocabularyStore()\nconst audioSystem = useAudioSystem()\nconst { getTopicName } = useTopicName()\n\n// State for expanded groups - each topic can be expanded/collapsed independently\nconst expandedGroups = ref<Record<string, boolean>>({})\n\n// State for expanded vocabularies examples - each vocabulary can expand/collapse its examples independently\nconst expandedVocabExamples = ref<Record<string, boolean>>({})\n\n// Pagination state for examples within each vocabulary\nconst examplePages = ref<Record<string, number>>({})\nconst examplesPerPage = ref(5) // 5 examples per page\n\n// Pagination state for grouped view\nconst currentPage = ref(1)\nconst topicsPerPage = ref(3) // 3 topics per page in grouped view\n\n// Audio functions\nconst playVocabularyAudio = (word: string) => {\n  audioSystem.playVocabularySound(word, 'en')\n}\n\nconst playExampleAudio = (text: string) => {\n  audioSystem.playVocabularySound(text, 'en')\n}\n\n\n\n// Load expanded state from localStorage\nconst loadExpandedState = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-expanded-topics')\n    if (saved) {\n      const parsed = JSON.parse(saved)\n      expandedGroups.value = { ...parsed }\n    }\n  } catch (error) {\n    console.error('Error loading expanded state:', error)\n  }\n}\n\n// Save expanded state to localStorage\nconst saveExpandedState = () => {\n  try {\n    localStorage.setItem('vocabulary-examples-expanded-topics', JSON.stringify(expandedGroups.value))\n  } catch (error) {\n    console.error('Error saving expanded state:', error)\n  }\n}\n\n// Load expanded vocabulary examples state from localStorage\nconst loadExpandedVocabExamplesState = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-expanded-vocab-grouped')\n    if (saved) {\n      const parsed = JSON.parse(saved)\n      expandedVocabExamples.value = { ...parsed }\n    }\n  } catch (error) {\n    console.error('Error loading expanded vocabulary examples state:', error)\n  }\n}\n\n// Save expanded vocabulary examples state to localStorage\nconst saveExpandedVocabExamplesState = () => {\n  try {\n    localStorage.setItem('vocabulary-examples-expanded-vocab-grouped', JSON.stringify(expandedVocabExamples.value))\n  } catch (error) {\n    console.error('Error saving expanded vocab examples state:', error)\n  }\n}\n\n// Load example pages state from localStorage\nconst loadExamplePagesState = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-pages-grouped')\n    if (saved) {\n      const parsed = JSON.parse(saved)\n      examplePages.value = { ...parsed }\n    }\n  } catch (error) {\n    console.error('Error loading example pages state:', error)\n  }\n}\n\n// Save example pages state to localStorage\nconst saveExamplePagesState = () => {\n  try {\n    localStorage.setItem('vocabulary-examples-pages-grouped', JSON.stringify(examplePages.value))\n  } catch (error) {\n    console.error('Error saving example pages state:', error)\n  }\n}\n\n// Group vocabulary by topic/category with pagination\nconst allGroupedVocabulary = computed(() => {\n  const groups: Record<string, Vocabulary[]> = {}\n  \n  props.vocabularyList.forEach(vocab => {\n    const topicKey = vocab.category || 'uncategorized'\n    if (!groups[topicKey]) {\n      groups[topicKey] = []\n    }\n    groups[topicKey].push(vocab)\n  })\n\n  // Sort each group by word alphabetically\n  Object.keys(groups).forEach(key => {\n    groups[key].sort((a, b) => a.word.localeCompare(b.word))\n  })\n\n  return groups\n})\n\n// Paginated grouped vocabulary\nconst groupedVocabulary = computed(() => {\n  const allGroups = allGroupedVocabulary.value\n  const topicKeys = Object.keys(allGroups)\n  \n  const start = (currentPage.value - 1) * topicsPerPage.value\n  const end = start + topicsPerPage.value\n  const paginatedTopics = topicKeys.slice(start, end)\n  \n  const paginatedGroups: Record<string, Vocabulary[]> = {}\n  paginatedTopics.forEach(topicKey => {\n    paginatedGroups[topicKey] = allGroups[topicKey]\n  })\n  \n  return paginatedGroups\n})\n\n// Pagination info for grouped view\nconst paginationInfo = computed(() => {\n  const totalTopics = Object.keys(allGroupedVocabulary.value).length\n  const totalPages = Math.ceil(totalTopics / topicsPerPage.value)\n  const startIndex = (currentPage.value - 1) * topicsPerPage.value + 1\n  const endIndex = Math.min(currentPage.value * topicsPerPage.value, totalTopics)\n  \n  return {\n    totalTopics,\n    totalPages,\n    currentPage: currentPage.value,\n    startIndex,\n    endIndex,\n    hasNext: currentPage.value < totalPages,\n    hasPrevious: currentPage.value > 1\n  }\n})\n\n// Visible pages for pagination\nconst visiblePages = computed(() => {\n  const pages: number[] = []\n  const maxVisible = 5\n  const totalP = paginationInfo.value.totalPages\n  \n  if (totalP <= maxVisible) {\n    for (let i = 1; i <= totalP; i++) {\n      pages.push(i)\n    }\n  } else {\n    const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\n    const end = Math.min(totalP, start + maxVisible - 1)\n    \n    for (let i = start; i <= end; i++) {\n      pages.push(i)\n    }\n  }\n  \n  return pages\n})\n\n// Initialize expanded state for vocabularies in current page topics\nconst initializeExpandedVocabExamplesState = () => {\n  Object.values(groupedVocabulary.value).forEach(group => {\n    group.forEach(vocab => {\n      if (expandedVocabExamples.value[vocab.id] === undefined) {\n        expandedVocabExamples.value[vocab.id] = true // Default to expanded\n      }\n      if (examplePages.value[vocab.id] === undefined) {\n        examplePages.value[vocab.id] = 1 // Default to page 1\n      }\n    })\n  })\n  saveExpandedVocabExamplesState()\n  saveExamplePagesState()\n}\n\n// Vocabulary examples accordion animation functions\nconst vocabExamplesEnter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = '0'\n  element.style.overflow = 'hidden'\n}\n\nconst vocabExamplesAfterEnter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\nconst vocabExamplesLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = element.scrollHeight + 'px'\n  element.style.overflow = 'hidden'\n  // Force reflow\n  element.offsetHeight\n  element.style.height = '0'\n}\n\nconst vocabExamplesAfterLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\n// Get examples for a vocabulary\nconst getVocabExamples = (vocabId: string) => {\n  return props.examples.filter(e => e.vocabularyId === vocabId)\n}\n\n// Get paginated examples for a vocabulary\nconst getPaginatedVocabExamples = (vocabId: string) => {\n  const allExamples = getVocabExamples(vocabId)\n  const currentPage = examplePages.value[vocabId] || 1\n  const start = (currentPage - 1) * examplesPerPage.value\n  const end = start + examplesPerPage.value\n  return allExamples.slice(start, end)\n}\n\n// Get total pages for vocabulary examples\nconst getVocabExamplePages = (vocabId: string) => {\n  const totalExamples = getVocabExamples(vocabId).length\n  return Math.ceil(totalExamples / examplesPerPage.value)\n}\n\n// Navigate example pages\nconst goToExamplePage = (vocabId: string, page: number) => {\n  const totalPages = getVocabExamplePages(vocabId)\n  if (page >= 1 && page <= totalPages) {\n    examplePages.value[vocabId] = page\n    saveExamplePagesState()\n  }\n}\n\n// Previous/next example page\nconst previousExamplePage = (vocabId: string) => {\n  const currentPage = examplePages.value[vocabId] || 1\n  if (currentPage > 1) {\n    goToExamplePage(vocabId, currentPage - 1)\n  }\n}\n\nconst nextExamplePage = (vocabId: string) => {\n  const currentPage = examplePages.value[vocabId] || 1\n  const totalPages = getVocabExamplePages(vocabId)\n  if (currentPage < totalPages) {\n    goToExamplePage(vocabId, currentPage + 1)\n  }\n}\n\n// Get example pagination info\nconst getExamplePaginationInfo = (vocabId: string) => {\n  const totalExamples = getVocabExamples(vocabId).length\n  const currentPage = examplePages.value[vocabId] || 1\n  const totalPages = getVocabExamplePages(vocabId)\n  const start = (currentPage - 1) * examplesPerPage.value + 1\n  const end = Math.min(currentPage * examplesPerPage.value, totalExamples)\n  \n  return {\n    totalExamples,\n    totalPages,\n    currentPage,\n    start,\n    end,\n    hasNext: currentPage < totalPages,\n    hasPrevious: currentPage > 1\n  }\n}\n\n// Get example count for a vocabulary\nconst getVocabExampleCount = (vocabId: string) => {\n  return props.examples.filter(e => e.vocabularyId === vocabId).length\n}\n\n// Get total examples for a topic group\nconst getTotalExamplesForTopic = (group: Vocabulary[]) => {\n  return group.reduce((total, vocab) => total + getVocabExampleCount(vocab.id), 0)\n}\n\n// Example type and difficulty helpers\nconst getTypeLabel = (type: string) => {\n  const labels = {\n    'sentence': t('vocabulary.examples.types.sentence', 'Sentence'),\n    'dialogue': t('vocabulary.examples.types.dialogue', 'Dialogue'),\n    'phrase': t('vocabulary.examples.types.phrase', 'Phrase'),\n    'context': t('vocabulary.examples.types.context', 'Context')\n  }\n  return labels[type as keyof typeof labels] || type\n}\n\nconst getTypeColorClass = (type: string) => {\n  const classes = {\n    'sentence': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n    'dialogue': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n    'phrase': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n    'context': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300'\n  }\n  return classes[type as keyof typeof classes] || 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n}\n\nconst getDifficultyLabel = (difficulty: string) => {\n  const labels = {\n    'easy': t('common.easy', 'Easy'),\n    'medium': t('vocabulary.examples.difficulty.medium', 'Medium'),\n    'hard': t('common.difficult', 'Difficult')\n  }\n  return labels[difficulty as keyof typeof labels] || difficulty\n}\n\nconst getDifficultyColorClass = (difficulty: string) => {\n  const classes = {\n    'easy': 'text-green-600 dark:text-green-400',\n    'medium': 'text-yellow-600 dark:text-yellow-400',\n    'hard': 'text-red-600 dark:text-red-400'\n  }\n  return classes[difficulty as keyof typeof classes] || 'text-gray-600 dark:text-gray-400'\n}\n\n// Accordion animation functions\nconst enter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = '0'\n  element.style.overflow = 'hidden'\n}\n\nconst afterEnter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\nconst leave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = element.scrollHeight + 'px'\n  element.style.overflow = 'hidden'\n  // Force reflow\n  element.offsetHeight\n  element.style.height = '0'\n}\n\nconst afterLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\n// Initialize with all groups expanded by default\nconst initializeExpandedState = () => {\n  const topicKeys = Object.keys(groupedVocabulary.value)\n  topicKeys.forEach(key => {\n    if (expandedGroups.value[key] === undefined) {\n      expandedGroups.value[key] = true // Default to expanded\n    }\n  })\n  saveExpandedState()\n}\n\n// Watch for changes in grouped vocabulary to initialize new topics and vocab examples\nwatch(() => groupedVocabulary.value, () => {\n  initializeExpandedState()\n  initializeExpandedVocabExamplesState()\n}, { immediate: true })\n\n// Load expanded state on mount\nonMounted(() => {\n  loadExpandedState()\n  loadExpandedVocabExamplesState()\n  loadExamplePagesState()\n})\n\nconst deleteExample = (example: any) => {\n  const toastId = toast(\n    {\n      component: ConfirmToast,\n      props: {\n        message: t('vocabulary.examples.confirmDelete', 'Are you sure you want to delete this example?'),\n        confirmText: t('common.confirm', 'Confirm'),\n        cancelText: t('common.cancel', 'Cancel'),\n        onConfirm: () => {\n          emit('delete-example', example)\n          toast.dismiss(toastId)\n          toast.success(t('vocabulary.examples.deleteSuccess', 'Example deleted successfully'))\n        },\n        onCancel: () => {\n          toast.dismiss(toastId)\n        },\n      },\n    },\n    {\n      position: POSITION.TOP_CENTER,\n      timeout: false,\n      closeButton: false,\n      draggable: false,\n      icon: false,\n    }\n  )\n}\n\n\n// Navigation functions\nconst goToPage = (page: number) => {\n  if (page >= 1 && page <= paginationInfo.value.totalPages) {\n    currentPage.value = page\n  }\n}\n\nconst previousPage = () => {\n  if (paginationInfo.value.hasPrevious) {\n    currentPage.value--\n  }\n}\n\nconst nextPage = () => {\n  if (paginationInfo.value.hasNext) {\n    currentPage.value++\n  }\n}\n\n// Toggle group expanded state\nconst toggleGroup = (topicKey: string) => {\n  expandedGroups.value[topicKey] = !expandedGroups.value[topicKey]\n  saveExpandedState()\n}\n\n// Toggle vocabulary examples visibility\nconst toggleVocabExamples = (vocabId: string) => {\n  expandedVocabExamples.value[vocabId] = !expandedVocabExamples.value[vocabId]\n  saveExpandedVocabExamplesState()\n}\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'TopicGroupAccordion'\n}\n</script>\n\n<style scoped>\n/* Accordion animation */\n.accordion-enter-active,\n.accordion-leave-active {\n  transition: height 0.3s ease-in-out;\n}\n\n.accordion-enter-from,\n.accordion-leave-to {\n  height: 0;\n  overflow: hidden;\n}\n\n.accordion-content {\n  overflow: hidden;\n}\n\n/* Vocabulary examples accordion animation */\n.vocab-examples-accordion-enter-active,\n.vocab-examples-accordion-leave-active {\n  transition: height 0.3s ease-in-out;\n}\n\n.vocab-examples-accordion-enter-from,\n.vocab-examples-accordion-leave-to {\n  height: 0;\n  overflow: hidden;\n}\n\n.vocab-examples-accordion-content {\n  overflow: hidden;\n}\n\n/* Smooth hover effects */\n.group:hover .animate-pulse-slow > div {\n  transform: scale(1.1);\n  transition: transform 0.3s ease;\n}\n</style>\n"],"file":"assets/TopicGroupAccordion-k1yE9xeB.js"}