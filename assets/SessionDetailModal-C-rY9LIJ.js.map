{"version":3,"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","names":["_createElementBlock","_createVNode","_Transition","show","_openBlock","_createElementVNode","_unref","details","_toDisplayString","_Fragment","_renderList","_normalizeClass","idx"],"ignoreList":[],"sources":["../../src/views/practice/components/SessionDetailModal.vue"],"sourcesContent":["<template>\n  <div>\n    <Transition enter-active-class=\"transition-all duration-500 ease-out\" enter-from-class=\"opacity-0\" enter-to-class=\"opacity-100\" leave-active-class=\"transition-all duration-300 ease-in\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n      <div v-if=\"show\" class=\"fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-[60] backdrop-blur-sm\">\n        <Transition enter-active-class=\"transition-all duration-500 ease-out\" enter-from-class=\"opacity-0 scale-95 translate-y-4\" enter-to-class=\"opacity-100 scale-100 translate-y-0\" leave-active-class=\"transition-all duration-300 ease-in\" leave-from-class=\"opacity-100 scale-100 translate-y-0\" leave-to-class=\"opacity-0 scale-95 translate-y-4\">\n          <div class=\"w-full max-w-5xl max-h-[82vh]\" @click.stop>\n            <div class=\"bg-white dark:bg-[#0a0a0a] shadow-2xl rounded-xl border border-gray-200 dark:border-dark-bg-mute flex flex-col max-h-[82vh]\">\n              <!-- Header -->\n              <div class=\"px-6 py-4 border-b border-gray-200 dark:border-dark-bg-mute flex-shrink-0 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a] rounded-t-xl\">\n                <div class=\"flex items-center justify-between\">\n                  <h3 class=\"text-lg md:text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                    <span class=\"w-2 h-2 bg-indigo-500 rounded-full animate-pulse\"></span>\n                    <span>{{ t('flashcard.history.details.title', 'Session Details') }}</span>\n                  </h3>\n                  <button @click=\"emit('close')\" class=\"text-gray-400 hover:text-gray-600 dark:hover:text-white/80 transition-all duration-300 hover:scale-110 hover:rotate-90 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-dark-bg-soft\" :aria-label=\"t('common.close', 'Close')\">\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Content -->\n              <div class=\"px-4 md:px-6 py-4 flex-1 overflow-y-auto min-h-0\">\n                <div v-if=\"!details\" class=\"text-center py-10\">\n                  <div class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.history.details.noData', 'No details available for this session') }}</div>\n                </div>\n\n                <div v-else class=\"space-y-4\">\n                  <!-- Summary -->\n                  <div class=\"grid grid-cols-2 md:grid-cols-4 gap-3 text-sm\">\n                    <div class=\"bg-blue-50 dark:bg-blue-900/30 rounded-lg p-3\">\n                      <div class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.history.totalCards', 'Total Cards') }}</div>\n                      <div class=\"text-gray-900 dark:text-white font-semibold\">{{ details.total }}</div>\n                    </div>\n                    <div class=\"bg-green-50 dark:bg-green-900/30 rounded-lg p-3\">\n                      <div class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.history.correct', 'Correct') }}</div>\n                      <div class=\"text-green-700 dark:text-green-400 font-semibold\">{{ details.correct }}</div>\n                    </div>\n                    <div class=\"bg-red-50 dark:bg-red-900/30 rounded-lg p-3\">\n                      <div class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.history.incorrect', 'Incorrect') }}</div>\n                      <div class=\"text-red-700 dark:text-red-400 font-semibold\">{{ details.incorrect }}</div>\n                    </div>\n                    <div class=\"bg-indigo-50 dark:bg-indigo-900/30 rounded-lg p-3\">\n                      <div class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.modes.mode', 'Mode') }}</div>\n                      <div class=\"text-indigo-700 dark:text-indigo-300 font-semibold\">{{ details.mode }}</div>\n                    </div>\n                  </div>\n\n                  <!-- Pagination Controls -->\n                  <div v-if=\"totalPages > 1\" class=\"flex items-center justify-between mb-4\">\n                    <div class=\"text-sm text-gray-500 dark:text-white/70\">\n                      {{ t('common.showing', 'Showing') }} {{ startIndex + 1 }}-{{ Math.min(endIndex, details.entries.length) }} {{ t('common.of', 'of') }} {{ details.entries.length }} {{ t('common.entries', 'entries') }}\n                    </div>\n                    <div class=\"flex items-center gap-1\">\n                      <button \n                        @click=\"currentPage--\" \n                        :disabled=\"currentPage === 1\"\n                        class=\"px-2 py-1 text-sm rounded border border-gray-300 dark:border-dark-bg-mute bg-white dark:bg-[#0a0a0a] text-gray-700 dark:text-white hover:bg-gray-50 dark:hover:bg-dark-bg-soft disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        ←\n                      </button>\n                      <span class=\"px-3 py-1 text-sm text-gray-700 dark:text-white\">\n                        {{ currentPage }} / {{ totalPages }}\n                      </span>\n                      <button \n                        @click=\"currentPage++\" \n                        :disabled=\"currentPage === totalPages\"\n                        class=\"px-2 py-1 text-sm rounded border border-gray-300 dark:border-dark-bg-mute bg-white dark:bg-[#0a0a0a] text-gray-700 dark:text-white hover:bg-gray-50 dark:hover:bg-dark-bg-soft disabled:opacity-50 disabled:cursor-not-allowed\"\n                      >\n                        →\n                      </button>\n                    </div>\n                  </div>\n\n                  <!-- Entries list -->\n                  <div class=\"divide-y divide-gray-200 dark:divide-dark-bg-mute rounded-lg overflow-hidden border border-gray-200 dark:border-dark-bg-mute\">\n                    <div v-for=\"(e, idx) in paginatedEntries\" :key=\"idx\" class=\"p-3 md:p-4 bg-white dark:bg-gray-custom\">\n                      <div class=\"flex items-start justify-between gap-3\">\n                        <div class=\"min-w-0\">\n                          <div class=\"flex items-center gap-2\">\n                            <span class=\"text-sm font-semibold text-gray-900 dark:text-white truncate\">{{ e.word }}</span>\n                            <span class=\"text-xs text-gray-500 dark:text-white/70 truncate\">— {{ e.meaningShort }}</span>\n                          </div>\n                          <div class=\"mt-1 text-sm\">\n                            <span class=\"text-gray-500 dark:text-white/70\">{{ t('flashcard.history.details.yourAnswer', 'Your answer') }}:</span>\n                            <span class=\"ml-1\" :class=\"e.isCorrect ? 'text-green-700 dark:text-green-400' : 'text-red-700 dark:text-red-400'\">{{ e.userAnswer || t('flashcard.history.details.noAnswer', 'No answer') }}</span>\n                          </div>\n                          <div class=\"text-sm text-gray-500 dark:text-white/70\">\n                            <span>{{ t('flashcard.history.details.correctAnswer', 'Correct answer') }}:</span>\n                            <span class=\"ml-1 text-gray-900 dark:text-white\">{{ e.correctAnswer }}</span>\n                          </div>\n                          <!-- Pictionary-specific details -->\n                          <div v-if=\"e.mode === 'pictionary'\" class=\"mt-3 space-y-2\">\n                            <!-- Image preview -->\n                            <div v-if=\"e.extra?.pictionary?.image\" class=\"flex items-center gap-3 cursor-zoom-in select-none\" @click=\"openZoom(e)\">\n                              <img\n                                :src=\"e.extra.pictionary.image\"\n                                :alt=\"t('flashcard.pictionary.imageAlt', 'Pictionary image')\"\n                                class=\"w-24 h-24 object-contain rounded-lg border border-gray-200 dark:border-dark-bg-mute bg-white dark:bg-dark-bg-soft\"\n                              />\n                            </div>\n                            <!-- Read-only letter slots -->\n                            <div v-if=\"e.extra?.pictionary?.slots && e.extra.pictionary.slots.length\" class=\"flex flex-wrap gap-1.5 items-center cursor-zoom-in select-none\" @click=\"openZoom(e)\">\n                              <template v-for=\"(slot, sIdx) in e.extra.pictionary.slots\">\n                                <div v-if=\"slot.separator\" :key=\"`sep-${sIdx}`\" class=\"px-1 text-base text-gray-700 dark:text-white/80 select-none\">\n                                  {{ slot.char }}\n                                </div>\n                                <div\n                                  v-else\n                                  :key=\"`box-${sIdx}`\"\n                                  class=\"w-8 h-10 sm:w-9 sm:h-11 flex items-center justify-center rounded-md border text-lg font-semibold bg-white dark:bg-dark-bg-soft text-gray-900 dark:text-white border-gray-300 dark:border-dark-bg-mute\"\n                                  :class=\"slot.fixed ? 'opacity-90' : ''\"\n                                >\n                                  <span class=\"uppercase tracking-wider\">{{ slot.char || '\\u00A0' }}</span>\n                                </div>\n                              </template>\n                            </div>\n                          </div>\n\n                          <!-- Flip Tile-specific details -->\n                          <div v-if=\"e.mode === 'flip-tile' && e.extra?.flipTile\" class=\"mt-3 space-y-3\">\n                            <!-- Main game context card -->\n                            <div class=\"bg-gradient-to-r from-emerald-50 to-teal-50 dark:from-emerald-900/20 dark:to-teal-900/20 rounded-lg border border-emerald-200 dark:border-emerald-800/50 p-4\">\n                              <!-- Category Badge & Game Info (matching FlipTileMode header) -->\n                              <div class=\"mb-4 flex items-center justify-center gap-3\">\n                                <span class=\"px-3 py-1 bg-purple-100 dark:bg-dark-bg-mute text-purple-800 dark:text-purple-300 text-sm font-medium rounded-full\">\n                                  {{ e.extra.flipTile.category ? getTopicName(e.extra.flipTile.category) : 'Unknown Category' }}\n                                </span>\n                                <!-- Flipped tiles counter recreation -->\n                                <div class=\"flex items-center gap-2\">\n                                  <span class=\"text-xs text-gray-600 dark:text-white/70\">\n                                    Tiles flipped: {{ e.extra.flipTile.flippedCount }}/{{ e.extra.flipTile.maxFlips }}\n                                  </span>\n                                </div>\n                              </div>\n                              \n                              <div class=\"flex items-center gap-2 mb-3\">\n                                <span class=\"text-sm font-medium text-emerald-700 dark:text-emerald-300\">🎯 Flip Tile Challenge</span>\n                                <span class=\"text-xs px-2 py-0.5 rounded-full bg-emerald-100 dark:bg-emerald-900/50 text-emerald-800 dark:text-emerald-200\">\n                                  {{ e.extra.flipTile.useHints ? 'Definition Mode' : 'Image Mode' }}\n                                </span>\n                              </div>\n                              \n                              <!-- Context Display: Image or Definition -->\n                              <div class=\"mb-4\">\n                                <div class=\"text-xs font-medium text-emerald-600 dark:text-emerald-400 mb-2 uppercase tracking-wider\">Practice Context</div>\n                                <div v-if=\"e.extra.flipTile.useHints || !e.extra.flipTile.image\" \n                                     class=\"bg-gradient-to-br from-teal-50 to-cyan-50 dark:from-teal-900/30 dark:to-cyan-900/30 rounded-lg p-4 border border-teal-200 dark:border-teal-700/50\">\n                                  <div class=\"flex items-start gap-3\">\n                                    <div class=\"w-8 h-8 bg-teal-100 dark:bg-teal-800/50 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                                      <svg class=\"w-4 h-4 text-teal-600 dark:text-teal-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n                                      </svg>\n                                    </div>\n                                    <div class=\"flex-1 min-w-0\">\n                                      <div class=\"text-sm font-medium text-gray-900 dark:text-white leading-relaxed\">\n                                        {{ e.extra.flipTile.meaning || 'No definition available' }}\n                                      </div>\n                                      <div v-if=\"e.extra.flipTile.category\" class=\"text-xs text-teal-600 dark:text-teal-400 mt-1\">\n                                        Category: {{ e.extra.flipTile.category }}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div v-else-if=\"e.extra.flipTile.image\" class=\"flex justify-center\">\n                                  <div class=\"relative\">\n                                    <img\n                                      :src=\"e.extra.flipTile.image\"\n                                      alt=\"Flip tile challenge image\"\n                                      class=\"max-w-full max-h-32 object-contain rounded-lg shadow-md border border-gray-200 dark:border-dark-bg-mute filter blur-sm\"\n                                    />\n                                    <div class=\"absolute inset-0 bg-black/20 rounded-lg flex items-center justify-center\">\n                                      <span class=\"text-xs text-white bg-black/60 px-2 py-1 rounded\">Blurred during practice</span>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <!-- Tile Grid Display -->\n                              <div class=\"mb-4\">\n                                <div class=\"flex items-center justify-between mb-2\">\n                                  <div class=\"text-xs font-medium text-emerald-600 dark:text-emerald-400 uppercase tracking-wider\">Letter Tiles</div>\n                                  <div class=\"text-xs text-gray-500 dark:text-white/70\">\n                                    Max flips: {{ e.extra.flipTile.maxFlips }} | All revealed at end\n                                  </div>\n                                </div>\n                                <div class=\"flex flex-wrap gap-1.5 justify-center bg-white dark:bg-[#0a0a0a] rounded-lg p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <template v-for=\"(tile, tIdx) in e.extra.flipTile.tiles\">\n                                    <div v-if=\"tile.separator\" :key=\"`sep-${tIdx}`\" class=\"px-1 text-sm text-gray-700 dark:text-white/80 flex items-center\">\n                                      {{ tile.char }}\n                                    </div>\n                                    <div v-else :key=\"`tile-${tIdx}`\" class=\"relative w-8 h-10 flex items-center justify-center rounded-lg border-2 text-sm font-bold transition-all\"\n                                         :class=\"tile.flipped \n                                           ? 'bg-white dark:bg-dark-bg-soft border-green-400 dark:border-green-500 text-gray-900 dark:text-white shadow-sm' \n                                           : 'bg-gradient-to-br from-blue-500 to-purple-600 dark:from-blue-600 dark:to-purple-700 border-blue-400 dark:border-blue-500 text-white'\">\n                                      <template v-if=\"tile.flipped\">\n                                        {{ tile.char.toUpperCase() }}\n                                      </template>\n                                      <template v-else>\n                                        <svg class=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n                                        </svg>\n                                      </template>\n                                    </div>\n                                  </template>\n                                </div>\n                              </div>\n\n                              <!-- User Input Recreation -->\n                              <div class=\"mb-4\">\n                                <div class=\"text-xs font-medium text-emerald-600 dark:text-emerald-400 mb-2 uppercase tracking-wider\">User Input Interface</div>\n                                <div class=\"max-w-md mx-auto\">\n                                  <div class=\"relative\">\n                                    <input\n                                      type=\"text\"\n                                      :value=\"e.extra.flipTile.finalUserAnswer\"\n                                      placeholder=\"Type your answer...\"\n                                      readonly\n                                      class=\"w-full px-4 py-3 text-lg font-medium text-center rounded-xl border-2 bg-white dark:bg-dark-bg-soft text-gray-900 dark:text-white border-gray-300 dark:border-dark-bg-mute cursor-not-allowed opacity-75\"\n                                    />\n                                    <button\n                                      v-if=\"e.extra.flipTile.finalUserAnswer?.trim()\"\n                                      disabled\n                                      class=\"absolute right-3 top-1/2 transform -translate-y-1/2 px-3 py-1 bg-blue-500/50 text-white text-sm font-medium rounded-lg cursor-not-allowed\"\n                                    >\n                                      Check\n                                    </button>\n                                    <div v-if=\"!e.extra.flipTile.finalUserAnswer?.trim()\" class=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-xs text-gray-400 dark:text-white/40\">\n                                      (No answer provided)\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <!-- Feedback Recreation -->\n                              <div class=\"mb-4\">\n                                <div class=\"text-xs font-medium text-emerald-600 dark:text-emerald-400 mb-2 uppercase tracking-wider\">Answer Feedback</div>\n                                <div class=\"text-center space-y-2 bg-white dark:bg-[#0a0a0a] rounded-lg p-4 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div\n                                    :class=\"[\n                                      'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n                                      e.isCorrect\n                                        ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300'\n                                        : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\n                                    ]\"\n                                  >\n                                    <svg v-if=\"e.isCorrect\" class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n                                    </svg>\n                                    <svg v-else class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n                                    </svg>\n                                    {{ e.isCorrect ? 'Correct' : 'Incorrect' }}\n                                  </div>\n                                  <div v-if=\"!e.isCorrect\" class=\"text-center\">\n                                    <p class=\"text-sm text-gray-600 dark:text-white/70\">\n                                      Correct answer:\n                                      <span class=\"font-semibold text-gray-900 dark:text-white\">{{ e.extra.flipTile.targetWord }}</span>\n                                    </p>\n                                    <p class=\"text-xs text-gray-500 dark:text-white/60 mt-1 line-clamp-2\">\n                                      {{ e.extra.flipTile.meaning }}\n                                    </p>\n                                  </div>\n                                  <div v-else class=\"text-center\">\n                                    <p class=\"text-sm text-gray-600 dark:text-white/70 line-clamp-2\">\n                                      {{ e.extra.flipTile.meaning }}\n                                    </p>\n                                  </div>\n                                </div>\n                              </div>\n\n                              <!-- User Input & Result -->\n                              <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">User Answer</div>\n                                  <div class=\"font-semibold text-gray-900 dark:text-white break-all\">\n                                    {{ e.extra.flipTile.finalUserAnswer || '(Empty)' }}\n                                  </div>\n                                </div>\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                  <div class=\"font-semibold text-gray-900 dark:text-white break-all\">{{ e.extra.flipTile.targetWord }}</div>\n                                </div>\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                  <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                    {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Quiz Mode-specific details -->\n                          <div v-if=\"e.mode === 'quiz' && e.extra?.quiz\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-8 h-96 select-none\">\n                              <div class=\"h-full flex flex-col\">\n                                <!-- Header -->\n                                <div class=\"text-center mb-4\">\n                                  <span class=\"px-4 py-2 bg-yellow-100 dark:bg-gray-800 text-yellow-800 dark:text-yellow-300 text-sm font-medium rounded-full\">\n                                    {{ e.extra.quiz.category ? getTopicName(e.extra.quiz.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Question -->\n                                <div class=\"text-center mb-4 flex-shrink-0\">\n                                  <h2 class=\"text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-2\">{{ e.extra.quiz.question }}</h2>\n                                  <p class=\"text-sm text-gray-600 dark:text-gray-300\">{{ e.extra.quiz.pronunciation }}</p>\n                                  <p class=\"text-xs sm:text-sm md:text-base text-gray-500 dark:text-gray-400 mt-1\">Choose the correct meaning:</p>\n                                </div>\n\n                                <!-- Options -->\n                                <div class=\"flex-1 flex flex-col justify-center min-h-0\">\n                                  <div class=\"flex items-center justify-center\">\n                                    <div class=\"grid grid-cols-2 gap-3 w-full max-w-lg\">\n                                      <div\n                                        v-for=\"(option, index) in e.extra.quiz.options\"\n                                        :key=\"index\"\n                                        :class=\"[\n                                          'relative p-4 text-center rounded-lg border-2 font-semibold text-sm min-h-[60px] flex items-center justify-center cursor-not-allowed',\n                                          option === e.extra.quiz.correctAnswer\n                                            ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                                            : (option === e.extra.quiz.selectedAnswer\n                                                ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                                                : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                                        ]\"\n                                      >\n                                        <!-- Letter badge -->\n                                        <span class=\"absolute top-2 left-2 w-6 h-6 rounded-full text-xs font-semibold flex items-center justify-center bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80\">\n                                          {{ String.fromCharCode(65 + index) }}\n                                        </span>\n\n                                        <!-- Answer text -->\n                                        <span class=\"text-center px-6\">{{ option }}</span>\n\n                                        <!-- Result icon -->\n                                        <span v-if=\"option === e.extra.quiz.correctAnswer\" class=\"absolute top-2 right-2 text-green-500\">\n                                          <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n                                          </svg>\n                                        </span>\n                                        <span v-else-if=\"option === e.extra.quiz.selectedAnswer && option !== e.extra.quiz.correctAnswer\" class=\"absolute top-2 right-2 text-red-500\">\n                                          <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n                                          </svg>\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.quiz.selectedAnswer || 'No answer' }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 truncate\">\n                                  {{ e.extra.quiz.correctAnswer }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Typing Mode-specific details -->\n                          <div v-if=\"e.mode === 'typing' && e.extra?.typing\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-8 h-96 select-none\">\n                              <div class=\"h-full flex flex-col\">\n                                <!-- Header -->\n                                <div class=\"text-center mb-6\">\n                                  <span class=\"px-4 py-2 bg-purple-100 dark:bg-gray-800 text-purple-800 dark:text-purple-300 text-sm font-medium rounded-full\">\n                                    {{ e.extra.typing.category ? getTopicName(e.extra.typing.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Question -->\n                                <div class=\"text-center mb-8\">\n                                  <h2 class=\"text-2xl sm:text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">{{ e.extra.typing.question }}</h2>\n                                  <p v-if=\"!e.extra.typing.isQuizMode\" class=\"text-base sm:text-lg md:text-xl text-gray-600 dark:text-gray-300\">Type the corresponding English word:</p>\n                                  <p v-else class=\"text-base sm:text-lg md:text-xl text-gray-600 dark:text-gray-300\">Choose the correct English word:</p>\n                                </div>\n\n                                <!-- Input Area -->\n                                <div class=\"flex-1 flex flex-col justify-center\">\n                                  <!-- Regular typing mode -->\n                                  <div v-if=\"!e.extra.typing.isQuizMode\" class=\"max-w-lg mx-auto w-full\">\n                                    <div class=\"relative\">\n                                      <input\n                                        :value=\"e.extra.typing.userAnswer || ''\"\n                                        type=\"text\"\n                                        disabled\n                                        readonly\n                                        class=\"w-full p-3 text-center text-xl sm:text-2xl md:text-3xl border-2 border-gray-300 dark:border-gray-600 rounded-xl bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white cursor-not-allowed\"\n                                        placeholder=\"Type the word...\"\n                                      />\n                                      \n                                      <!-- Result indicator -->\n                                      <div class=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                                        <span v-if=\"e.isCorrect\" class=\"text-green-500\">\n                                          <svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n                                          </svg>\n                                        </span>\n                                        <span v-else class=\"text-red-500\">\n                                          <svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n                                          </svg>\n                                        </span>\n                                      </div>\n                                    </div>\n                                    \n                                    <!-- Correct answer display -->\n                                    <div v-if=\"!e.isCorrect\" class=\"mt-4 text-center\">\n                                      <p class=\"text-gray-600 dark:text-gray-400 text-sm\">Correct answer:</p>\n                                      <p class=\"text-lg sm:text-xl md:text-2xl font-bold text-green-600 dark:text-green-400\">{{ e.extra.typing.correctAnswer }}</p>\n                                    </div>\n                                  </div>\n\n                                  <!-- Quiz mode -->\n                                  <div v-else class=\"w-full px-2 sm:px-3 md:px-0\">\n                                    <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-1.5 sm:gap-2 justify-items-stretch w-full\">\n                                      <div\n                                        v-for=\"(opt, idx) in e.extra.typing.options || []\"\n                                        :key=\"idx\"\n                                        class=\"px-3 py-1.5 sm:py-2 rounded-md border text-[13px] sm:text-sm transition-all duration-150 opacity-70 cursor-not-allowed text-left flex items-center gap-2 w-full min-w-0\"\n                                        :class=\"[\n                                          opt === e.extra.typing.correctAnswer\n                                            ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                                            : (opt === e.extra.typing.selectedOption\n                                                ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                                                : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                                        ]\"\n                                      >\n                                        <span class=\"inline-flex items-center justify-center w-5 h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80 shrink-0\">\n                                          {{ String.fromCharCode(65 + idx) }}\n                                        </span>\n                                        <span class=\"truncate overflow-hidden min-w-0\">{{ opt }}</span>\n                                      </div>\n                                    </div>\n                                    <div class=\"mt-3 sm:mt-4 text-center px-2\">\n                                      <p v-if=\"e.isCorrect\" class=\"text-green-600 dark:text-green-400 font-medium text-sm sm:text-base\">✓ Correct!</p>\n                                      <p v-else class=\"text-red-600 dark:text-red-400 font-medium text-sm sm:text-base break-words\">✗ Correct answer: <span class=\"font-bold\">{{ e.extra.typing.correctAnswer }}</span></p>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <!-- Submit button (disabled, for visual completeness) -->\n                                <div class=\"text-center mt-6\">\n                                  <button\n                                    v-if=\"!e.extra.typing.isQuizMode\"\n                                    disabled\n                                    class=\"bg-gray-300 dark:bg-gray-700 text-white px-8 py-3 rounded-full font-medium cursor-not-allowed\"\n                                  >\n                                    Check\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.typing.isQuizMode ? (e.extra.typing.selectedOption || 'No answer') : (e.extra.typing.userAnswer || 'No answer') }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 truncate\">\n                                  {{ e.extra.typing.correctAnswer }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Listening Mode-specific details -->\n                          <div v-if=\"e.mode === 'listening' && e.extra?.listening\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-6 sm:p-8 h-auto sm:h-96 select-none\">\n                              <div class=\"text-center h-full flex flex-col justify-center\">\n                                <!-- Header -->\n                                <div class=\"mb-6\">\n                                  <span class=\"px-3 py-1 bg-blue-100 dark:bg-gray-800 text-blue-800 dark:text-blue-300 text-xs sm:text-sm md:text-base font-medium rounded-full\">\n                                    {{ e.extra.listening.category ? getTopicName(e.extra.listening.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Audio Play Button -->\n                                <div class=\"mb-8\">\n                                  <button\n                                    disabled\n                                    class=\"bg-gray-400 text-white p-6 rounded-full cursor-not-allowed\"\n                                  >\n                                    <svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.617.816L4.846 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.846l3.537-3.816a1 1 0 011.617.816zM16 8a2 2 0 11-4 0 2 2 0 014 0zm-2 6a4 4 0 100-8 4 4 0 000 8z\" clip-rule=\"evenodd\"/>\n                                    </svg>\n                                  </button>\n                                </div>\n\n                                <!-- Instructions -->\n                                <p v-if=\"!e.extra.listening.isQuizMode\" class=\"text-base sm:text-lg md:text-xl text-gray-600 dark:text-gray-300 mb-8\">Listen and type the word you hear:</p>\n                                <p v-else class=\"text-base sm:text-lg md:text-xl text-gray-600 dark:text-gray-300 mb-8\">Choose the word you hear:</p>\n\n                                <!-- Input Area -->\n                                <div v-if=\"!e.extra.listening.isQuizMode\" class=\"max-w-md mx-auto\">\n                                  <input\n                                    :value=\"e.extra.listening.userAnswer || ''\"\n                                    type=\"text\"\n                                    disabled\n                                    readonly\n                                    class=\"w-full p-4 text-center text-lg sm:text-xl md:text-2xl border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white cursor-not-allowed\"\n                                    placeholder=\"Type the word you hear...\"\n                                  />\n                                  <div class=\"mt-4\">\n                                    <p v-if=\"e.isCorrect\" class=\"text-green-600 dark:text-green-400 font-medium\">✓ Correct!</p>\n                                    <p v-else class=\"text-red-600 dark:text-red-400 font-medium\">✗ Correct answer: {{ e.extra.listening.correctAnswer }}</p>\n                                    <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">{{ e.meaningShort }}</p>\n                                  </div>\n                                </div>\n\n                                <!-- Quiz Options -->\n                                <div v-else class=\"w-full px-2 sm:px-3 md:px-0\">\n                                  <div class=\"grid grid-cols-1 grid-2-cols-480 sm:grid-cols-2 gap-1.5 sm:gap-3 justify-items-stretch w-full max-w-none\">\n                                    <div\n                                      v-for=\"(opt, idx) in e.extra.listening.options || []\"\n                                      :key=\"idx\"\n                                      class=\"px-3 py-1.5 sm:py-2 rounded-md border text-[13px] sm:text-sm transition-all duration-150 opacity-70 cursor-not-allowed text-left flex items-center gap-2 w-full min-w-0\"\n                                      :class=\"[\n                                        opt === e.extra.listening.correctAnswer\n                                          ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                                          : (opt === e.extra.listening.selectedOption\n                                              ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                                              : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                                      ]\"\n                                    >\n                                      <span class=\"inline-flex items-center justify-center w-5 h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80 shrink-0\">\n                                        {{ String.fromCharCode(65 + idx) }}\n                                      </span>\n                                      <span class=\"truncate overflow-hidden min-w-0\">{{ opt }}</span>\n                                    </div>\n                                  </div>\n                                  <div class=\"mt-4 text-center\">\n                                    <p v-if=\"e.isCorrect\" class=\"text-green-600 dark:text-green-400 font-medium\">✓ Correct!</p>\n                                    <p v-else class=\"text-red-600 dark:text-red-400 font-medium\">✗ Correct answer: {{ e.extra.listening.correctAnswer }}</p>\n                                    <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">{{ e.meaningShort }}</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.listening.isQuizMode ? (e.extra.listening.selectedOption || 'No answer') : (e.extra.listening.userAnswer || 'No answer') }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 truncate\">\n                                  {{ e.extra.listening.correctAnswer }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Image Mode-specific details -->\n                          <div v-if=\"e.mode === 'image' && e.extra?.image\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-6 min-h-96 max-h-[500px] select-none\">\n                              <div class=\"h-full flex flex-col overflow-hidden\">\n                                <!-- Category Badge -->\n                                <div class=\"mb-4 text-center\">\n                                  <span class=\"px-3 py-1 bg-purple-100 dark:bg-dark-bg-mute text-purple-800 dark:text-purple-300 text-sm font-medium rounded-full\">\n                                    {{ e.extra.image.category ? getTopicName(e.extra.image.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Image Display -->\n                                <div class=\"flex-1 flex items-center justify-center mb-4 min-h-0\">\n                                  <div v-if=\"e.extra.image.image\" class=\"relative\">\n                                    <img \n                                      :src=\"e.extra.image.image\" \n                                      alt=\"Flashcard image\"\n                                      class=\"max-w-full max-h-40 object-contain rounded-lg shadow-md border border-gray-200 dark:border-dark-bg-mute\"\n                                    />\n                                  </div>\n                                  \n                                  <!-- No Image State -->\n                                  <div v-else class=\"flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-lg p-8 w-full max-w-sm\">\n                                    <div class=\"text-center\">\n                                      <svg class=\"mx-auto h-16 w-16 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                                      </svg>\n                                      <p class=\"text-sm text-gray-500 dark:text-white/60 mt-2\">No image available for this card.</p>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <!-- Answer Area -->\n                                <div class=\"space-y-3 flex-shrink-0\">\n                                  <!-- Typing input when quiz mode is OFF -->\n                                  <div v-if=\"!e.extra.image.isQuizMode\">\n                                    <input\n                                      :value=\"e.extra.image.userAnswer || ''\"\n                                      type=\"text\"\n                                      disabled\n                                      readonly\n                                      placeholder=\"Enter your answer...\"\n                                      class=\"w-full px-4 py-3 text-center text-lg border border-gray-300 dark:border-dark-bg-mute rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-white/50 cursor-not-allowed\"\n                                    />\n                                  </div>\n\n                                  <!-- Multiple choice when quiz mode is ON -->\n                                  <div v-else>\n                                    <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-2 justify-items-center sm:justify-items-center justify-center mx-auto max-w-[560px] sm:max-w-[520px]\">\n                                      <div\n                                        v-for=\"(opt, idx) in e.extra.image.options || []\"\n                                        :key=\"idx\"\n                                        class=\"px-3 py-2 rounded-md border text-[13px] sm:text-sm transition-all duration-150 opacity-70 cursor-not-allowed text-left flex items-center gap-2 w-full max-w-[260px] sm:max-w-[240px]\"\n                                        :class=\"[\n                                          opt === e.extra.image.correctAnswer\n                                            ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                                            : (opt === e.extra.image.selectedOption\n                                                ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                                                : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                                        ]\"\n                                      >\n                                        <span\n                                          class=\"inline-flex items-center justify-center w-5 h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80\"\n                                        >\n                                          {{ String.fromCharCode(65 + idx) }}\n                                        </span>\n                                        <span class=\"truncate\">{{ opt }}</span>\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                  <!-- Show result after answered -->\n                                  <div class=\"text-center space-y-2 max-h-32 overflow-y-auto\">\n                                    <div \n                                      :class=\"[\n                                        'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n                                        e.isCorrect \n                                          ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300' \n                                          : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\n                                      ]\"\n                                    >\n                                      <svg v-if=\"e.isCorrect\" class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                        <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n                                      </svg>\n                                      <svg v-else class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                        <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n                                      </svg>\n                                      {{ e.isCorrect ? 'Correct' : 'Incorrect' }}\n                                    </div>\n                                    \n                                    <!-- Show correct answer if wrong -->\n                                    <div v-if=\"!e.isCorrect\" class=\"text-center\">\n                                      <p class=\"text-sm text-gray-600 dark:text-white/70\">\n                                        Correct answer: \n                                        <span class=\"font-semibold text-gray-900 dark:text-white\">{{ e.extra.image.correctAnswer }}</span>\n                                      </p>\n                                      <p class=\"text-xs text-gray-500 dark:text-white/60 mt-1 line-clamp-2\">\n                                        {{ e.meaningShort }}\n                                      </p>\n                                    </div>\n                                    \n                                    <!-- Show meaning if correct -->\n                                    <div v-else class=\"text-center\">\n                                      <p class=\"text-sm text-gray-600 dark:text-white/70 line-clamp-2\">\n                                        {{ e.meaningShort }}\n                                      </p>\n                                    </div>\n                                  </div>\n\n                                  <!-- Instruction text -->\n                                  <p v-if=\"!e.extra.image.isQuizMode\" class=\"text-center text-sm text-gray-500 dark:text-white/60\">\n                                    Type the word for the image above and press Enter.\n                                  </p>\n                                  <p v-else class=\"text-center text-sm text-gray-500 dark:text-white/60\">\n                                    Choose the correct word for the image.\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.image.isQuizMode ? (e.extra.image.selectedOption || 'No answer') : (e.extra.image.userAnswer || 'No answer') }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 truncate\">\n                                  {{ e.extra.image.correctAnswer }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Flashcard Mode-specific details -->\n                          <div v-if=\"e.mode === 'flashcard' && e.extra?.flashcard\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-4 sm:p-6 md:p-8 min-h-96 h-auto select-none\">\n                              <!-- Flashcard Recreation with Flip States -->\n                              <div class=\"relative h-full\">\n                                <!-- Category Badge -->\n                                <div class=\"mb-3 sm:mb-4 md:mb-5 text-center\">\n                                  <span class=\"px-2 py-1 sm:px-3 sm:py-1 md:px-4 md:py-2 bg-blue-100 dark:bg-gray-800 text-blue-800 dark:text-blue-300 text-xs sm:text-sm md:text-base font-medium rounded-full\">\n                                    {{ e.extra.flashcard.category ? getTopicName(e.extra.flashcard.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Front Side (Word) -->\n                                <div v-if=\"!e.extra.flashcard.isFlipped\" class=\"text-center flex-1 flex flex-col justify-center\">\n                                  <h2 class=\"text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 dark:text-white mb-3 sm:mb-4 md:mb-5\">\n                                    {{ e.extra.flashcard.word }}\n                                  </h2>\n                                  <p class=\"text-sm sm:text-base md:text-lg text-gray-600 dark:text-gray-300 mb-4 sm:mb-5 md:mb-6\">\n                                    {{ e.extra.flashcard.pronunciation }}\n                                  </p>\n                                  <p class=\"text-xs sm:text-sm md:text-base text-gray-500 dark:text-gray-400\">\n                                    Card was flipped to see meaning\n                                  </p>\n                                </div>\n\n                                <!-- Back Side (Meaning) -->\n                                <div v-else class=\"text-center flex-1 flex flex-col justify-center bg-gradient-to-br from-green-400 to-green-600 dark:from-green-700 dark:to-green-900 rounded-lg p-6 text-white\">\n                                  <h3 class=\"text-base sm:text-lg md:text-xl font-bold mb-3 sm:mb-4 md:mb-5\">\n                                    {{ e.extra.flashcard.meaning }}\n                                  </h3>\n                                  <p v-if=\"e.extra.flashcard.partOfSpeech\" class=\"text-sm sm:text-base md:text-lg mb-3 sm:mb-4 md:mb-5\">\n                                    {{ t(`vocabulary.wordTypes.${e.extra.flashcard.partOfSpeech}`, e.extra.flashcard.partOfSpeech) }}\n                                  </p>\n                                  <p v-if=\"e.extra.flashcard.example\" class=\"text-xs sm:text-sm md:text-base mb-3 sm:mb-4 md:mb-5 leading-relaxed\">\n                                    {{ e.extra.flashcard.example }}\n                                  </p>\n                                  <p class=\"text-xs sm:text-sm md:text-base opacity-75\">\n                                    Card was on back side (meaning shown)\n                                  </p>\n                                </div>\n\n                                <!-- User Action Display -->\n                                <div class=\"mt-6 text-center\">\n                                  <div class=\"inline-flex items-center gap-2 px-4 py-2 rounded-lg border\" \n                                       :class=\"e.extra.flashcard.markedAs === 'easy' \n                                         ? 'bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800 text-green-700 dark:text-green-300' \n                                         : 'bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800 text-red-700 dark:text-red-300'\">\n                                    <svg v-if=\"e.extra.flashcard.markedAs === 'easy'\" class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                                    </svg>\n                                    <svg v-else class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                                    </svg>\n                                    <span class=\"font-medium\">\n                                      {{ e.extra.flashcard.markedAs === 'easy' ? 'Marked as Easy' : 'Marked as Difficult' }}\n                                    </span>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">User Action</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.flashcard.markedAs === 'easy' ? '✅ Easy' : '❌ Difficult' }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Word</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.flashcard.word }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Meaning</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.flashcard.meaning }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Scramble Words Mode-specific details -->\n                          <div v-if=\"e.mode === 'scramble-words' && e.extra?.scrambleWords\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-4 sm:p-6 md:p-8 min-h-96 h-auto select-none\">\n                              <!-- Scramble Words Recreation -->\n                              <div class=\"text-center\">\n                                <!-- Category Badge -->\n                                <div class=\"mb-3 sm:mb-4 md:mb-5\">\n                                  <span class=\"px-2 py-1 sm:px-3 sm:py-1 md:px-4 md:py-2 bg-blue-100 dark:bg-gray-800 text-blue-800 dark:text-blue-300 text-xs sm:text-sm md:text-base font-medium rounded-full\">\n                                    {{ e.extra.scrambleWords.category ? getTopicName(e.extra.scrambleWords.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Game Instruction -->\n                                <h3 class=\"text-base sm:text-lg md:text-xl font-bold text-gray-900 dark:text-white mb-2 sm:mb-3 md:mb-4\">\n                                  Arrange the letters to form the word\n                                </h3>\n                                <p class=\"text-sm sm:text-base md:text-lg text-gray-600 dark:text-gray-300 mb-4 sm:mb-5 md:mb-6\">\n                                  {{ e.extra.scrambleWords.pronunciation }}\n                                </p>\n\n                                <!-- User's assembled word display -->\n                                <div class=\"mb-4 sm:mb-5 md:mb-6\">\n                                  <div class=\"flex flex-wrap justify-center items-center gap-1 sm:gap-2 mb-2 sm:mb-3 md:mb-4 min-h-[3rem] max-w-full px-2 sm:px-0\">\n                                    <div \n                                      v-for=\"(letter, index) in e.extra.scrambleWords.assembledWord\" \n                                      :key=\"`assembled-${index}`\"\n                                      class=\"w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 border-2 border-gray-300 dark:border-dark-bg-mute rounded-lg flex items-center justify-center bg-blue-50 dark:bg-[#0f0f0f] text-lg sm:text-xl md:text-2xl font-bold text-gray-900 dark:text-white\"\n                                    >\n                                      {{ letter }}\n                                    </div>\n                                    <!-- Empty slots for remaining letters -->\n                                    <div \n                                      v-for=\"n in Math.max(0, e.extra.scrambleWords.targetWord.length - e.extra.scrambleWords.assembledWord.length)\" \n                                      :key=\"`empty-${n}`\"\n                                      class=\"w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 border-2 border-dashed border-gray-300 dark:border-dark-bg-mute rounded-lg bg-gray-50 dark:bg-[#0f0f0f]\"\n                                    ></div>\n                                  </div>\n\n                                  <!-- Result Feedback -->\n                                  <div class=\"text-center max-w-full px-2\">\n                                    <div v-if=\"e.extra.scrambleWords.isCorrect\" class=\"text-green-600 dark:text-green-400\">\n                                      <p class=\"font-semibold text-sm sm:text-base mb-2\">\n                                        ✅ Correct!\n                                      </p>\n                                      <div class=\"bg-green-50 dark:bg-[#0f0f0f] border border-green-200 dark:border-dark-bg-mute rounded-lg p-3 sm:p-4\">\n                                        <p class=\"text-green-700 dark:text-green-400 font-medium text-sm sm:text-base\">\n                                          {{ e.extra.scrambleWords.meaning }}\n                                        </p>\n                                        <p v-if=\"e.extra.scrambleWords.partOfSpeech\" class=\"text-green-600 dark:text-green-500 text-xs sm:text-sm mt-1 opacity-80\">\n                                          {{ t(`vocabulary.wordTypes.${e.extra.scrambleWords.partOfSpeech}`, e.extra.scrambleWords.partOfSpeech) }}\n                                        </p>\n                                      </div>\n                                    </div>\n                                    <div v-else class=\"text-red-600 dark:text-red-400\">\n                                      <p class=\"font-semibold text-sm sm:text-base mb-2\">\n                                        ❌ Incorrect!\n                                      </p>\n                                      <div class=\"bg-red-50 dark:bg-[#0f0f0f] border border-red-200 dark:border-dark-bg-mute rounded-lg p-3 sm:p-4\">\n                                        <p class=\"text-red-700 dark:text-red-400 font-bold text-base sm:text-lg mb-1\">\n                                          {{ e.extra.scrambleWords.targetWord.toUpperCase() }}\n                                        </p>\n                                        <p class=\"text-red-600 dark:text-red-500 text-sm sm:text-base\">\n                                          {{ e.extra.scrambleWords.meaning }}\n                                        </p>\n                                        <p v-if=\"e.extra.scrambleWords.partOfSpeech\" class=\"text-red-500 dark:text-red-600 text-xs sm:text-sm mt-1 opacity-80\">\n                                          {{ t(`vocabulary.wordTypes.${e.extra.scrambleWords.partOfSpeech}`, e.extra.scrambleWords.partOfSpeech) }}\n                                        </p>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n\n                                <!-- Scrambled letters display (readonly) -->\n                                <div class=\"flex justify-center flex-wrap gap-2 sm:gap-3 md:gap-4 mb-4 sm:mb-5 md:mb-6 px-2 sm:px-4 md:px-6 max-w-full\">\n                                  <div \n                                    v-for=\"(letter, index) in e.extra.scrambleWords.scrambledLetters\" \n                                    :key=\"`scrambled-${index}`\"\n                                    class=\"w-8 h-8 sm:w-10 sm:h-10 md:w-12 md:h-12 border-2 border-gray-400 dark:border-dark-bg-soft rounded-lg flex items-center justify-center bg-gray-100 dark:bg-[#0f0f0f] text-lg sm:text-xl md:text-2xl font-bold text-gray-500 dark:text-gray-400 cursor-not-allowed opacity-75\"\n                                  >\n                                    {{ letter }}\n                                  </div>\n                                </div>\n\n                                <!-- Control buttons (disabled) -->\n                                <div class=\"flex flex-wrap justify-center gap-1.5 sm:gap-3 md:gap-4 px-2 sm:px-4 max-w-full\">\n                                  <button disabled class=\"px-2 py-1 sm:px-3 sm:py-2 md:px-4 md:py-2.5 bg-gray-400 text-white text-xs sm:text-sm md:text-base font-semibold rounded-md sm:rounded-lg cursor-not-allowed opacity-50 flex items-center gap-1 sm:gap-2\">\n                                    <svg class=\"w-3 h-3 sm:w-4 sm:h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path fill-rule=\"evenodd\" d=\"M6.707 4.879A3 3 0 018.828 4H15a3 3 0 013 3v6a3 3 0 01-3 3H8.828a3 3 0 01-2.12-.879l-4.415-4.414a1 1 0 010-1.414l4.414-4.414zm4 3.707a1 1 0 00-1.414-1.414L8 8.586 6.707 7.293a1 1 0 10-1.414 1.414L6.586 10l-1.293 1.293a1 1 0 101.414 1.414L8 11.414l1.293 1.293a1 1 0 001.414-1.414L9.414 10l1.293-1.293z\" clip-rule=\"evenodd\"/>\n                                    </svg>\n                                    <span class=\"hidden sm:inline\">Backspace</span>\n                                  </button>\n                                  <button disabled class=\"px-2 py-1 sm:px-4 sm:py-2 md:px-5 md:py-2.5 bg-gray-400 text-white text-xs sm:text-sm md:text-base font-semibold rounded-md sm:rounded-lg cursor-not-allowed opacity-50\">\n                                    Clear\n                                  </button>\n                                  <button disabled class=\"px-2 py-1 sm:px-4 sm:py-2 md:px-5 md:py-2.5 bg-gray-400 text-white text-xs sm:text-sm md:text-base font-semibold rounded-md sm:rounded-lg cursor-not-allowed opacity-50\">\n                                    Check\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.scrambleWords.userAnswer || 'No answer' }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Correct Answer</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.scrambleWords.targetWord }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.extra.scrambleWords.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.extra.scrambleWords.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Pronunciation Mode-specific details -->\n                          <div v-if=\"e.mode === 'pronunciation' && e.extra?.pronunciation\" class=\"mt-3 space-y-3\">\n                            <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-4 sm:p-6 md:p-8 min-h-96 h-auto select-none overflow-hidden\">\n                              <!-- Traditional Pronunciation Mode Recreation -->\n                              <div class=\"text-center h-full flex flex-col justify-start md:justify-center items-center gap-3 md:gap-4\">\n                                <!-- Category Badge -->\n                                <div class=\"mb-6\">\n                                  <span class=\"px-2.5 py-0.5 bg-blue-100 dark:bg-dark-bg-mute text-blue-800 dark:text-blue-300 text-xs sm:text-sm font-medium rounded-full\">\n                                    {{ e.extra.pronunciation.category ? getTopicName(e.extra.pronunciation.category) : 'Unknown Category' }}\n                                  </span>\n                                </div>\n\n                                <!-- Target Word -->\n                                <h2 class=\"text-3xl sm:text-4xl md:text-5xl leading-tight font-bold text-gray-900 dark:text-white mb-3 md:mb-4 break-words\">\n                                  {{ e.extra.pronunciation.targetWord }}\n                                </h2>\n\n                                <!-- Pronunciation -->\n                                <p class=\"text-base sm:text-lg md:text-xl text-gray-500 dark:text-white/70 mb-6 md:mb-8 break-words\">\n                                  {{ e.extra.pronunciation.pronunciation || 'No pronunciation available' }}\n                                </p>\n\n                                <!-- Disabled Recording Button -->\n                                <div>\n                                  <button\n                                    disabled\n                                    class=\"bg-gray-400 text-white p-4 sm:p-5 md:p-6 rounded-full cursor-not-allowed opacity-50\"\n                                  >\n                                    <svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                      <path d=\"M7 4a3 3 0 016 0v6a3 3 0 11-6 0V4z\" />\n                                      <path d=\"M5.5 9.5a.5.5 0 01.5.5v1a4 4 0 004 4h.5a.5.5 0 010 1h-.5a5 5 0 01-5-5v-1a.5.5 0 01.5-.5z\" />\n                                      <path d=\"M10 18a5 5 0 005-5h-1a4 4 0 01-4 4v1z\" />\n                                    </svg>\n                                  </button>\n                                </div>\n\n                                <!-- Recording Result -->\n                                <div class=\"mt-5 sm:mt-6 md:mt-8\">\n                                  <p v-if=\"e.extra.pronunciation.userPronunciation\" class=\"text-gray-600 dark:text-white/80 text-sm sm:text-base break-words\">\n                                    Your Recording: <span class=\"font-medium text-gray-800 dark:text-white\">{{ e.extra.pronunciation.userPronunciation }}</span>\n                                  </p>\n                                  <div class=\"mt-4\">\n                                    <p v-if=\"e.extra.pronunciation.isCorrect\" class=\"text-lg sm:text-xl md:text-2xl font-bold text-green-600 dark:text-green-400\">✓ Correct!</p>\n                                    <p v-else class=\"text-lg sm:text-xl md:text-2xl font-bold text-red-600 dark:text-red-400\">Try Again!</p>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n\n                            <!-- Result Summary -->\n                            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-3 text-sm\">\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Your Pronunciation</div>\n                                <div class=\"font-semibold text-gray-900 dark:text-white truncate\">\n                                  {{ e.extra.pronunciation.userPronunciation || 'No recording' }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Target Word</div>\n                                <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 truncate\">\n                                  {{ e.extra.pronunciation.targetWord }}\n                                </div>\n                              </div>\n                              <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-3 border border-gray-200 dark:border-dark-bg-mute\">\n                                <div class=\"text-gray-500 dark:text-white/70 text-xs font-medium mb-1\">Result</div>\n                                <div class=\"font-semibold\" :class=\"e.isCorrect ? 'text-emerald-600 dark:text-emerald-400' : 'text-red-600 dark:text-red-400'\">\n                                  {{ e.isCorrect ? '✓ Correct' : '✗ Incorrect' }}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <!-- Snake Game-specific details -->\n                          <div v-if=\"e.mode === 'snake-game' && e.extra?.snakeGame\" class=\"mt-3 space-y-3\">\n                            <!-- Animated snake action card -->\n                            <div class=\"bg-gradient-to-r from-emerald-50 to-green-50 dark:from-emerald-900/20 dark:to-green-900/20 rounded-lg border border-emerald-200 dark:border-emerald-800/50 p-3 animate-fade-in-up\">\n                              <div class=\"flex items-center gap-3\">\n                                <!-- Snake icon with animation -->\n                                <div class=\"flex-shrink-0\">\n                                  <div class=\"w-10 h-10 rounded-full flex items-center justify-center animate-pulse\"\n                                       :class=\"e.extra.snakeGame.wasCorrect ? 'bg-emerald-100 dark:bg-emerald-900/50' : 'bg-red-100 dark:bg-red-900/50'\">\n                                    <!-- Snake eating animation -->\n                                    <svg v-if=\"e.extra.snakeGame.wasCorrect\" class=\"w-6 h-6 text-emerald-600 dark:text-emerald-400 animate-bounce\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                                    </svg>\n                                    <!-- Wrong bite animation -->\n                                    <svg v-else class=\"w-6 h-6 text-red-600 dark:text-red-400 animate-ping\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/>\n                                    </svg>\n                                  </div>\n                                </div>\n\n                                <!-- Action details -->\n                                <div class=\"flex-1 min-w-0\">\n                                  <div class=\"flex items-center gap-2\">\n                                    <span class=\"text-sm font-medium\"\n                                          :class=\"e.extra.snakeGame.wasCorrect ? 'text-emerald-700 dark:text-emerald-300' : 'text-red-700 dark:text-red-300'\">\n                                      {{ e.extra.snakeGame.wasCorrect ? '🐍 Ate Correct Food' : '🐍 Ate Wrong Food' }}\n                                    </span>\n                                    <span class=\"text-xs px-2 py-0.5 rounded-full\"\n                                          :class=\"e.extra.snakeGame.foodType === 'primary' \n                                            ? 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/50 dark:text-emerald-200' \n                                            : 'bg-amber-100 text-amber-800 dark:bg-amber-900/50 dark:text-amber-200'\">\n                                      {{ e.extra.snakeGame.foodType === 'primary' ? 'Target Food' : 'Decoy Food' }}\n                                    </span>\n                                  </div>\n                                  <div class=\"text-xs text-gray-500 dark:text-white/70 mt-1\">\n                                    Position: ({{ e.extra.snakeGame.position.x }}, {{ e.extra.snakeGame.position.y }})\n                                  </div>\n                                </div>\n                              </div>\n\n                              <!-- Game statistics with animated counters -->\n                              <div class=\"grid grid-cols-2 md:grid-cols-4 gap-3 mt-3 text-xs\">\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-2 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70\">Snake Length</div>\n                                  <div class=\"font-semibold text-gray-900 dark:text-white animate-counter\">\n                                    {{ e.extra.snakeGame.snakeLength }}\n                                  </div>\n                                </div>\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-2 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70\">Game Score</div>\n                                  <div class=\"font-semibold text-emerald-600 dark:text-emerald-400 animate-counter\">\n                                    {{ e.extra.snakeGame.gameScore }}\n                                  </div>\n                                </div>\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-2 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70\">Words Done</div>\n                                  <div class=\"font-semibold text-blue-600 dark:text-blue-400 animate-counter\">\n                                    {{ e.extra.snakeGame.wordsCompleted }}\n                                  </div>\n                                </div>\n                                <div class=\"bg-white dark:bg-[#0a0a0a] rounded-md p-2 border border-gray-200 dark:border-dark-bg-mute\">\n                                  <div class=\"text-gray-500 dark:text-white/70\">Wrong Bites</div>\n                                  <div class=\"font-semibold text-red-600 dark:text-red-400 animate-counter\">\n                                    {{ e.extra.snakeGame.wrongEatenCount }}\n                                  </div>\n                                </div>\n                              </div>\n\n                              <!-- Visual food position indicator -->\n                              <div class=\"mt-3\">\n                                <div class=\"text-xs text-gray-500 dark:text-white/70 mb-2\">Snake Movement & Food Position:</div>\n                                <SnakeReplay :data=\"e.extra.snakeGame\" />\n                                <!-- Movement summary -->\n                                <div class=\"mt-2 text-xs text-gray-500 dark:text-white/70 flex items-center gap-4\">\n                                  <span>🐍 Length: {{ e.extra.snakeGame.snakeLength }}</span>\n                                  <span v-if=\"e.extra.snakeGame.direction\">\n                                    Direction: {{ getDirectionName(e.extra.snakeGame.direction) }}\n                                  </span>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div v-if=\"e.notes\" class=\"text-xs text-gray-500 dark:text-white/70 mt-1\">{{ e.notes }}</div>\n                        </div>\n                        <div class=\"flex items-center gap-2\">\n                          <span class=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs\"\n                                :class=\"e.isCorrect ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\">\n                            <svg v-if=\"e.isCorrect\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"w-4 h-4\" fill=\"currentColor\"><path d=\"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\n                            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"w-4 h-4\" fill=\"currentColor\"><path d=\"m19 6.41-1.41-1.41L12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/></svg>\n                            <span>{{ e.isCorrect ? t('flashcard.history.correct', 'Correct') : t('flashcard.history.incorrect', 'Incorrect') }}</span>\n                          </span>\n                          <span class=\"text-xs text-gray-500 dark:text-white/70\">{{ new Date(e.timestamp).toLocaleString() }}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </Transition>\n        <!-- Zoom Modal Overlay (pictionary) -->\n        <Transition enter-active-class=\"transition-all duration-500 ease-out\" enter-from-class=\"opacity-0\" enter-to-class=\"opacity-100\" leave-active-class=\"transition-all duration-300 ease-in\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n          <div v-if=\"zoomOpen\" class=\"fixed inset-0 z-[70] bg-black/60 backdrop-blur-sm flex items-center justify-center p-4\">\n            <Transition enter-active-class=\"transition-all duration-500 ease-out\" enter-from-class=\"opacity-0 scale-95 translate-y-4\" enter-to-class=\"opacity-100 scale-100 translate-y-0\" leave-active-class=\"transition-all duration-300 ease-in\" leave-from-class=\"opacity-100 scale-100 translate-y-0\" leave-to-class=\"opacity-0 scale-95 translate-y-4\">\n              <div class=\"w-full max-w-4xl max-h-[86vh]\" @click.stop>\n                <div class=\"bg-white dark:bg-[#0a0a0a] shadow-2xl rounded-xl border border-gray-200 dark:border-dark-bg-mute flex flex-col max-h-[86vh]\">\n                  <div class=\"px-6 py-4 border-b border-gray-200 dark:border-dark-bg-mute flex-shrink-0 bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a] rounded-t-xl\">\n                    <div class=\"flex items-center justify-between\">\n                      <h3 class=\"text-lg md:text-xl font-semibold text-gray-900 dark:text-white flex items-center gap-2\">\n                        <span class=\"w-2 h-2 bg-indigo-500 rounded-full animate-pulse\"></span>\n                        <span>{{ t('flashcard.pictionary.preview', 'Pictionary Preview') }}</span>\n                      </h3>\n                      <button @click=\"closeZoom\" class=\"text-gray-400 hover:text-gray-600 dark:hover:text-white/80 transition-all duration-300 hover:scale-110 hover:rotate-90 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-dark-bg-soft\" :aria-label=\"t('common.close', 'Close')\">\n                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                  <div class=\"p-4 md:p-6 overflow-y-auto min-h-0\">\n                    <div class=\"flex flex-col md:flex-row gap-6 items-start\">\n                      <!-- Large Image -->\n                      <div v-if=\"zoomImage\" class=\"flex-shrink-0\">\n                        <img :src=\"zoomImage\" :alt=\"t('flashcard.pictionary.imageAlt', 'Pictionary image')\" class=\"w-[320px] h-[240px] md:w-[420px] md:h-[300px] object-contain rounded-lg border border-gray-200 dark:border-dark-bg-mute bg-white dark:bg-dark-bg-soft\" />\n                      </div>\n                      <!-- Large Slots -->\n                      <div class=\"flex-1\">\n                        <div class=\"flex flex-wrap gap-2 items-center\">\n                          <template v-for=\"(slot, sIdx) in zoomSlots\">\n                            <div v-if=\"slot.separator\" :key=\"`sep-${sIdx}`\" class=\"px-1 text-xl text-gray-700 dark:text-white/80 select-none\">\n                              {{ slot.char }}\n                            </div>\n                            <div v-else :key=\"`box-${sIdx}`\" class=\"w-12 h-14 sm:w-14 sm:h-16 flex items-center justify-center rounded-lg border text-2xl font-semibold bg-white dark:bg-dark-bg-soft text-gray-900 dark:text-white border-gray-300 dark:border-dark-bg-mute\" :class=\"slot.fixed ? 'opacity-90' : ''\">\n                              <span class=\"uppercase tracking-wider\">{{ slot.char || '\\u00A0' }}</span>\n                            </div>\n                          </template>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Transition>\n          </div>\n        </Transition>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\nimport { ref, defineAsyncComponent, computed } from 'vue'\nimport type { SessionDetails } from '../composables/usePracticeSessionDetails'\nimport { getTopicName } from '../../../utils/topicUtils'\nconst SnakeReplay = defineAsyncComponent(() => import('./SnakeReplay.vue'))\n\nconst props = defineProps<{\n  show: boolean\n  details: SessionDetails | null\n}>()\n\nconst emit = defineEmits(['close'])\n\nconst { t } = useI18n()\n\n// Pagination state\nconst currentPage = ref(1)\nconst itemsPerPage = 3\n\n// Computed properties for pagination\nconst totalPages = computed(() => {\n  if (!props.details?.entries) return 0\n  return Math.ceil(props.details.entries.length / itemsPerPage)\n})\n\nconst startIndex = computed(() => (currentPage.value - 1) * itemsPerPage)\nconst endIndex = computed(() => startIndex.value + itemsPerPage)\n\nconst paginatedEntries = computed(() => {\n  if (!props.details?.entries) return []\n  return props.details.entries.slice(startIndex.value, endIndex.value)\n})\n\n// Zoom state for pictionary preview\ntype ZoomSlot = { char: string; fixed: boolean; separator?: boolean }\nconst zoomOpen = ref(false)\nconst zoomImage = ref<string | undefined>(undefined)\nconst zoomSlots = ref<ZoomSlot[]>([])\n\nconst openZoom = (entry: any) => {\n  // Guard for entries without extra data\n  const img = entry?.extra?.pictionary?.image as string | undefined\n  const s: ZoomSlot[] = (entry?.extra?.pictionary?.slots || []).map((x: any) => ({\n    char: x.char,\n    fixed: !!x.fixed,\n    separator: !!x.separator,\n  }))\n  zoomImage.value = img\n  zoomSlots.value = s\n  zoomOpen.value = true\n}\n\nconst closeZoom = () => {\n  zoomOpen.value = false\n}\n\nconst getDirectionName = (direction: { x: number; y: number }) => {\n  if (direction.x === 1) return '→ Right'\n  if (direction.x === -1) return '← Left'\n  if (direction.y === 1) return '↓ Down'\n  if (direction.y === -1) return '↑ Up'\n  return '⏸ Stopped'\n}\n</script>\n\n"],"file":"assets/SessionDetailModal-C-rY9LIJ.js"}