{"version":3,"file":"useAudioSystem-CpzX5TW1.js","sources":["../../src/views/practice/composables/bubble-shooter/useAudioSystem.ts"],"sourcesContent":["import type { IAudioSystem } from './interfaces'\nimport { useVoiceStore } from '@/stores/voiceStore'\n\nexport class AudioSystem implements IAudioSystem {\n  private voiceStore = useVoiceStore()\n  public createAudioContext(): AudioContext | null {\n    try {\n      return new (window.AudioContext || (window as any).webkitAudioContext)()\n    } catch (error) {\n      console.log('Audio context not available')\n      return null\n    }\n  }\n\n  public playImpactSound(): void {\n    const audioContext = this.createAudioContext()\n    if (!audioContext) return\n    \n    try {\n      const oscillator = audioContext.createOscillator()\n      const gainNode = audioContext.createGain()\n      \n      oscillator.connect(gainNode)\n      gainNode.connect(audioContext.destination)\n      \n      // Âm thanh \"thop\" nhẹ khi chạm\n      oscillator.frequency.setValueAtTime(400, audioContext.currentTime)\n      oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.1)\n      \n      gainNode.gain.setValueAtTime(0.15, audioContext.currentTime)\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.15)\n      \n      oscillator.type = 'sine'\n      oscillator.start(audioContext.currentTime)\n      oscillator.stop(audioContext.currentTime + 0.15)\n    } catch (error) {\n      console.log('Impact sound failed:', error)\n    }\n  }\n\n  public playExplosionSound(): void {\n    const audioContext = this.createAudioContext()\n    if (!audioContext) return\n    \n    try {\n      const oscillator = audioContext.createOscillator()\n      const gainNode = audioContext.createGain()\n      const filterNode = audioContext.createBiquadFilter()\n      \n      oscillator.connect(filterNode)\n      filterNode.connect(gainNode)\n      gainNode.connect(audioContext.destination)\n      \n      // Âm thanh \"pop\" to hơn khi nổ\n      oscillator.frequency.setValueAtTime(800, audioContext.currentTime)\n      oscillator.frequency.exponentialRampToValueAtTime(100, audioContext.currentTime + 0.3)\n      \n      // Filter để tạo hiệu ứng nổ\n      filterNode.frequency.setValueAtTime(2000, audioContext.currentTime)\n      filterNode.frequency.exponentialRampToValueAtTime(500, audioContext.currentTime + 0.3)\n      filterNode.Q.setValueAtTime(3, audioContext.currentTime)\n      \n      gainNode.gain.setValueAtTime(0.2, audioContext.currentTime)\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.3)\n      \n      oscillator.type = 'sawtooth'\n      oscillator.start(audioContext.currentTime)\n      oscillator.stop(audioContext.currentTime + 0.3)\n    } catch (error) {\n      console.log('Explosion sound failed:', error)\n    }\n  }\n\n  public playBounceSound(): void {\n    const audioContext = this.createAudioContext()\n    if (!audioContext) return\n    \n    try {\n      const oscillator = audioContext.createOscillator()\n      const gainNode = audioContext.createGain()\n      \n      oscillator.connect(gainNode)\n      gainNode.connect(audioContext.destination)\n      \n      // Âm thanh \"ping\" khi chạm tường\n      oscillator.frequency.setValueAtTime(600, audioContext.currentTime)\n      oscillator.frequency.exponentialRampToValueAtTime(400, audioContext.currentTime + 0.08)\n      \n      gainNode.gain.setValueAtTime(0.1, audioContext.currentTime)\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.08)\n      \n      oscillator.type = 'triangle'\n      oscillator.start(audioContext.currentTime)\n      oscillator.stop(audioContext.currentTime + 0.08)\n    } catch (error) {\n      console.log('Bounce sound failed:', error)\n    }\n  }\n\n  public playVocabularySound(text: string, language: 'en' | 'vi' | 'ko' = 'en'): void {\n    try {\n      // Kiểm tra xem browser có hỗ trợ Speech Synthesis API không\n      if (!('speechSynthesis' in window)) {\n        console.log('Speech Synthesis not supported')\n        return\n      }\n\n      // Hủy bỏ bất kỳ speech nào đang phát\n      window.speechSynthesis.cancel()\n\n      // Use voice store to create utterance with user's selected voice settings\n      const utterance = this.voiceStore.createUtterance(text)\n      \n      // Override language if specific locale is requested\n      if (language === 'vi') {\n        utterance.lang = 'vi-VN'\n        // For Vietnamese, find a Vietnamese voice if available\n        const vietnameseVoices = window.speechSynthesis.getVoices().filter(voice => \n          voice.lang.startsWith('vi')\n        )\n        if (vietnameseVoices.length > 0) {\n          utterance.voice = vietnameseVoices[0]\n        }\n      } else if (language === 'ko') {\n        utterance.lang = 'ko-KR'\n        // For Korean, find a Korean voice if available\n        const koreanVoices = window.speechSynthesis.getVoices().filter(voice => \n          voice.lang.startsWith('ko')\n        )\n        if (koreanVoices.length > 0) {\n          utterance.voice = koreanVoices[0]\n        }\n      }\n\n      // Phát âm thanh với voice settings từ voice selector\n      window.speechSynthesis.speak(utterance)\n    } catch (error) {\n      console.log('Vocabulary sound failed:', error)\n    }\n  }\n}\n\nexport const useAudioSystem = (): IAudioSystem => {\n  return new AudioSystem()\n}\n"],"names":[],"mappings":"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"}