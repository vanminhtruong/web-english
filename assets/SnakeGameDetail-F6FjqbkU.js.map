{"version":3,"mappings":"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","names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","entry","_unref","_normalizeClass","_Fragment","_renderList","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/component-child/SessionDetailModal/SnakeGameDetail.vue"],"sourcesContent":["<template>\n  <!-- Snake Game Mode-specific details -->\n  <div class=\"mt-2 sm:mt-3 space-y-2 sm:space-y-3\">\n    <div class=\"bg-white dark:bg-[#0a0a0a] rounded-lg sm:rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-3 sm:p-4 md:p-6 lg:p-8 min-h-[280px] xs:min-h-[320px] sm:h-auto md:h-96 select-none\">\n      <div class=\"text-center h-full flex flex-col justify-center\">\n        <!-- Header -->\n        <div class=\"mb-4 sm:mb-6\">\n          <span class=\"px-2 py-1 xs:px-3 xs:py-1 bg-green-100 dark:bg-gray-800 text-green-800 dark:text-green-300 text-xs sm:text-sm font-medium rounded-full truncate\">\n            {{ entry.extra.snakeGame.category ? getTopicName(entry.extra.snakeGame.category) : 'Snake Game' }}\n          </span>\n        </div>\n\n        <!-- Game Stats -->\n        <div class=\"mb-6 sm:mb-8 space-y-2 sm:space-y-3\">\n          <h3 class=\"text-lg xs:text-xl sm:text-2xl font-bold text-gray-900 dark:text-white\">Game Completed</h3>\n          \n          <!-- Score and stats grid -->\n          <div class=\"grid grid-cols-2 gap-2 xs:gap-3 sm:gap-4 max-w-xs xs:max-w-sm mx-auto\">\n            <div class=\"bg-blue-50 dark:bg-blue-900/20 p-2 xs:p-3 rounded-lg border border-blue-200 dark:border-blue-800\">\n              <p class=\"text-xs xs:text-sm text-blue-600 dark:text-blue-400 font-medium\">Score</p>\n              <p class=\"text-lg xs:text-xl sm:text-2xl font-bold text-blue-800 dark:text-blue-300\">{{ entry.extra.snakeGame.score || 0 }}</p>\n            </div>\n            \n            <div class=\"bg-green-50 dark:bg-green-900/20 p-2 xs:p-3 rounded-lg border border-green-200 dark:border-green-800\">\n              <p class=\"text-xs xs:text-sm text-green-600 dark:text-green-400 font-medium\">Words</p>\n              <p class=\"text-lg xs:text-xl sm:text-2xl font-bold text-green-800 dark:text-green-300\">{{ entry.extra.snakeGame.wordsCollected || 0 }}</p>\n            </div>\n            \n            <div class=\"bg-purple-50 dark:bg-purple-900/20 p-2 xs:p-3 rounded-lg border border-purple-200 dark:border-purple-800\">\n              <p class=\"text-xs xs:text-sm text-purple-600 dark:text-purple-400 font-medium\">Time</p>\n              <p class=\"text-lg xs:text-xl sm:text-2xl font-bold text-purple-800 dark:text-purple-300\">{{ formatTime(entry.extra.snakeGame.gameTime) }}</p>\n            </div>\n            \n            <div class=\"bg-orange-50 dark:bg-orange-900/20 p-2 xs:p-3 rounded-lg border border-orange-200 dark:border-orange-800\">\n              <p class=\"text-xs xs:text-sm text-orange-600 dark:text-orange-400 font-medium\">Level</p>\n              <p class=\"text-lg xs:text-xl sm:text-2xl font-bold text-orange-800 dark:text-orange-300\">{{ entry.extra.snakeGame.level || 1 }}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Game Result -->\n        <div class=\"mb-4 sm:mb-6\">\n          <div class=\"inline-flex items-center px-3 xs:px-4 py-2 rounded-full text-sm xs:text-base font-medium\"\n               :class=\"entry.isCorrect \n                 ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300'\n                 : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\">\n            <svg v-if=\"entry.isCorrect\" class=\"w-4 h-4 xs:w-5 xs:h-5 mr-1 xs:mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n            </svg>\n            <svg v-else class=\"w-4 h-4 xs:w-5 xs:h-5 mr-1 xs:mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n            </svg>\n            {{ entry.isCorrect ? 'Great game!' : 'Game over!' }}\n          </div>\n        </div>\n\n        <!-- Collected Words List (if available) -->\n        <div v-if=\"entry.extra.snakeGame.collectedWords && entry.extra.snakeGame.collectedWords.length > 0\" class=\"max-w-xs xs:max-w-sm sm:max-w-md mx-auto\">\n          <h4 class=\"text-sm xs:text-base font-semibold text-gray-900 dark:text-white mb-2 xs:mb-3\">Words Collected:</h4>\n          <div class=\"flex flex-wrap gap-1 xs:gap-1.5 justify-center\">\n            <span \n              v-for=\"word in entry.extra.snakeGame.collectedWords.slice(0, 8)\"\n              :key=\"word\"\n              class=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 text-xs rounded-md\"\n            >\n              {{ word }}\n            </span>\n            <span \n              v-if=\"entry.extra.snakeGame.collectedWords.length > 8\"\n              class=\"px-2 py-1 bg-gray-200 dark:bg-gray-600 text-gray-600 dark:text-gray-400 text-xs rounded-md\"\n            >\n              +{{ entry.extra.snakeGame.collectedWords.length - 8 }} more\n            </span>\n          </div>\n        </div>\n\n        <!-- Replay Button (disabled for history view) -->\n        <div class=\"mt-4 xs:mt-6\">\n          <button\n            disabled\n            class=\"px-4 xs:px-6 py-2 xs:py-3 bg-gray-400 text-white text-sm xs:text-base font-medium rounded-lg cursor-not-allowed\"\n          >\n            Replay Game\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Result Summary -->\n    <ResultSummary\n      :user-answer=\"`Score: ${entry.extra.snakeGame.score || 0}, Words: ${entry.extra.snakeGame.wordsCollected || 0}`\"\n      :correct-answer=\"`Game completed in ${formatTime(entry.extra.snakeGame.gameTime)}`\"\n      :is-correct=\"entry.isCorrect\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { getTopicName } from '../../../../../utils/topicUtils'\nimport { defineAsyncComponent } from 'vue'\nconst ResultSummary = defineAsyncComponent(()=>import('./ResultSummary.vue'))\n\ndefineProps<{\n  entry: any\n}>()\n\nconst formatTime = (seconds: number | undefined): string => {\n  if (!seconds) return '0:00'\n  const mins = Math.floor(seconds / 60)\n  const secs = seconds % 60\n  return `${mins}:${secs.toString().padStart(2, '0')}`\n}\n</script>\n"],"file":"assets/SnakeGameDetail-F6FjqbkU.js"}