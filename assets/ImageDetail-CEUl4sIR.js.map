{"version":3,"mappings":"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","names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","entry","_unref","_Fragment","_renderList","_normalizeClass","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/component-child/SessionDetailModal/ImageDetail.vue"],"sourcesContent":["<template>\n  <!-- Image Mode-specific details -->\n  <div class=\"mt-2 sm:mt-3 space-y-2 sm:space-y-3\">\n    <div class=\"bg-white dark:bg-[#0a0a0a] rounded-lg sm:rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-3 sm:p-4 md:p-6 min-h-[280px] xs:min-h-[320px] sm:min-h-96 max-h-[500px] select-none\">\n      <div class=\"h-full flex flex-col overflow-hidden\">\n        <!-- Category Badge -->\n        <div class=\"mb-3 sm:mb-4 text-center\">\n          <span class=\"px-2 py-1 xs:px-3 xs:py-1 bg-purple-100 dark:bg-dark-bg-mute text-purple-800 dark:text-purple-300 text-xs xs:text-sm font-medium rounded-full truncate\">\n            {{ entry.extra.image.category ? getTopicName(entry.extra.image.category) : 'Unknown Category' }}\n          </span>\n        </div>\n\n        <!-- Image Display -->\n        <div class=\"flex-1 flex items-center justify-center mb-3 sm:mb-4 min-h-0\">\n          <div v-if=\"entry.extra.image.image\" class=\"relative\">\n            <img \n              :src=\"entry.extra.image.image\" \n              alt=\"Flashcard image\"\n              class=\"max-w-full max-h-24 xs:max-h-28 sm:max-h-32 md:max-h-40 object-contain rounded-md sm:rounded-lg shadow-md border border-gray-200 dark:border-dark-bg-mute\"\n            />\n          </div>\n          \n          <!-- No Image State -->\n          <div v-else class=\"flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-md sm:rounded-lg p-4 xs:p-6 sm:p-8 w-full max-w-xs xs:max-w-sm\">\n            <div class=\"text-center\">\n              <svg class=\"mx-auto h-10 w-10 xs:h-12 xs:w-12 sm:h-16 sm:w-16 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <p class=\"text-xs xs:text-sm text-gray-500 dark:text-white/60 mt-1 xs:mt-2\">No image available for this card.</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Answer Area -->\n        <div class=\"space-y-2 sm:space-y-3 flex-shrink-0\">\n          <!-- Typing input when quiz mode is OFF -->\n          <div v-if=\"!entry.extra.image.isQuizMode\">\n            <input\n              :value=\"entry.extra.image.userAnswer || ''\"\n              type=\"text\"\n              disabled\n              readonly\n              placeholder=\"Enter your answer...\"\n              class=\"w-full px-3 xs:px-4 py-2 xs:py-3 text-center text-sm xs:text-base sm:text-lg border border-gray-300 dark:border-dark-bg-mute rounded-md sm:rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-white/50 cursor-not-allowed\"\n            />\n          </div>\n\n          <!-- Multiple choice when quiz mode is ON -->\n          <div v-else>\n            <div class=\"grid grid-cols-1 xs:grid-cols-2 gap-1.5 xs:gap-2 justify-items-stretch mx-auto max-w-xs xs:max-w-sm sm:max-w-lg\">\n              <div\n                v-for=\"(opt, idx) in entry.extra.image.options || []\"\n                :key=\"idx\"\n                class=\"px-2 xs:px-3 py-1.5 xs:py-2 rounded border text-xs xs:text-sm transition-all duration-150 opacity-70 cursor-not-allowed text-left flex items-center gap-1.5 xs:gap-2 w-full min-w-0\"\n                :class=\"[\n                  opt === entry.extra.image.correctAnswer\n                    ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                    : (opt === entry.extra.image.selectedOption\n                        ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                ]\"\n              >\n                <span\n                  class=\"inline-flex items-center justify-center w-4 h-4 xs:w-5 xs:h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80 shrink-0\"\n                >\n                  {{ String.fromCharCode(65 + idx) }}\n                </span>\n                <span class=\"truncate min-w-0\">{{ opt }}</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Show result after answered -->\n          <div class=\"text-center space-y-1 xs:space-y-2 max-h-24 xs:max-h-32 overflow-y-auto px-2\">\n            <div \n              :class=\"[\n                'inline-flex items-center px-2 xs:px-3 py-1 rounded-full text-xs xs:text-sm font-medium',\n                entry.isCorrect \n                  ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300' \n                  : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\n              ]\"\n            >\n              <svg v-if=\"entry.isCorrect === true\" class=\"w-3 h-3 xs:w-4 xs:h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n              <svg v-else class=\"w-3 h-3 xs:w-4 xs:h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n              </svg>\n              {{ entry.isCorrect === true ? 'Correct' : 'Incorrect' }}\n            </div>\n            \n            <!-- Show correct answer if wrong -->\n            <div v-if=\"entry.isCorrect !== true\" class=\"text-center\">\n              <p class=\"text-xs xs:text-sm text-gray-600 dark:text-white/70\">\n                Correct answer:\n                <span class=\"font-semibold text-gray-900 dark:text-white break-words\">{{ entry.extra.image.correctAnswer }}</span>\n              </p>\n              <p class=\"text-xs text-gray-500 dark:text-white/60 mt-1 line-clamp-2 break-words\">\n                {{ entry.meaningShort }}\n              </p>\n            </div>\n            \n            <!-- Show meaning if correct -->\n            <div v-else class=\"text-center\">\n              <p class=\"text-xs xs:text-sm text-gray-600 dark:text-white/70 line-clamp-2 break-words\">\n                {{ entry.meaningShort }}\n              </p>\n            </div>\n          </div>\n\n          <!-- Instruction text -->\n          <p v-if=\"!entry.extra.image.isQuizMode\" class=\"text-center text-xs xs:text-sm text-gray-500 dark:text-white/60 px-2\">\n            Type the word for the image above and press Enter.\n          </p>\n          <p v-else class=\"text-center text-xs xs:text-sm text-gray-500 dark:text-white/60 px-2\">\n            Choose the correct word for the image.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Result Summary -->\n    <ResultSummary\n      :user-answer=\"entry.extra.image.isQuizMode ? (entry.extra.image.selectedOption || 'No answer') : (entry.extra.image.userAnswer || 'No answer')\"\n      :correct-answer=\"entry.extra.image.correctAnswer\"\n      :is-correct=\"entry.isCorrect\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { getTopicName } from '../../../../../utils/topicUtils'\nimport { defineAsyncComponent } from 'vue'\nconst ResultSummary = defineAsyncComponent(()=>import('./ResultSummary.vue'))\n\ndefineProps<{\n  entry: any\n}>()\n</script>\n"],"file":"assets/ImageDetail-CEUl4sIR.js"}