{"version":3,"mappings":"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","names":["currentPage","totalPages","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_unref","_normalizeClass","_Fragment","_renderList","_withModifiers","_createVNode","_Transition","_createBlock"],"ignoreList":[],"sources":["../../src/views/vocabulary/VocabularyExamplesView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-[#0a0a0a] dark:to-[#0f0f0f] relative overflow-x-hidden\">\n    <!-- Animated Background Elements -->\n    <div class=\"absolute inset-0 overflow-hidden pointer-events-none z-0\">\n      <div class=\"floating-shapes\">\n        <div class=\"absolute top-20 left-10 w-64 h-64 bg-blue-300 dark:bg-blue-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob\"></div>\n        <div class=\"absolute top-40 right-10 w-72 h-72 bg-purple-300 dark:bg-purple-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-2000\"></div>\n        <div class=\"absolute -bottom-8 left-20 w-80 h-80 bg-pink-300 dark:bg-pink-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-4000\"></div>\n        <div class=\"hidden sm:block absolute top-10 left-1/2 -translate-x-1/2 w-40 h-40 bg-cyan-300 dark:bg-cyan-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-1000\"></div>\n        <div class=\"hidden sm:block absolute bottom-24 right-24 w-52 h-52 bg-indigo-300 dark:bg-indigo-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-3000\"></div>\n      </div>\n    </div>\n    \n    <!-- Header -->\n    <div class=\"relative z-10 max-w-full sm:max-w-full md:max-w-full lg:max-w-7xl mx-auto px-2 xs:px-3 sm:px-4 md:px-6 lg:px-8 xl:px-10 2xl:px-12 pt-3 sm:pt-6\">\n      <div class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6 mb-3 xs:mb-4 sm:mb-6\">\n        <div class=\"flex flex-col xs:flex-col sm:flex-row items-start xs:items-start sm:items-center justify-between mb-3 xs:mb-3 sm:mb-4 gap-3 xs:gap-3 sm:gap-4\">\n          <div class=\"flex items-center\">\n            <div class=\"animate-pulse-slow\">\n              <div class=\"w-2 xs:w-2.5 sm:w-2.5 h-2 xs:h-2.5 sm:h-2.5 bg-gradient-to-r from-green-400 to-emerald-500 rounded-full mr-2 xs:mr-2.5 sm:mr-2.5\"></div>\n            </div>\n            <div>\n              <h1 class=\"text-base xs:text-lg sm:text-xl md:text-xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 dark:from-green-400 dark:to-emerald-400 bg-clip-text text-transparent mb-1 xs:mb-1 sm:mb-2\">\n                {{ t('vocabulary.examples.title', 'Example Manager') }}\n              </h1>\n              <p class=\"text-xs xs:text-sm sm:text-base md:text-base text-gray-600 dark:text-gray-300\">\n                {{ t('vocabulary.examples.description', 'Create and manage example sentences based on your vocabulary words') }}\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"flex items-center space-x-2 xs:space-x-3 sm:space-x-4\">\n            <!-- Topic Grouping Toggle -->\n            <div class=\"flex items-center space-x-2 xs:space-x-2 sm:space-x-3\">\n              <span class=\"text-xs xs:text-sm sm:text-sm md:text-sm font-medium text-gray-700 dark:text-gray-300\">\n                {{ t('vocabulary.examples.groupByTopic', 'Group by Topic') }}\n              </span>\n              <button\n                @click=\"toggleGrouping\"\n                class=\"relative inline-flex h-5 xs:h-6 sm:h-6 w-9 xs:w-11 sm:w-11 items-center rounded-full transition-colors duration-300\"\n                :class=\"groupByTopic ? 'bg-gradient-to-r from-green-600 to-emerald-600' : 'bg-gray-200 dark:bg-[#0a0a0a]'\"\n              >\n                <span\n                  class=\"inline-block h-3 xs:h-4 sm:h-4 w-3 xs:w-4 sm:w-4 transform rounded-full bg-white transition-transform duration-300 shadow-lg\"\n                  :class=\"groupByTopic ? 'translate-x-5 xs:translate-x-6 sm:translate-x-6' : 'translate-x-1'\"\n                ></span>\n              </button>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Search -->\n    <div class=\"relative z-10 max-w-full sm:max-w-full md:max-w-full lg:max-w-7xl mx-auto py-3 px-2 xs:py-4 xs:px-3 sm:py-6 sm:px-4 md:px-6 lg:px-8 xl:px-10 2xl:px-12 overflow-x-hidden\">\n      <div class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] mb-3 xs:mb-4 sm:mb-6 p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6\">\n        <div class=\"flex items-center mb-3 xs:mb-3 sm:mb-4\">\n          <div class=\"animate-pulse-slow\">\n            <div class=\"w-2 xs:w-2.5 sm:w-2.5 h-2 xs:h-2.5 sm:h-2.5 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full mr-2 xs:mr-2.5 sm:mr-2.5\"></div>\n          </div>\n          <h3 class=\"text-sm xs:text-base sm:text-lg md:text-lg font-semibold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent\">\n            {{ t('common.search', 'Search') }}\n          </h3>\n        </div>\n        <div class=\"relative\">\n          <input\n            v-model=\"searchTerm\"\n            type=\"text\"\n            :placeholder=\"t('vocabulary.examples.searchVocabulary', 'Search vocabulary words...')\"\n            class=\"w-full pl-8 xs:pl-9 sm:pl-10 md:pl-10 pr-3 xs:pr-4 sm:pr-4 py-1.5 xs:py-2 sm:py-2 md:py-2 text-sm xs:text-sm sm:text-base md:text-base border border-gray-300 dark:border-dark-bg-mute rounded-lg bg-white/50 dark:bg-[#0a0a0a]/50 backdrop-blur-sm focus:ring-2 focus:ring-green-500 focus:border-transparent text-gray-900 dark:text-white transition-all duration-300\"\n          />\n          <svg class=\"absolute left-2 xs:left-2.5 sm:left-3 top-1.5 xs:top-2 sm:top-2.5 h-4 xs:h-4 sm:h-5 w-4 xs:w-4 sm:w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n        </div>\n      </div>\n    </div>\n\n    <!-- Vocabulary List with Examples -->\n    <div class=\"relative z-10 max-w-full sm:max-w-full md:max-w-full lg:max-w-7xl mx-auto py-3 px-2 xs:py-4 xs:px-3 sm:py-6 sm:px-4 md:px-6 lg:px-8 xl:px-10 2xl:px-12 overflow-x-hidden\">\n      <div class=\"space-y-6\">\n        <!-- Empty State -->\n        <div v-if=\"filteredVocabulary.length === 0\" class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6\">\n          <div class=\"text-center py-6 xs:py-6 sm:py-8\">\n            <div class=\"animate-pulse-slow\">\n              <div class=\"w-2.5 xs:w-3 sm:w-3 h-2.5 xs:h-3 sm:h-3 bg-gradient-to-r from-gray-400 to-gray-500 rounded-full mx-auto mb-2 xs:mb-2 sm:mb-3\"></div>\n            </div>\n            <svg class=\"mx-auto h-8 xs:h-10 sm:h-12 w-8 xs:w-10 sm:w-12 text-gray-400 mb-3 xs:mb-3 sm:mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n            </svg>\n            <h3 class=\"text-base xs:text-lg sm:text-lg md:text-lg font-medium text-gray-900 dark:text-white mb-1 xs:mb-1 sm:mb-2\">\n              {{ t('vocabulary.examples.noVocabulary', 'No vocabulary words found') }}\n            </h3>\n            <p class=\"text-xs xs:text-sm sm:text-base md:text-base text-gray-600 dark:text-gray-300\">\n              {{ t('vocabulary.examples.noVocabularyDescription', 'Add some vocabulary words first to create examples for them.') }}\n            </p>\n          </div>\n        </div>\n\n        <!-- Normal View: Individual Vocabulary Cards -->\n        <template v-else-if=\"!groupByTopic\">\n          <div\n            v-for=\"vocab in paginatedVocabulary\"\n            :key=\"vocab.id\"\n            class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6\"\n          >\n            <!-- Vocabulary Header -->\n            <div @click=\"toggleVocabExamples(vocab.id)\" class=\"flex flex-col xs:flex-col sm:flex-row items-start justify-between mb-3 xs:mb-3 sm:mb-4 pb-2 xs:pb-2 sm:pb-3 border-b border-gray-200/50 dark:border-gray-700/50 gap-3 xs:gap-3 sm:gap-0\">\n              <div class=\"flex items-start space-x-2 xs:space-x-2 sm:space-x-3 flex-1\">\n                <div class=\"animate-pulse-slow mt-1\">\n                  <div class=\"w-2 xs:w-2.5 sm:w-2.5 h-2 xs:h-2.5 sm:h-2.5 bg-gradient-to-r from-green-400 to-blue-500 rounded-full\"></div>\n                </div>\n                <div class=\"flex-1 min-w-0\">\n                  <div class=\"flex items-center space-x-1 xs:space-x-1 sm:space-x-2 mb-1\">\n                    <h3 class=\"text-base xs:text-lg sm:text-lg md:text-lg font-bold text-gray-900 dark:text-white truncate\">{{ vocab.word }}</h3>\n                    <button\n                      @click.stop=\"playVocabularyAudio(vocab.word)\"\n                      class=\"p-1 xs:p-1.5 sm:p-1.5 text-blue-600 hover:text-blue-700 hover:bg-blue-50/50 dark:text-blue-400 dark:hover:text-blue-300 dark:hover:bg-blue-900/20 rounded-lg transition-all duration-300 group flex-shrink-0\"\n                      :title=\"t('vocabulary.examples.playPronunciation', 'Play pronunciation')\"\n                    >\n                      <svg class=\"w-3 xs:w-4 sm:w-4 h-3 xs:h-4 sm:h-4 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.464-9.536a9 9 0 010 12.728M9 9l3-3v6l-3-3H4a1 1 0 01-1-1V10a1 1 0 011-1h5z\" />\n                      </svg>\n                    </button>\n                    <!-- Examples Toggle Button -->\n                    <button\n                      v-if=\"getVocabExampleCount(vocab.id) > 0\"\n                      @click.stop=\"toggleVocabExamples(vocab.id)\"\n                      class=\"p-1 xs:p-1.5 sm:p-1.5 text-gray-600 hover:text-gray-700 hover:bg-gray-50/50 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-[#0a0a0a]/20 rounded-lg transition-all duration-300 group flex-shrink-0\"\n                      :title=\"expandedExamples[vocab.id] ? t('vocabulary.examples.hideExamples', 'Hide examples') : t('vocabulary.examples.showExamples', 'Show examples')\"\n                    >\n                      <svg \n                        class=\"w-3 xs:w-4 sm:w-4 h-3 xs:h-4 sm:h-4 group-hover:scale-110 transition-all duration-200\" \n                        :class=\"{ 'rotate-180': expandedExamples[vocab.id] }\"\n                        fill=\"none\" \n                        stroke=\"currentColor\" \n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </button>\n                  </div>\n                  <p class=\"text-xs xs:text-sm sm:text-sm md:text-sm text-gray-600 dark:text-gray-300 mb-1 xs:mb-1 sm:mb-2\">{{ vocab.meaning }}</p>\n                  <div class=\"flex items-center space-x-1 xs:space-x-1 sm:space-x-2\">\n                    <span class=\"inline-flex items-center px-1.5 xs:px-2 sm:px-2.5 py-0.5 rounded-full text-2xs xs:text-xs sm:text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300\">\n                      {{ vocab.partOfSpeech }}\n                    </span>\n                    <span class=\"text-2xs xs:text-xs sm:text-xs text-gray-500 dark:text-gray-400\">\n                      {{ getVocabExampleCount(vocab.id) }} {{ getVocabExampleCount(vocab.id) === 1 ? 'example' : 'examples' }}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <button\n                @click.stop=\"openCreateDialogForVocab(vocab)\"\n                class=\"px-2 xs:px-2.5 sm:px-3 py-1.5 xs:py-1.5 sm:py-2 text-xs xs:text-xs sm:text-sm bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white rounded-lg font-medium transition-all duration-300 shadow-lg hover:shadow-xl flex items-center space-x-1 xs:space-x-1 sm:space-x-2 flex-shrink-0\"\n              >\n                <svg class=\"w-3 xs:w-3 sm:w-4 h-3 xs:h-3 sm:h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n                </svg>\n                <span class=\"hidden xs:inline sm:inline\">{{ t('vocabulary.examples.addExample', 'Add Example') }}</span>\n                <span class=\"xs:hidden sm:hidden\">{{ t('common.add', 'Add') }}</span>\n              </button>\n            </div>\n\n            <!-- Examples for this vocabulary (Collapsible) -->\n            <transition\n              name=\"examples-accordion\"\n              @enter=\"examplesEnter\"\n              @after-enter=\"examplesAfterEnter\"\n              @enter-cancelled=\"examplesEnterCancelled\"\n              @before-leave=\"examplesBeforeLeave\"\n              @leave=\"examplesLeave\"\n              @after-leave=\"examplesAfterLeave\"\n            >\n              <div v-if=\"expandedExamples[vocab.id]\" class=\"border-t border-slate-200 dark:border-dark-bg-mute bg-slate-50 dark:bg-dark-bg-mute\">\n                <div v-if=\"getVocabExamples(vocab.id).length === 0\" class=\"p-3 xs:p-4 sm:p-6 text-center text-slate-500 dark:text-slate-400\">\n                  <p class=\"text-xs xs:text-sm sm:text-base\">{{ t('vocabulary.examples.noExamples', 'No examples found for this vocabulary.') }}</p>\n                </div>\n                <div v-else>\n                  <!-- Examples Content -->\n                  <div class=\"p-2 xs:p-3 sm:p-4 space-y-2 xs:space-y-3 sm:space-y-4\">\n                    <div \n                      v-for=\"example in getPaginatedVocabExamples(vocab.id)\" \n                      :key=\"example.id\" \n                      class=\"bg-white dark:bg-dark-bg border border-slate-200 dark:border-dark-bg-mute rounded-lg p-2 xs:p-3 sm:p-4 md:p-4 shadow-sm hover:shadow-md transition-shadow duration-200\"\n                    >\n                      <div class=\"flex flex-col sm:flex-row sm:items-start sm:justify-between gap-2 xs:gap-2 sm:gap-3\">\n                        <div class=\"flex-1 min-w-0\">\n                          <div class=\"flex items-center gap-1 xs:gap-1 sm:gap-2 mb-1 xs:mb-1 sm:mb-2\">\n                            <h4 class=\"text-xs xs:text-sm sm:text-sm md:text-sm font-medium text-slate-900 dark:text-slate-100 truncate flex-1\">{{ example.title }}</h4>\n                            <button\n                              @click=\"audioSystem.playVocabularySound(example.content, 'en')\"\n                              class=\"flex-shrink-0 p-1 xs:p-1.5 sm:p-1.5 text-emerald-600 hover:text-emerald-700 dark:text-emerald-400 dark:hover:text-emerald-300 bg-emerald-50 dark:bg-emerald-900/20 rounded-full hover:bg-emerald-100 dark:hover:bg-emerald-900/30 transition-all duration-200 transform hover:scale-110\"\n                              :title=\"t('vocabulary.examples.playExample', 'Play example pronunciation')\"\n                            >\n                              <svg class=\"w-3 xs:w-4 sm:w-4 h-3 xs:h-4 sm:h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 14.142M9 9l3-3v12l-3-3H5a2 2 0 01-2-2V9a2 2 0 012-2h4z\"></path>\n                              </svg>\n                            </button>\n                          </div>\n                          <p class=\"text-slate-700 dark:text-slate-300 text-xs xs:text-sm sm:text-sm md:text-sm mb-1 xs:mb-1 sm:mb-2 leading-relaxed\">{{ example.content }}</p>\n                          <div class=\"flex flex-wrap gap-1 xs:gap-1 sm:gap-2 text-2xs xs:text-xs sm:text-xs\">\n                            <span class=\"px-1.5 xs:px-2 sm:px-2 py-0.5 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 rounded-full capitalize\">{{ example.type }}</span>\n                            <span v-if=\"example.difficulty\" class=\"px-1.5 xs:px-2 sm:px-2 py-0.5 bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200 rounded-full capitalize\">{{ example.difficulty }}</span>\n                            <span v-if=\"example.context\" class=\"px-1.5 xs:px-2 sm:px-2 py-0.5 bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 rounded-full\">{{ example.context }}</span>\n                          </div>\n                        </div>\n                        <div class=\"flex flex-row xs:flex-row sm:flex-row gap-1 xs:gap-1 sm:gap-2 flex-shrink-0 mt-2 xs:mt-0 sm:mt-0\">\n                          <button \n                            @click=\"editExample(example)\"\n                            class=\"px-2 xs:px-2.5 sm:px-3 py-1 xs:py-1 sm:py-1.5 text-2xs xs:text-xs sm:text-xs bg-blue-600 hover:bg-blue-700 text-white rounded-md transition-colors duration-200 flex items-center gap-1\"\n                          >\n                            <svg class=\"w-2.5 xs:w-3 sm:w-3 h-2.5 xs:h-3 sm:h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                            </svg>\n                            <span class=\"hidden xs:inline sm:inline\">{{ t('common.edit', 'Edit') }}</span>\n                          </button>\n                          <button \n                            @click=\"deleteExample(example)\"\n                            class=\"px-2 xs:px-2.5 sm:px-3 py-1 xs:py-1 sm:py-1.5 text-2xs xs:text-xs sm:text-xs bg-red-600 hover:bg-red-700 text-white rounded-md transition-colors duration-200 flex items-center gap-1\"\n                          >\n                            <svg class=\"w-2.5 xs:w-3 sm:w-3 h-2.5 xs:h-3 sm:h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                            </svg>\n                            <span class=\"hidden xs:inline sm:inline\">{{ t('common.delete', 'Delete') }}</span>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Examples Pagination -->\n                  <div v-if=\"getVocabExamplePages(vocab.id) > 1\" class=\"border-t border-slate-200 dark:border-dark-bg-mute px-2 xs:px-3 sm:px-4 py-2 xs:py-2 sm:py-3\">\n                    <div class=\"flex items-center justify-between\">\n                      <!-- Mobile Pagination (Simple) -->\n                      <div class=\"flex sm:hidden items-center gap-1 xs:gap-1 sm:gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-1.5 xs:px-2 py-0.5 xs:py-1 text-2xs xs:text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Prev') }}\n                        </button>\n                        <span class=\"text-2xs xs:text-xs text-slate-600 dark:text-slate-400 px-1\">\n                          {{ getExamplePaginationInfo(vocab.id).currentPage }} / {{ getExamplePaginationInfo(vocab.id).totalPages }}\n                        </span>\n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-1.5 xs:px-2 py-0.5 xs:py-1 text-2xs xs:text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Desktop Pagination (Full) -->\n                      <div class=\"hidden sm:flex items-center gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Previous') }}\n                        </button>\n                        \n                        <div class=\"flex gap-1\">\n                          <button\n                            v-for=\"page in Math.min(getExamplePaginationInfo(vocab.id).totalPages, 5)\"\n                            :key=\"page\"\n                            @click=\"goToExamplePage(vocab.id, page)\"\n                            :class=\"[\n                              'px-3 py-1.5 text-sm rounded transition-colors',\n                              getExamplePaginationInfo(vocab.id).currentPage === page\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'\n                            ]\"\n                          >\n                            {{ page }}\n                          </button>\n                        </div>\n                        \n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Examples count info -->\n                      <div class=\"text-2xs xs:text-xs sm:text-xs text-slate-500 dark:text-slate-400\">\n                        {{ t('vocabulary.examples.showingExamples', { start: getExamplePaginationInfo(vocab.id).start, end: getExamplePaginationInfo(vocab.id).end, total: getExamplePaginationInfo(vocab.id).totalExamples }, 'Showing {start} to {end} of {total} examples') }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </transition>\n          </div>\n          \n          <!-- Pagination for Normal View -->\n          <div v-if=\"totalPages > 1\" class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-2 xs:p-3 sm:p-4 md:p-4\">\n            <div class=\"flex items-center justify-between\">\n              <!-- Mobile pagination -->\n              <div class=\"flex-1 flex justify-between sm:hidden\">\n                <button \n                  @click=\"previousPage\" \n                  :disabled=\"currentPage === 1\" \n                  class=\"relative inline-flex items-center px-2 xs:px-3 py-1 xs:py-1.5 border border-gray-300 dark:border-gray-600 text-xs xs:text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {{ t('common.previous', 'Prev') }}\n                </button>\n                <div class=\"flex items-center px-2\">\n                  <span class=\"text-2xs xs:text-xs text-gray-600 dark:text-gray-400\">\n                    {{ currentPage }} / {{ totalPages }}\n                  </span>\n                </div>\n                <button \n                  @click=\"nextPage\" \n                  :disabled=\"currentPage === totalPages\" \n                  class=\"relative inline-flex items-center px-2 xs:px-3 py-1 xs:py-1.5 border border-gray-300 dark:border-gray-600 text-xs xs:text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {{ t('common.next', 'Next') }}\n                </button>\n              </div>\n              \n              <!-- Desktop pagination -->\n              <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div>\n                  <p class=\"text-xs xs:text-sm sm:text-sm md:text-sm text-gray-700 dark:text-gray-300\">\n                    {{ t('vocabulary.examples.showingVocabulary', { \n                      start: startIndex, \n                      end: endIndex, \n                      total: filteredVocabulary.length \n                    }, `Showing ${startIndex} to ${endIndex} of ${filteredVocabulary.length} vocabulary words`) }}\n                  </p>\n                </div>\n                <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                  <!-- Previous button -->\n                  <button \n                    @click=\"previousPage\" \n                    :disabled=\"currentPage === 1\" \n                    class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <span class=\"sr-only\">{{ t('common.previous', 'Previous') }}</span>\n                    <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n                    </svg>\n                  </button>\n                  \n                  <!-- Page numbers -->\n                  <button\n                    v-for=\"page in visiblePages\"\n                    :key=\"page\"\n                    @click=\"goToPage(page)\"\n                    :class=\"[\n                      page === currentPage\n                        ? 'z-10 bg-blue-50 dark:bg-blue-900 border-blue-500 dark:border-blue-400 text-blue-600 dark:text-blue-300'\n                        : 'bg-white dark:bg-[#0a0a0a] border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600',\n                      'relative inline-flex items-center px-4 py-2 border text-sm font-medium'\n                    ]\"\n                  >\n                    {{ page }}\n                  </button>\n                  \n                  <!-- Next button -->\n                  <button \n                    @click=\"nextPage\" \n                    :disabled=\"currentPage === totalPages\" \n                    class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <span class=\"sr-only\">{{ t('common.next', 'Next') }}</span>\n                    <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\"/>\n                    </svg>\n                  </button>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </template>\n\n        <!-- Grouped View: Topic-based Accordion -->\n        <TopicGroupAccordion\n          v-else\n          :vocabulary-list=\"filteredVocabulary\"\n          :examples=\"examples\"\n          @add-example=\"openCreateDialogForVocab\"\n          @edit-example=\"editExample\"\n          @delete-example=\"deleteExample\"\n        />\n      </div>\n    </div>\n\n    <!-- Create/Edit Example Dialog -->\n    <ExampleFormDialog\n      v-if=\"showCreateDialog || showEditDialog\"\n      :show=\"showCreateDialog || showEditDialog\"\n      :example=\"currentExample\"\n      :vocabulary-id=\"selectedVocabulary\"\n      :vocabulary-list=\"vocabularyList\"\n      @close=\"closeDialog\"\n      @save=\"saveExample\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, computed, onMounted, defineAsyncComponent } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useToast, POSITION } from 'vue-toastification'\nimport { useVocabularyStore } from '../../composables/useVocabularyStore'\nimport { useAudioSystem } from '../practice/composables/bubble-shooter/useAudioSystem'\nconst TopicGroupAccordion = defineAsyncComponent(() => import('./components/TopicGroupAccordion.vue'))\nconst ExampleFormDialog = defineAsyncComponent(() => import('./components/ExampleFormDialog.vue'))\nconst ConfirmToast = defineAsyncComponent(() => import('../../components/common/ConfirmToast.vue'))\n\ninterface Example {\n  id: string\n  vocabularyId: string\n  vocabulary?: {\n    id: string\n    word: string\n  }\n  title: string\n  content: string\n  translation?: string\n  context?: string\n  type: 'sentence' | 'dialogue' | 'phrase' | 'context'\n  difficulty?: 'easy' | 'medium' | 'hard'\n  tags?: string[]\n  createdAt: string\n  updatedAt: string\n}\n\nconst { t } = useI18n()\nconst toast = useToast()\nconst vocabularyStore = useVocabularyStore()\nconst audioSystem = useAudioSystem()\n\n// State\nconst examples = ref<Example[]>([])\nconst showCreateDialog = ref(false)\nconst showEditDialog = ref(false)\nconst currentExample = ref<Example | null>(null)\nconst searchTerm = ref('')\nconst selectedVocabulary = ref('')\nconst selectedType = ref('')\nconst groupByTopic = ref(false) // Toggle state for grouping by topic\n\n// Pagination state for normal view\nconst currentPage = ref(1)\nconst itemsPerPage = ref(5) // 5 vocabulary items per page\n\n// State for expanded examples - each vocabulary can expand/collapse its examples independently\nconst expandedExamples = ref<Record<string, boolean>>({})\n\n// Pagination state for examples within each vocabulary\nconst examplePages = ref<Record<string, number>>({})\nconst examplesPerPage = ref(5) // 5 examples per page\n\n// Computed\nconst vocabularyList = computed(() => vocabularyStore.allVocabularies.value.map(v => ({ \n  id: v.id.toString(), \n  word: v.word, \n  meaning: v.meaning, \n  partOfSpeech: v.partOfSpeech || 'unknown',\n  category: v.category || 'uncategorized',\n  level: v.level || 'unknown'\n})))\n\nconst filteredVocabulary = computed(() => {\n  let filtered = vocabularyList.value\n\n  if (searchTerm.value) {\n    const term = searchTerm.value.toLowerCase()\n    filtered = filtered.filter(v => \n      v.word.toLowerCase().includes(term) ||\n      v.meaning.toLowerCase().includes(term)\n    )\n  }\n\n  return filtered\n})\n\n// Pagination computeds for normal view\nconst totalPages = computed(() => {\n  if (groupByTopic.value) return 1\n  return Math.ceil(filteredVocabulary.value.length / itemsPerPage.value)\n})\n\nconst paginatedVocabulary = computed(() => {\n  if (groupByTopic.value) return filteredVocabulary.value\n  \n  const start = (currentPage.value - 1) * itemsPerPage.value\n  const end = start + itemsPerPage.value\n  return filteredVocabulary.value.slice(start, end)\n})\n\nconst startIndex = computed(() => {\n  if (groupByTopic.value) return 1\n  return (currentPage.value - 1) * itemsPerPage.value + 1\n})\n\nconst endIndex = computed(() => {\n  if (groupByTopic.value) return filteredVocabulary.value.length\n  return Math.min(currentPage.value * itemsPerPage.value, filteredVocabulary.value.length)\n})\n\nconst visiblePages = computed(() => {\n  const pages: number[] = []\n  const maxVisible = 5\n  const totalP = totalPages.value\n  \n  if (totalP <= maxVisible) {\n    for (let i = 1; i <= totalP; i++) {\n      pages.push(i)\n    }\n  } else {\n    const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\n    const end = Math.min(totalP, start + maxVisible - 1)\n    \n    for (let i = start; i <= end; i++) {\n      pages.push(i)\n    }\n  }\n  \n  return pages\n})\n\nconst filteredExamples = computed(() => {\n  let filtered = examples.value\n\n  if (searchTerm.value) {\n    const term = searchTerm.value.toLowerCase()\n    filtered = filtered.filter(e => \n      e.title.toLowerCase().includes(term) ||\n      e.content.toLowerCase().includes(term) ||\n      e.vocabulary?.word.toLowerCase().includes(term)\n    )\n  }\n\n  if (selectedVocabulary.value) {\n    filtered = filtered.filter(e => e.vocabularyId === selectedVocabulary.value)\n  }\n\n  if (selectedType.value) {\n    filtered = filtered.filter(e => e.type === selectedType.value)\n  }\n\n  return filtered\n})\n\n// Methods\nconst loadExamples = () => {\n  const stored = localStorage.getItem('vocabulary-examples')\n  if (stored) {\n    examples.value = JSON.parse(stored)\n    // Populate vocabulary info\n    examples.value.forEach(example => {\n      const vocab = vocabularyList.value.find(v => v.id === example.vocabularyId)\n      if (vocab) {\n        example.vocabulary = { id: vocab.id, word: vocab.word }\n      }\n    })\n  }\n}\n\nconst saveExamplesToStorage = () => {\n  localStorage.setItem('vocabulary-examples', JSON.stringify(examples.value))\n}\n\nconst getVocabExamples = (vocabId: string) => {\n  return examples.value.filter(e => e.vocabularyId === vocabId)\n}\n\n// Get paginated examples for a vocabulary\nconst getPaginatedVocabExamples = (vocabId: string) => {\n  const allExamples = getVocabExamples(vocabId)\n  const currentPage = examplePages.value[vocabId] || 1\n  const start = (currentPage - 1) * examplesPerPage.value\n  const end = start + examplesPerPage.value\n  return allExamples.slice(start, end)\n}\n\n// Get total pages for vocabulary examples\nconst getVocabExamplePages = (vocabId: string) => {\n  const totalExamples = getVocabExamples(vocabId).length\n  return Math.ceil(totalExamples / examplesPerPage.value)\n}\n\n// Navigate example pages\nconst goToExamplePage = (vocabId: string, page: number) => {\n  const totalPages = getVocabExamplePages(vocabId)\n  if (page >= 1 && page <= totalPages) {\n    examplePages.value[vocabId] = page\n    saveExamplePagesState()\n  }\n}\n\n// Previous/next example page\nconst previousExamplePage = (vocabId: string) => {\n  const currentPage = examplePages.value[vocabId] || 1\n  if (currentPage > 1) {\n    goToExamplePage(vocabId, currentPage - 1)\n  }\n}\n\nconst nextExamplePage = (vocabId: string) => {\n  const currentPage = examplePages.value[vocabId] || 1\n  const totalPages = getVocabExamplePages(vocabId)\n  if (currentPage < totalPages) {\n    goToExamplePage(vocabId, currentPage + 1)\n  }\n}\n\n// Get example pagination info\nconst getExamplePaginationInfo = (vocabId: string) => {\n  const totalExamples = getVocabExamples(vocabId).length\n  const currentPage = examplePages.value[vocabId] || 1\n  const totalPages = getVocabExamplePages(vocabId)\n  const start = (currentPage - 1) * examplesPerPage.value + 1\n  const end = Math.min(currentPage * examplesPerPage.value, totalExamples)\n  \n  return {\n    totalExamples,\n    totalPages,\n    currentPage,\n    start,\n    end,\n    hasNext: currentPage < totalPages,\n    hasPrevious: currentPage > 1\n  }\n}\n\nconst getVocabExampleCount = (vocabId: string) => {\n  return examples.value.filter(e => e.vocabularyId === vocabId).length\n}\n\nconst openCreateDialogForVocab = (vocab: any) => {\n  currentExample.value = null\n  selectedVocabulary.value = vocab.id\n  showCreateDialog.value = true\n}\n\nconst editExample = (example: Example) => {\n  currentExample.value = { ...example }\n  showEditDialog.value = true\n}\n\nconst deleteExample = (example: Example) => {\n  const toastId = toast(\n    {\n      component: ConfirmToast,\n      props: {\n        message: t('vocabulary.examples.confirmDelete', 'Are you sure you want to delete this example?'),\n        confirmText: t('common.confirm', 'Confirm'),\n        cancelText: t('common.cancel', 'Cancel'),\n        onConfirm: () => {\n          examples.value = examples.value.filter(e => e.id !== example.id)\n          saveExamplesToStorage()\n          toast.dismiss(toastId)\n          toast.success(t('vocabulary.examples.deleteSuccess', 'Example deleted successfully'))\n        },\n        onCancel: () => {\n          toast.dismiss(toastId)\n        },\n      },\n    },\n    {\n      position: POSITION.TOP_CENTER,\n      timeout: false,\n      closeButton: false,\n      draggable: false,\n      icon: false,\n    }\n  )\n}\n\nconst saveExample = (exampleData: Partial<Example>) => {\n  if (currentExample.value && showEditDialog.value) {\n    // Update existing example\n    const index = examples.value.findIndex(e => e.id === currentExample.value!.id)\n    if (index !== -1) {\n      examples.value[index] = {\n        ...examples.value[index],\n        ...exampleData,\n        updatedAt: new Date().toISOString()\n      }\n      // Update vocabulary info\n      const vocab = vocabularyList.value.find(v => v.id === examples.value[index].vocabularyId)\n      if (vocab) {\n        examples.value[index].vocabulary = { id: vocab.id, word: vocab.word }\n      }\n    }\n  } else {\n    // Create new example\n    const newExample: Example = {\n      id: Date.now().toString(),\n      vocabularyId: exampleData.vocabularyId!,\n      title: exampleData.title!,\n      content: exampleData.content!,\n      translation: exampleData.translation,\n      context: exampleData.context,\n      type: exampleData.type!,\n      difficulty: exampleData.difficulty,\n      tags: exampleData.tags,\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n    // Add vocabulary info\n    const vocab = vocabularyList.value.find(v => v.id === newExample.vocabularyId)\n    if (vocab) {\n      newExample.vocabulary = { id: vocab.id, word: vocab.word }\n    }\n    examples.value.push(newExample)\n  }\n  \n  saveExamplesToStorage()\n  closeDialog()\n}\n\nconst closeDialog = () => {\n  showCreateDialog.value = false\n  showEditDialog.value = false\n  currentExample.value = null\n}\n\nconst getTypeLabel = (type: string) => {\n  const labels = {\n    'sentence': t('vocabulary.examples.types.sentence', 'Sentence'),\n    'dialogue': t('vocabulary.examples.types.dialogue', 'Dialogue'),\n    'phrase': t('vocabulary.examples.types.phrase', 'Phrase'),\n    'context': t('vocabulary.examples.types.context', 'Context')\n  }\n  return labels[type as keyof typeof labels] || type\n}\n\nconst getTypeColorClass = (type: string) => {\n  const classes = {\n    'sentence': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n    'dialogue': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n    'phrase': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n    'context': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300'\n  }\n  return classes[type as keyof typeof classes] || 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n}\n\nconst getDifficultyLabel = (difficulty: string) => {\n  const labels = {\n    'easy': t('common.easy', 'Easy'),\n    'medium': t('vocabulary.examples.difficulty.medium', 'Medium'),\n    'hard': t('common.difficult', 'Difficult')\n  }\n  return labels[difficulty as keyof typeof labels] || difficulty\n}\n\nconst getDifficultyColorClass = (difficulty: string) => {\n  const classes = {\n    'easy': 'text-green-600 dark:text-green-400',\n    'medium': 'text-yellow-600 dark:text-yellow-400',\n    'hard': 'text-red-600 dark:text-red-400'\n  }\n  return classes[difficulty as keyof typeof classes] || 'text-gray-600 dark:text-gray-400'\n}\n\nconst formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString()\n}\n\n// Audio functions\nconst playVocabularyAudio = (word: string) => {\n  audioSystem.playVocabularySound(word, 'en')\n}\n\nconst playExampleAudio = (text: string) => {\n  audioSystem.playVocabularySound(text, 'en')\n}\n\n// Pagination functions for normal view\nconst previousPage = () => {\n  if (currentPage.value > 1) {\n    currentPage.value--\n  }\n}\n\nconst nextPage = () => {\n  if (currentPage.value < totalPages.value) {\n    currentPage.value++\n  }\n}\n\nconst goToPage = (page: number) => {\n  if (page >= 1 && page <= totalPages.value) {\n    currentPage.value = page\n  }\n}\n\n// Toggle examples visibility for vocabulary\nconst toggleVocabExamples = (vocabId: string) => {\n  expandedExamples.value[vocabId] = !expandedExamples.value[vocabId]\n  saveExpandedExamplesState()\n}\n\n// Load expanded examples state from localStorage\nconst loadExpandedExamplesState = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-expanded-vocab')\n    if (saved) {\n      const parsed = JSON.parse(saved)\n      expandedExamples.value = { ...parsed }\n    }\n  } catch (error) {\n    console.error('Error loading expanded examples state:', error)\n  }\n}\n\n// Save expanded examples state to localStorage\nconst saveExpandedExamplesState = () => {\n  try {\n    localStorage.setItem('vocabulary-examples-expanded-vocab', JSON.stringify(expandedExamples.value))\n  } catch (error) {\n    console.error('Error saving expanded examples state:', error)\n  }\n}\n\n// Load example pages state from localStorage\nconst loadExamplePagesState = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-pages')\n    if (saved) {\n      const parsed = JSON.parse(saved)\n      examplePages.value = { ...parsed }\n    }\n  } catch (error) {\n    console.error('Error loading example pages state:', error)\n  }\n}\n\n// Save example pages state to localStorage\nconst saveExamplePagesState = () => {\n  try {\n    localStorage.setItem('vocabulary-examples-pages', JSON.stringify(examplePages.value))\n  } catch (error) {\n    console.error('Error saving example pages state:', error)\n  }\n}\n\n// Initialize expanded state for vocabulary\nconst initializeExpandedExamplesState = () => {\n  let hasChanges = false\n  \n  paginatedVocabulary.value.forEach(vocab => {\n    if (expandedExamples.value[vocab.id] === undefined) {\n      expandedExamples.value[vocab.id] = false // Default to collapsed for better performance\n      hasChanges = true\n    }\n    if (examplePages.value[vocab.id] === undefined) {\n      examplePages.value[vocab.id] = 1 // Default to page 1\n      hasChanges = true\n    }\n  })\n  \n  // Only save if there were changes\n  if (hasChanges) {\n    saveExpandedExamplesState()\n    saveExamplePagesState()\n  }\n}\n\n// Clean up old vocabulary IDs from localStorage\nconst cleanupOldVocabularyStates = () => {\n  try {\n    const currentVocabIds = new Set(vocabularyList.value.map(v => v.id))\n    \n    // Clean expanded examples state\n    const expandedKeys = Object.keys(expandedExamples.value)\n    let expandedChanged = false\n    expandedKeys.forEach(vocabId => {\n      if (!currentVocabIds.has(vocabId)) {\n        delete expandedExamples.value[vocabId]\n        expandedChanged = true\n      }\n    })\n    \n    // Clean example pages state  \n    const pagesKeys = Object.keys(examplePages.value)\n    let pagesChanged = false\n    pagesKeys.forEach(vocabId => {\n      if (!currentVocabIds.has(vocabId)) {\n        delete examplePages.value[vocabId]\n        pagesChanged = true\n      }\n    })\n    \n    // Save only if changed\n    if (expandedChanged) {\n      saveExpandedExamplesState()\n    }\n    if (pagesChanged) {\n      saveExamplePagesState()\n    }\n  } catch (error) {\n    console.error('Error cleaning up old vocabulary states:', error)\n  }\n}\n\n// Examples accordion animation functions\nconst examplesEnter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = '0'\n  element.style.overflow = 'hidden'\n}\n\nconst examplesAfterEnter = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\nconst examplesEnterCancelled = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\nconst examplesBeforeLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = element.scrollHeight + 'px'\n  element.style.overflow = 'hidden'\n}\n\nconst examplesLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = element.scrollHeight + 'px'\n  element.style.overflow = 'hidden'\n  // Force reflow\n  element.offsetHeight\n  element.style.height = '0'\n}\n\nconst examplesAfterLeave = (el: Element) => {\n  const element = el as HTMLElement\n  element.style.height = 'auto'\n  element.style.overflow = 'visible'\n}\n\n// Toggle grouping function\nconst toggleGrouping = () => {\n  groupByTopic.value = !groupByTopic.value\n  // Save preference to localStorage\n  localStorage.setItem('vocabulary-examples-group-by-topic', JSON.stringify(groupByTopic.value))\n}\n\n// Load grouping preference from localStorage\nconst loadGroupingPreference = () => {\n  try {\n    const saved = localStorage.getItem('vocabulary-examples-group-by-topic')\n    if (saved) {\n      groupByTopic.value = JSON.parse(saved)\n    }\n  } catch (error) {\n    console.error('Error loading grouping preference:', error)\n    groupByTopic.value = false\n  }\n}\n\n// Watch paginatedVocabulary to initialize expanded state for new vocabularies\nwatch(() => paginatedVocabulary.value, () => {\n  initializeExpandedExamplesState()\n}, { immediate: true })\n\n// Watch vocabulary list changes to cleanup old states\nwatch(() => vocabularyList.value, () => {\n  cleanupOldVocabularyStates()\n}, { deep: true })\n\n// Watch for changes in expanded state to auto-save\nwatch(() => expandedExamples.value, () => {\n  saveExpandedExamplesState()\n}, { deep: true })\n\n// Watch for changes in example pages to auto-save\nwatch(() => examplePages.value, () => {\n  saveExamplePagesState()\n}, { deep: true })\n\nonMounted(() => {\n  loadExamples()\n  loadGroupingPreference()\n  loadExpandedExamplesState()\n  loadExamplePagesState()\n  // Clean up any orphaned vocabulary states on mount\n  setTimeout(() => {\n    cleanupOldVocabularyStates()\n  }, 100)\n})\n</script>\n\n<style scoped>\n/* Examples accordion animation */\n.examples-accordion-enter-active,\n.examples-accordion-leave-active {\n  transition: height 0.3s ease-in-out;\n}\n\n.examples-accordion-enter-from,\n.examples-accordion-leave-to {\n  height: 0;\n  overflow: hidden;\n}\n\n.examples-accordion-content {\n  overflow: hidden;\n}\n\n/* Custom text-2xs for extra small screens */\n.text-2xs {\n  font-size: 0.6875rem; /* 11px */\n  line-height: 1rem; /* 16px */\n}\n</style>\n"],"file":"assets/VocabularyExamplesView-B9kgAYrI.js"}