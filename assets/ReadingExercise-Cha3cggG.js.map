{"version":3,"file":"ReadingExercise-Cha3cggG.js","sources":["../../src/views/grammar/components/ReadingExercise.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-lg border border-gray-200 dark:border-white/10 p-6\">\r\n    <!-- Reading Passage -->\r\n    <div class=\"mb-8\">\r\n      <div class=\"flex items-center justify-between mb-4\">\r\n        <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          {{ question.title || tf('grammar.practice.reading.passage', 'Reading passage') }}\r\n        </h3>\r\n        \r\n        <div class=\"flex items-center space-x-4\">\r\n          <!-- Audio button for passage -->\r\n          <button\r\n            v-if=\"question.audio\"\r\n            @click=\"playPassageAudio\"\r\n            class=\"flex items-center space-x-2 px-3 py-2 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-900/50 transition-colors\"\r\n          >\r\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m-2.036-5.036a2.5 2.5 0 010 3.536M6 10h4l4.5-4.5v9L10 10H6V8z\" />\r\n            </svg>\r\n            <span>{{ tf('grammar.practice.reading.listen', 'Listen') }}</span>\r\n          </button>\r\n          \r\n          <!-- Reading time -->\r\n          <div class=\"text-sm text-gray-500 dark:text-white/60\">\r\n            {{ tf('grammar.practice.reading.readingTime', 'Reading time') }}: {{ formatTime(readingTime) }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Passage Content -->\r\n      <div class=\"bg-gray-50 dark:bg-[#0a0a0a]/50 rounded-lg p-6 max-h-96 overflow-y-auto\">\r\n        <div class=\"prose dark:prose-invert max-w-none\">\r\n          <div \r\n            v-html=\"formattedPassage\"\r\n            class=\"text-gray-800 dark:text-gray-200 leading-relaxed text-justify\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Questions Section -->\r\n    <div class=\"space-y-6\">\r\n      <h4 class=\"text-lg font-semibold text-gray-900 dark:text-white border-b border-gray-200 dark:border-white/10 pb-2\">\r\n        {{ tf('grammar.practice.reading.questions', 'Questions') }}\r\n      </h4>\r\n      \r\n      <!-- Question List -->\r\n      <div class=\"space-y-6\">\r\n        <div\r\n          v-for=\"(q, index) in question.questions\"\r\n          :key=\"index\"\r\n          class=\"border border-gray-200 dark:border-white/10 rounded-lg p-4\"\r\n        >\r\n          <div class=\"mb-4\">\r\n            <h5 class=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n              {{ index + 1 }}. {{ q.question }}\r\n            </h5>\r\n            \r\n            <!-- Question type specific content -->\r\n            <div v-if=\"q.type === 'multiple-choice'\" class=\"space-y-2\">\r\n              <label\r\n                v-for=\"(option, optionIndex) in q.options\"\r\n                :key=\"optionIndex\"\r\n                :class=\"[\r\n                  'flex items-start space-x-3 p-3 rounded-lg cursor-pointer transition-all',\r\n                  userAnswers[index] === optionIndex\r\n                    ? 'bg-blue-50 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-600'\r\n                    : 'bg-gray-50 dark:bg-[#0a0a0a]/50 hover:bg-gray-100 dark:hover:bg-[#0a0a0a]/70 border border-transparent',\r\n                  showAnswers && optionIndex === q.correctAnswer\r\n                    ? 'bg-green-50 dark:bg-green-900/30 border border-green-300 dark:border-green-600'\r\n                    : '',\r\n                  showAnswers && userAnswers[index] === optionIndex && optionIndex !== q.correctAnswer\r\n                    ? 'bg-red-50 dark:bg-red-900/30 border border-red-300 dark:border-red-600'\r\n                    : ''\r\n                ]\"\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  :name=\"`question-${index}`\"\r\n                  :value=\"optionIndex\"\r\n                  v-model=\"userAnswers[index]\"\r\n                  :disabled=\"showAnswers\"\r\n                  class=\"mt-1\"\r\n                />\r\n                <span class=\"text-gray-900 dark:text-white\">{{ option }}</span>\r\n                \r\n                <!-- Answer icons -->\r\n                <div class=\"ml-auto\">\r\n                  <svg\r\n                    v-if=\"showAnswers && optionIndex === q.correctAnswer\"\r\n                    class=\"w-5 h-5 text-green-600 dark:text-green-400\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\r\n                  </svg>\r\n                  <svg\r\n                    v-else-if=\"showAnswers && userAnswers[index] === optionIndex && optionIndex !== q.correctAnswer\"\r\n                    class=\"w-5 h-5 text-red-600 dark:text-red-400\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                  </svg>\r\n                </div>\r\n              </label>\r\n            </div>\r\n            \r\n            <!-- True/False questions -->\r\n            <div v-else-if=\"q.type === 'true-false'\" class=\"space-y-2\">\r\n              <label\r\n                v-for=\"option in ['true', 'false']\"\r\n                :key=\"option\"\r\n                :class=\"[\r\n                  'flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-all',\r\n                  userAnswers[index] === option\r\n                    ? 'bg-blue-50 dark:bg-blue-900/30 border border-blue-300 dark:border-blue-600'\r\n                    : 'bg-gray-50 dark:bg-gray-700/50 hover:bg-gray-100 dark:hover:bg-gray-700 border border-transparent',\r\n                  showAnswers && option === q.correctAnswer\r\n                    ? 'bg-green-50 dark:bg-green-900/30 border border-green-300 dark:border-green-600'\r\n                    : '',\r\n                  showAnswers && userAnswers[index] === option && option !== q.correctAnswer\r\n                    ? 'bg-red-50 dark:bg-red-900/30 border border-red-300 dark:border-red-600'\r\n                    : ''\r\n                ]\"\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  :name=\"`question-${index}`\"\r\n                  :value=\"option\"\r\n                  v-model=\"userAnswers[index]\"\r\n                  :disabled=\"showAnswers\"\r\n                />\r\n                <span class=\"text-gray-900 dark:text-white\">\r\n                  {{ option === 'true' ? tf('grammar.practice.reading.true', 'True') : tf('grammar.practice.reading.false', 'False') }}\r\n                </span>\r\n              </label>\r\n            </div>\r\n            \r\n            <!-- Short answer questions -->\r\n            <div v-else-if=\"q.type === 'short-answer'\" class=\"space-y-2\">\r\n              <input\r\n                v-model=\"userAnswers[index]\"\r\n                :disabled=\"showAnswers\"\r\n                :placeholder=\"tf('grammar.practice.reading.yourAnswer', 'Your answer')\"\r\n                :class=\"[\r\n                  'w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent',\r\n                  showAnswers\r\n                    ? isShortAnswerCorrect(index)\r\n                      ? 'border-green-500 bg-green-50 dark:bg-green-900/30'\r\n                      : 'border-red-500 bg-red-50 dark:bg-red-900/30'\r\n                    : 'border-gray-300 dark:border-white/10 bg-white dark:bg-[#0a0a0a]',\r\n                  'text-gray-900 dark:text-white'\r\n                ]\"\r\n              />\r\n              \r\n              <!-- Show correct answer for short answer -->\r\n              <div v-if=\"showAnswers && !isShortAnswerCorrect(index)\" class=\"text-sm text-green-600 dark:text-green-400\">\r\n                {{ tf('grammar.practice.reading.correctAnswer', 'Correct answer') }}: {{ q.correctAnswer }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Question explanation -->\r\n          <div v-if=\"showAnswers && q.explanation\" class=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900/30 border border-yellow-200 dark:border-yellow-700 rounded-lg\">\r\n            <p class=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n              <strong>{{ tf('grammar.practice.explanation', 'Explanation') }}:</strong> {{ q.explanation }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Summary -->\r\n    <div v-if=\"showAnswers\" class=\"mt-8 p-4 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg\">\r\n      <div class=\"grid grid-cols-3 gap-4 text-center\">\r\n        <div>\r\n          <div class=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">{{ correctAnswers }}</div>\r\n          <div class=\"text-sm text-gray-600 dark:text-white/60\">{{ tf('grammar.practice.reading.correct', 'Correct') }}</div>\r\n        </div>\r\n        <div>\r\n          <div class=\"text-2xl font-bold text-red-600 dark:text-red-400\">{{ incorrectAnswers }}</div>\r\n          <div class=\"text-sm text-gray-600 dark:text-white/60\">{{ tf('grammar.practice.reading.incorrect', 'Incorrect') }}</div>\r\n        </div>\r\n        <div>\r\n          <div class=\"text-2xl font-bold text-green-600 dark:text-green-400\">{{ accuracy }}%</div>\r\n          <div class=\"text-sm text-gray-600 dark:text-white/60\">{{ tf('grammar.practice.reading.accuracy', 'Accuracy') }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Action Buttons -->\r\n    <div class=\"flex justify-between items-center mt-8\">\r\n      <div class=\"flex space-x-4\">\r\n        <!-- Highlight Keywords -->\r\n        <button\r\n          @click=\"toggleHighlights\"\r\n          class=\"flex items-center space-x-2 px-4 py-2 text-sm text-gray-600 dark:text-white/60 hover:text-gray-800 dark:hover:text-white transition-colors\"\r\n        >\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\" />\r\n          </svg>\r\n          <span>{{ showHighlights ? tf('grammar.practice.reading.hideHighlights', 'Hide highlights') : tf('grammar.practice.reading.showHighlights', 'Show highlights') }}</span>\r\n        </button>\r\n        \r\n        <!-- Reading Timer -->\r\n        <div class=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-white/60\">\r\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          <span>{{ formatTime(readingTime) }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex space-x-4\">\r\n        <!-- Submit/Check Answers -->\r\n        <button\r\n          v-if=\"!showAnswers\"\r\n          @click=\"checkAnswers\"\r\n          :disabled=\"!hasAllAnswers\"\r\n          class=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\r\n        >\r\n          {{ tf('grammar.practice.checkAnswer', 'Check answer') }}\r\n        </button>\r\n        \r\n        <!-- Next Question -->\r\n        <button\r\n          v-else\r\n          @click=\"nextQuestion\"\r\n          class=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n        >\r\n          {{ questionIndex === totalQuestions - 1 ? tf('grammar.practice.finish', 'Finish') : tf('grammar.practice.next', 'Next') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\r\nimport { useI18n } from 'vue-i18n'\r\nimport { useVoiceStore } from '../../../stores/voiceStore'\r\n\r\nconst { t } = useI18n()\r\n// Safe i18n with fallback + params\r\nconst tf = (key: string, fallback: string, params?: Record<string, any>) => {\r\n  try {\r\n    const translated = t(key as any, params as any)\r\n    return typeof translated === 'string' && translated !== key ? translated : fallback\r\n  } catch {\r\n    return fallback\r\n  }\r\n}\r\nconst { playAudio } = useVoiceStore()\r\n\r\n// Props\r\ninterface Question {\r\n  question: string\r\n  type: 'multiple-choice' | 'true-false' | 'short-answer'\r\n  options?: string[]\r\n  correctAnswer: any\r\n  explanation?: string\r\n}\r\n\r\ninterface Props {\r\n  question: {\r\n    id: number\r\n    title?: string\r\n    passage: string\r\n    questions: Question[]\r\n    keywords?: string[]\r\n    audio?: string\r\n  }\r\n  questionIndex: number\r\n  totalQuestions: number\r\n}\r\n\r\nconst props = defineProps<Props>()\r\n\r\n// Emits\r\nconst emit = defineEmits<{\r\n  answer: [answer: { isCorrect: boolean; correctAnswers: number; totalQuestions: number }]\r\n  next: []\r\n  complete: []\r\n}>()\r\n\r\n// State\r\nconst userAnswers = ref<any[]>([])\r\nconst showAnswers = ref(false)\r\nconst showHighlights = ref(false)\r\nconst readingTime = ref(0)\r\nconst timer = ref<number | null>(null)\r\n\r\n// Computed\r\nconst formattedPassage = computed(() => {\r\n  let passage = props.question.passage\r\n  \r\n  if (showHighlights.value && props.question.keywords) {\r\n    props.question.keywords.forEach(keyword => {\r\n      const regex = new RegExp(`\\\\b${keyword}\\\\b`, 'gi')\r\n      passage = passage.replace(regex, `<mark class=\"bg-yellow-200 dark:bg-yellow-700 px-1 rounded\">${keyword}</mark>`)\r\n    })\r\n  }\r\n  \r\n  return passage\r\n})\r\n\r\nconst hasAllAnswers = computed(() => {\r\n  if (!props.question?.questions) return false\r\n  return userAnswers.value.length === props.question.questions.length &&\r\n         userAnswers.value.every(answer => answer !== null && answer !== undefined && answer !== '')\r\n})\r\n\r\nconst correctAnswers = computed(() => {\r\n  if (!props.question?.questions) return 0\r\n  return props.question.questions.filter((q, index) => {\r\n    if (q.type === 'short-answer') {\r\n      return isShortAnswerCorrect(index)\r\n    }\r\n    return userAnswers.value[index] === q.correctAnswer\r\n  }).length\r\n})\r\n\r\nconst incorrectAnswers = computed(() => {\r\n  if (!props.question?.questions) return 0\r\n  return props.question.questions.length - correctAnswers.value\r\n})\r\n\r\nconst accuracy = computed(() => {\r\n  return props.question.questions.length > 0 \r\n    ? Math.round((correctAnswers.value / props.question.questions.length) * 100)\r\n    : 0\r\n})\r\n\r\n// Methods\r\nconst isShortAnswerCorrect = (index: number) => {\r\n  const userAnswer = userAnswers.value[index]\r\n  const correctAnswer = props.question.questions[index].correctAnswer\r\n  \r\n  if (!userAnswer || !correctAnswer) return false\r\n  \r\n  // Simple text comparison (case insensitive, trimmed)\r\n  return userAnswer.toLowerCase().trim() === correctAnswer.toLowerCase().trim()\r\n}\r\n\r\nconst toggleHighlights = () => {\r\n  showHighlights.value = !showHighlights.value\r\n}\r\n\r\nconst checkAnswers = () => {\r\n  if (!hasAllAnswers.value) return\r\n  \r\n  showAnswers.value = true\r\n  stopTimer()\r\n  \r\n  const isCorrect = correctAnswers.value === props.question.questions.length\r\n  \r\n  emit('answer', {\r\n    isCorrect,\r\n    correctAnswers: correctAnswers.value,\r\n    totalQuestions: props.question.questions.length\r\n  })\r\n}\r\n\r\nconst nextQuestion = () => {\r\n  if (props.questionIndex === props.totalQuestions - 1) {\r\n    emit('complete')\r\n  } else {\r\n    resetExercise()\r\n    emit('next')\r\n  }\r\n}\r\n\r\nconst playPassageAudio = async () => {\r\n  try {\r\n    await playAudio(props.question.passage)\r\n  } catch (error) {\r\n    console.error('Error playing passage audio:', error)\r\n  }\r\n}\r\n\r\nconst resetExercise = () => {\r\n  userAnswers.value = []\r\n  showAnswers.value = false\r\n  showHighlights.value = false\r\n  readingTime.value = 0\r\n  startTimer()\r\n}\r\n\r\nconst startTimer = () => {\r\n  timer.value = setInterval(() => {\r\n    readingTime.value += 1\r\n  }, 1000)\r\n}\r\n\r\nconst stopTimer = () => {\r\n  if (timer.value) {\r\n    clearInterval(timer.value)\r\n    timer.value = null\r\n  }\r\n}\r\n\r\nconst formatTime = (seconds: number) => {\r\n  const mins = Math.floor(seconds / 60)\r\n  const secs = seconds % 60\r\n  return `${mins}:${secs.toString().padStart(2, '0')}`\r\n}\r\n\r\n// Initialize\r\nonMounted(() => {\r\n  // Safe guard for questions array\r\n  if (props.question?.questions && Array.isArray(props.question.questions)) {\r\n    userAnswers.value = new Array(props.question.questions.length).fill(null)\r\n  } else {\r\n    userAnswers.value = []\r\n  }\r\n  startTimer()\r\n})\r\n\r\nonUnmounted(() => {\r\n  stopTimer()\r\n})\r\n</script>\r\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","question","_Fragment","_normalizeClass","_vModelRadio","_renderList","_vModelText","questionIndex","totalQuestions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqPA,UAAM,EAAE,EAAA,IAAM,QAAA;AAEd,UAAM,KAAK,CAAC,KAAa,UAAkB,WAAiC;AAC1E,UAAI;AACF,cAAM,aAAa,EAAE,KAAY,MAAa;AAC9C,eAAO,OAAO,eAAe,YAAY,eAAe,MAAM,aAAa;AAAA,MAC7E,QAAQ;AACN,eAAO;AAAA,MACT;AAAA,IACF;AACA,UAAM,EAAE,UAAA,IAAc,cAAA;AAwBtB,UAAM,QAAQ;AAGd,UAAM,OAAO;AAOb,UAAM,cAAc,IAAW,EAAE;AACjC,UAAM,cAAc,IAAI,KAAK;AAC7B,UAAM,iBAAiB,IAAI,KAAK;AAChC,UAAM,cAAc,IAAI,CAAC;AACzB,UAAM,QAAQ,IAAmB,IAAI;AAGrC,UAAM,mBAAmB,SAAS,MAAM;AACtC,UAAI,UAAU,MAAM,SAAS;AAE7B,UAAI,eAAe,SAAS,MAAM,SAAS,UAAU;AACnD,cAAM,SAAS,SAAS,QAAQ,CAAA,YAAW;AACzC,gBAAM,QAAQ,IAAI,OAAO,MAAM,OAAO,OAAO,IAAI;AACjD,oBAAU,QAAQ,QAAQ,OAAO,+DAA+D,OAAO,SAAS;AAAA,QAClH,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT,CAAC;AAED,UAAM,gBAAgB,SAAS,MAAM;AACnC,UAAI,CAAC,MAAM,UAAU,UAAW,QAAO;AACvC,aAAO,YAAY,MAAM,WAAW,MAAM,SAAS,UAAU,UACtD,YAAY,MAAM,MAAM,YAAU,WAAW,QAAQ,WAAW,UAAa,WAAW,EAAE;AAAA,IACnG,CAAC;AAED,UAAM,iBAAiB,SAAS,MAAM;AACpC,UAAI,CAAC,MAAM,UAAU,UAAW,QAAO;AACvC,aAAO,MAAM,SAAS,UAAU,OAAO,CAAC,GAAG,UAAU;AACnD,YAAI,EAAE,SAAS,gBAAgB;AAC7B,iBAAO,qBAAqB,KAAK;AAAA,QACnC;AACA,eAAO,YAAY,MAAM,KAAK,MAAM,EAAE;AAAA,MACxC,CAAC,EAAE;AAAA,IACL,CAAC;AAED,UAAM,mBAAmB,SAAS,MAAM;AACtC,UAAI,CAAC,MAAM,UAAU,UAAW,QAAO;AACvC,aAAO,MAAM,SAAS,UAAU,SAAS,eAAe;AAAA,IAC1D,CAAC;AAED,UAAM,WAAW,SAAS,MAAM;AAC9B,aAAO,MAAM,SAAS,UAAU,SAAS,IACrC,KAAK,MAAO,eAAe,QAAQ,MAAM,SAAS,UAAU,SAAU,GAAG,IACzE;AAAA,IACN,CAAC;AAGD,UAAM,uBAAuB,CAAC,UAAkB;AAC9C,YAAM,aAAa,YAAY,MAAM,KAAK;AAC1C,YAAM,gBAAgB,MAAM,SAAS,UAAU,KAAK,EAAE;AAEtD,UAAI,CAAC,cAAc,CAAC,cAAe,QAAO;AAG1C,aAAO,WAAW,cAAc,KAAA,MAAW,cAAc,YAAA,EAAc,KAAA;AAAA,IACzE;AAEA,UAAM,mBAAmB,MAAM;AAC7B,qBAAe,QAAQ,CAAC,eAAe;AAAA,IACzC;AAEA,UAAM,eAAe,MAAM;AACzB,UAAI,CAAC,cAAc,MAAO;AAE1B,kBAAY,QAAQ;AACpB,gBAAA;AAEA,YAAM,YAAY,eAAe,UAAU,MAAM,SAAS,UAAU;AAEpE,WAAK,UAAU;AAAA,QACb;AAAA,QACA,gBAAgB,eAAe;AAAA,QAC/B,gBAAgB,MAAM,SAAS,UAAU;AAAA,MAAA,CAC1C;AAAA,IACH;AAEA,UAAM,eAAe,MAAM;AACzB,UAAI,MAAM,kBAAkB,MAAM,iBAAiB,GAAG;AACpD,aAAK,UAAU;AAAA,MACjB,OAAO;AACL,sBAAA;AACA,aAAK,MAAM;AAAA,MACb;AAAA,IACF;AAEA,UAAM,mBAAmB,YAAY;AACnC,UAAI;AACF,cAAM,UAAU,MAAM,SAAS,OAAO;AAAA,MACxC,SAAS,OAAO;AACd,gBAAQ,MAAM,gCAAgC,KAAK;AAAA,MACrD;AAAA,IACF;AAEA,UAAM,gBAAgB,MAAM;AAC1B,kBAAY,QAAQ,CAAA;AACpB,kBAAY,QAAQ;AACpB,qBAAe,QAAQ;AACvB,kBAAY,QAAQ;AACpB,iBAAA;AAAA,IACF;AAEA,UAAM,aAAa,MAAM;AACvB,YAAM,QAAQ,YAAY,MAAM;AAC9B,oBAAY,SAAS;AAAA,MACvB,GAAG,GAAI;AAAA,IACT;AAEA,UAAM,YAAY,MAAM;AACtB,UAAI,MAAM,OAAO;AACf,sBAAc,MAAM,KAAK;AACzB,cAAM,QAAQ;AAAA,MAChB;AAAA,IACF;AAEA,UAAM,aAAa,CAAC,YAAoB;AACtC,YAAM,OAAO,KAAK,MAAM,UAAU,EAAE;AACpC,YAAM,OAAO,UAAU;AACvB,aAAO,GAAG,IAAI,IAAI,KAAK,WAAW,SAAS,GAAG,GAAG,CAAC;AAAA,IACpD;AAGA,cAAU,MAAM;AAEd,UAAI,MAAM,UAAU,aAAa,MAAM,QAAQ,MAAM,SAAS,SAAS,GAAG;AACxE,oBAAY,QAAQ,IAAI,MAAM,MAAM,SAAS,UAAU,MAAM,EAAE,KAAK,IAAI;AAAA,MAC1E,OAAO;AACL,oBAAY,QAAQ,CAAA;AAAA,MACtB;AACA,iBAAA;AAAA,IACF,CAAC;AAED,gBAAY,MAAM;AAChB,gBAAA;AAAA,IACF,CAAC;;AAtaC,aAAAA,UAAA,GAAAC,mBA4OM,OA5ON,YA4OM;AAAA,QA1OJC,gBAmCM,OAnCN,YAmCM;AAAA,UAlCJA,gBAuBM,OAvBN,YAuBM;AAAA,YAtBJA,gBAEK,MAFL,YAEKC,gBADAC,cAAS,SAAS,GAAE,oCAAA,iBAAA,CAAA,GAAA,CAAA;AAAA,YAGzBF,gBAiBM,OAjBN,YAiBM;AAAA,cAdIE,KAAAA,SAAS,sBADjBH,mBASS,UAAA;AAAA;gBAPN,SAAO;AAAA,gBACR,OAAM;AAAA,cAAA;0CAENC,gBAEM,OAAA;AAAA,kBAFD,OAAM;AAAA,kBAAU,MAAK;AAAA,kBAAO,QAAO;AAAA,kBAAe,SAAQ;AAAA,gBAAA;kBAC7DA,gBAAuK,QAAA;AAAA,oBAAjK,kBAAe;AAAA,oBAAQ,mBAAgB;AAAA,oBAAQ,gBAAa;AAAA,oBAAI,GAAE;AAAA,kBAAA;;gBAE1EA,gBAAkE,8BAAzD,GAAE,mCAAA,QAAA,CAAA,GAAA,CAAA;AAAA,cAAA;cAIbA,gBAEM,OAFN,YAEMC,gBADD,8DAA6D,OAAEA,gBAAG,WAAW,YAAA,KAAW,CAAA,GAAA,CAAA;AAAA,YAAA;;UAMjGD,gBAOM,OAPN,YAOM;AAAA,YANJA,gBAKM,OALN,YAKM;AAAA,cAJJA,gBAGO,OAAA;AAAA,gBAFL,WAAQ,iBAAA;AAAA,gBACR,OAAM;AAAA,cAAA;;;;QAOdA,gBAoIM,OApIN,aAoIM;AAAA,UAnIJA,gBAEK,MAFL,aAEKC,gBADA,GAAE,sCAAA,WAAA,CAAA,GAAA,CAAA;AAAA,UAIPD,gBA6HM,OA7HN,aA6HM;AAAA,aA5HJF,UAAA,IAAA,GAAAC,mBA2HMI,2BA1HiBD,KAAAA,SAAS,WAAS,CAA/B,GAAG,UAAK;kCADlBH,mBA2HM,OAAA;AAAA,gBAzHH,KAAK;AAAA,gBACN,OAAM;AAAA,cAAA;gBAENC,gBA8GM,OA9GN,aA8GM;AAAA,kBA7GJA,gBAEK,MAFL,aAEKC,gBADA,aAAY,OAAEA,gBAAG,EAAE,QAAQ,GAAA,CAAA;AAAA,kBAIrB,EAAE,SAAI,qBAAjBH,aAAAC,mBAiDM,OAjDN,aAiDM;AAAA,qBAhDJD,UAAA,IAAA,GAAAC,mBA+CQI,2BA9C0B,EAAE,SAAO,CAAjC,QAAQ,gBAAW;0CAD7BJ,mBA+CQ,SAAA;AAAA,wBA7CL,KAAK;AAAA,wBACL,OAAKK,eAAA;AAAA;0BAAqH,YAAA,MAAY,KAAK,MAAM;0BAAoQ,YAAA,SAAe,gBAAgB,EAAE;0BAAoK,YAAA,SAAe,YAAA,MAAY,KAAK,MAAM,eAAe,gBAAgB,EAAE;;;uCAalqBJ,gBAOE,SAAA;AAAA,0BANA,MAAK;AAAA,0BACJ,kBAAkB,KAAK;AAAA,0BACvB,OAAO;AAAA,0BACC,uBAAA,CAAA,WAAA,YAAA,MAAY,KAAK,IAAA;AAAA,0BACzB,UAAU,YAAA;AAAA,0BACX,OAAM;AAAA,wBAAA;0BAFG,CAAAK,aAAA,YAAA,MAAY,KAAK,CAAA;AAAA,wBAAA;wBAI5BL,gBAA+D,QAA/D,aAA+DC,gBAAhB,MAAM,GAAA,CAAA;AAAA,wBAGrDD,gBAmBM,OAnBN,aAmBM;AAAA,0BAjBI,YAAA,SAAe,gBAAgB,EAAE,iBADzCF,UAAA,GAAAC,mBAQM,OARN,aAQM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA;AAAA,4BADJC,gBAA2F,QAAA;AAAA,8BAArF,kBAAe;AAAA,8BAAQ,mBAAgB;AAAA,8BAAQ,gBAAa;AAAA,8BAAI,GAAE;AAAA,4BAAA;iCAG7D,YAAA,SAAe,YAAA,MAAY,KAAK,MAAM,eAAe,gBAAgB,EAAE,iBADpFF,UAAA,GAAAC,mBAQM,OARN,aAQM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA;AAAA,4BADJC,gBAAiG,QAAA;AAAA,8BAA3F,kBAAe;AAAA,8BAAQ,mBAAgB;AAAA,8BAAQ,gBAAa;AAAA,8BAAI,GAAE;AAAA,4BAAA;;;;;wBAOhE,EAAE,SAAI,gBAAtBF,UAAA,GAAAC,mBA4BM,OA5BN,aA4BM;AAAA,kCA3BJA,mBA0BQI,UAAA,MAAAG,WAzBW,CAAA,QAAA,OAAA,GAAiB,CAA3B,WAAM;6BADfN,gBA0BQ,SAAA;AAAA,wBAxBL,KAAK;AAAA,wBACL,OAAKI,eAAA;AAAA;0BAAsH,YAAA,MAAY,KAAK,MAAM;0BAA0P,YAAA,SAAe,WAAW,EAAE;0BAAoK,YAAA,SAAe,YAAA,MAAY,KAAK,MAAM,UAAU,WAAW,EAAE;;;uCAa1oBJ,gBAME,SAAA;AAAA,0BALA,MAAK;AAAA,0BACJ,kBAAkB,KAAK;AAAA,0BACvB,OAAO;AAAA,0BACC,uBAAA,CAAA,WAAA,YAAA,MAAY,KAAK,IAAA;AAAA,0BACzB,UAAU,YAAA;AAAA,wBAAA;0BADF,CAAAK,aAAA,YAAA,MAAY,KAAK,CAAA;AAAA,wBAAA;wBAG5BL,gBAEO,QAFP,aAEOC,gBADF,WAAM,SAAc,8CAA8C,GAAE,kCAAA,OAAA,CAAA,GAAA,CAAA;AAAA,sBAAA;;wBAM7D,EAAE,SAAI,kBAAtBH,UAAA,GAAAC,mBAoBM,OApBN,aAoBM;AAAA,mCAnBJC,gBAaE,SAAA;AAAA,sBAZS,uBAAA,CAAA,WAAA,YAAA,MAAY,KAAK,IAAA;AAAA,sBACzB,UAAU,YAAA;AAAA,sBACV,aAAa,GAAE,uCAAA,aAAA;AAAA,sBACf,OAAKI,eAAA;AAAA;wBAA0I,YAAA,QAAmC,qBAAqB,KAAK;;;;sBAHpM,CAAAG,YAAA,YAAA,MAAY,KAAK,CAAA;AAAA,oBAAA;oBAejB,YAAA,SAAW,CAAK,qBAAqB,KAAK,kBAArDR,mBAEM,OAFN,aAEME,gBADD,kEAAiE,OAAEA,gBAAG,EAAE,aAAa,GAAA,CAAA;;;gBAMnF,YAAA,SAAe,EAAE,eAA5BH,aAAAC,mBAIM,OAJN,aAIM;AAAA,kBAHJC,gBAEI,KAFJ,aAEI;AAAA,oBADFA,gBAAyE,UAAA,MAAAC,gBAA9D,GAAE,gCAAA,aAAA,CAAA,IAAkD,KAAC,CAAA;AAAA,oCAAS,MAACA,gBAAG,EAAE,WAAW,GAAA,CAAA;AAAA,kBAAA;;;;;;QAQzF,YAAA,SAAXH,UAAA,GAAAC,mBAeM,OAfN,aAeM;AAAA,UAdJC,gBAaM,OAbN,aAaM;AAAA,YAZJA,gBAGM,OAAA,MAAA;AAAA,cAFJA,gBAA2F,OAA3F,aAA2FC,gBAAvB,eAAA,KAAc,GAAA,CAAA;AAAA,cAClFD,gBAAmH,OAAnH,aAAmHC,gBAA1D,GAAE,oCAAA,SAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAE7DD,gBAGM,OAAA,MAAA;AAAA,cAFJA,gBAA2F,OAA3F,aAA2FC,gBAAzB,iBAAA,KAAgB,GAAA,CAAA;AAAA,cAClFD,gBAAuH,OAAvH,aAAuHC,gBAA9D,GAAE,sCAAA,WAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAE7DD,gBAGM,OAAA,MAAA;AAAA,cAFJA,gBAAwF,OAAxF,aAAwFC,gBAAlB,SAAA,KAAQ,IAAG,KAAC,CAAA;AAAA,cAClFD,gBAAqH,OAArH,aAAqHC,gBAA5D,GAAE,qCAAA,UAAA,CAAA,GAAA,CAAA;AAAA,YAAA;;;QAMjED,gBA0CM,OA1CN,aA0CM;AAAA,UAzCJA,gBAmBM,OAnBN,aAmBM;AAAA,YAjBJA,gBAQS,UAAA;AAAA,cAPN,SAAO;AAAA,cACR,OAAM;AAAA,YAAA;wCAENA,gBAEM,OAAA;AAAA,gBAFD,OAAM;AAAA,gBAAU,MAAK;AAAA,gBAAO,QAAO;AAAA,gBAAe,SAAQ;AAAA,cAAA;gBAC7DA,gBAAgH,QAAA;AAAA,kBAA1G,kBAAe;AAAA,kBAAQ,mBAAgB;AAAA,kBAAQ,gBAAa;AAAA,kBAAI,GAAE;AAAA,gBAAA;;cAE1EA,gBAAuK,QAAA,MAAAC,gBAA9J,eAAA,QAAiB,mEAAmE,GAAE,2CAAA,iBAAA,CAAA,GAAA,CAAA;AAAA,YAAA;YAIjGD,gBAKM,OALN,aAKM;AAAA,wCAJJA,gBAEM,OAAA;AAAA,gBAFD,OAAM;AAAA,gBAAU,MAAK;AAAA,gBAAO,QAAO;AAAA,gBAAe,SAAQ;AAAA,cAAA;gBAC7DA,gBAAwH,QAAA;AAAA,kBAAlH,kBAAe;AAAA,kBAAQ,mBAAgB;AAAA,kBAAQ,gBAAa;AAAA,kBAAI,GAAE;AAAA,gBAAA;;cAE1EA,gBAA0C,QAAA,MAAAC,gBAAjC,WAAW,YAAA,KAAW,CAAA,GAAA,CAAA;AAAA,YAAA;;UAInCD,gBAmBM,OAnBN,aAmBM;AAAA,aAhBK,YAAA,sBADTD,mBAOS,UAAA;AAAA;cALN,SAAO;AAAA,cACP,WAAW,cAAA;AAAA,cACZ,OAAM;AAAA,YAAA,mBAEH,GAAE,gCAAA,cAAA,CAAA,GAAA,GAAA,WAAA,mBAIPA,mBAMS,UAAA;AAAA;cAJN,SAAO;AAAA,cACR,OAAM;AAAA,YAAA,GAEHS,gBAAAA,KAAAA,kBAAkBC,KAAAA,iBAAc,IAAO,0CAA0C,GAAE,yBAAA,MAAA,CAAA,GAAA,CAAA;AAAA,UAAA;;;;;;"}