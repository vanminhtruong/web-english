{"version":3,"mappings":"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","names":["_openBlock","_createElementBlock","_createVNode","_unref","_createElementVNode","_toDisplayString","_Fragment","_renderList","_normalizeClass"],"ignoreList":[],"sources":["../../src/views/dashboard/DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen overflow-x-hidden bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-[#0a0a0a] dark:to-[#0f0f0f] relative\">\n    <!-- Animated Background Elements -->\n    <div class=\"absolute inset-0 overflow-hidden pointer-events-none z-0\">\n      <div class=\"floating-shapes\">\n        <div class=\"absolute top-20 left-10 w-40 h-40 sm:w-64 sm:h-64 bg-blue-300 dark:bg-blue-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob\"></div>\n        <div class=\"absolute top-40 right-10 w-48 h-48 sm:w-72 sm:h-72 bg-purple-300 dark:bg-purple-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-2000\"></div>\n        <div class=\"absolute -bottom-8 left-20 w-56 h-56 sm:w-80 sm:h-80 bg-pink-300 dark:bg-pink-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-4000\"></div>\n      </div>\n    </div>\n    \n    <!-- Header -->\n    <LazyLoadComponent animation-type=\"fade-up\">\n      <DashboardHeader />\n    </LazyLoadComponent>\n\n    <!-- Main Content -->\n    <div class=\"max-w-7xl mx-auto py-3 sm:py-5 px-3 sm:px-6 lg:px-8 relative\">\n      <!-- Stats Overview -->\n      <LazyLoadComponent animation-type=\"slide-up\" :threshold=\"0.2\">\n        <DashboardStats :stats=\"stats\" class=\"mb-8\" />\n      </LazyLoadComponent>\n\n      <!-- Flashcard Practice Stats Section -->\n      <LazyLoadComponent animation-type=\"slide-up\" :threshold=\"0.15\">\n        <div class=\"mb-6 sm:mb-8\">\n          <FlashcardStats />\n        </div>\n      </LazyLoadComponent>\n\n      <!-- Quick Actions & Recent Activity -->\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 sm:gap-6 mb-6 sm:mb-8\">\n        <LazyLoadComponent animation-type=\"slide-left\" :threshold=\"0.15\">\n          <div class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-105 hover:-translate-y-2 h-full min-h-[360px] sm:min-h-[420px] flex flex-col\">\n            <div class=\"px-4 py-5 sm:p-8 flex-1 flex flex-col\">\n              <div class=\"flex items-center mb-6\">\n                <div class=\"animate-pulse-slow\">\n                  <div class=\"w-3 h-3 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full mr-3\"></div>\n                </div>\n                <h3 class=\"text-lg sm:text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent\">\n                  {{ t('dashboard.quickActions', 'Quick Actions') }}\n                </h3>\n              </div>\n              \n              <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 flex-1\">\n                <!-- Add Vocabulary Button -->\n                <button @click=\"navigateTo('/vocabulary')\" \n                        class=\"group/btn relative overflow-hidden bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-semibold py-3 px-3 sm:py-4 sm:px-4 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg active:scale-95\">\n                  <div class=\"absolute inset-0 bg-gradient-to-r from-blue-400 to-blue-500 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300\"></div>\n                  <div class=\"relative z-10 text-center\">\n                    <svg class=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mx-auto mb-2 transform group-hover/btn:rotate-180 transition-transform duration-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\"/>\n                    </svg>\n                    <span class=\"text-xs sm:text-sm md:text-base font-medium\">{{ t('dashboard.actions.addVocabulary', 'Add Vocabulary') }}</span>\n                  </div>\n                  <div class=\"absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-20 transition-opacity duration-300\"></div>\n                </button>\n                \n                <!-- Practice Flashcard Button -->\n                <button @click=\"navigateTo('/practice/flashcard')\" \n                        class=\"group/btn relative overflow-hidden bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-semibold py-3 px-3 sm:py-4 sm:px-4 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg active:scale-95\">\n                  <div class=\"absolute inset-0 bg-gradient-to-r from-green-400 to-green-500 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300\"></div>\n                  <div class=\"relative z-10 text-center\">\n                    <svg class=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mx-auto mb-2 transform group-hover/btn:scale-110 transition-transform duration-300\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"/>\n                    </svg>\n                    <span class=\"text-xs sm:text-sm md:text-base font-medium\">{{ t('dashboard.actions.practiceFlashcard', 'Practice Flashcard') }}</span>\n                  </div>\n                  <div class=\"absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-20 transition-opacity duration-300\"></div>\n                </button>\n                \n                <!-- Take Quiz Button -->\n                <button @click=\"navigateTo('/practice/quiz')\" \n                        class=\"group/btn relative overflow-hidden bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-white font-semibold py-3 px-3 sm:py-4 sm:px-4 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg active:scale-95\">\n                  <div class=\"absolute inset-0 bg-gradient-to-r from-yellow-400 to-yellow-500 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300\"></div>\n                  <div class=\"relative z-10 text-center\">\n                    <svg class=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mx-auto mb-2 transform group-hover/btn:bounce\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n                    </svg>\n                    <span class=\"text-xs sm:text-sm md:text-base font-medium\">{{ t('dashboard.actions.takeQuiz', 'Take a Quiz') }}</span>\n                  </div>\n                  <div class=\"absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-20 transition-opacity duration-300\"></div>\n                </button>\n                \n                <!-- Learn Grammar Button -->\n                <button @click=\"navigateTo('/grammar')\" \n                        class=\"group/btn relative overflow-hidden bg-gradient-to-r from-purple-500 to-purple-600 hover:from-purple-600 hover:to-purple-700 text-white font-semibold py-3 px-3 sm:py-4 sm:px-4 rounded-xl transition-all duration-300 transform hover:scale-105 hover:shadow-lg active:scale-95\">\n                  <div class=\"absolute inset-0 bg-gradient-to-r from-purple-400 to-purple-500 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300\"></div>\n                  <div class=\"relative z-10 text-center\">\n                    <svg class=\"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mx-auto mb-2 transform group-hover/btn:rotate-12 transition-transform duration-300\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path d=\"M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z\"/>\n                    </svg>\n                    <span class=\"text-xs sm:text-sm md:text-base font-medium\">{{ t('dashboard.actions.learnGrammar', 'Learn Grammar') }}</span>\n                  </div>\n                  <div class=\"absolute inset-0 bg-white opacity-0 group-hover/btn:opacity-20 transition-opacity duration-300\"></div>\n                </button>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n\n        <!-- Recent Activity -->\n        <LazyLoadComponent animation-type=\"slide-up\" :threshold=\"0.15\">\n          <div class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-105 hover:-translate-y-2 h-full min-h-[420px] flex flex-col\">\n            <div class=\"px-6 py-8 sm:p-8 flex-1 flex flex-col\">\n              <div class=\"flex items-center mb-6\">\n                <div class=\"animate-pulse-slow\">\n                  <div class=\"w-3 h-3 bg-gradient-to-r from-green-400 to-blue-500 rounded-full mr-3\"></div>\n                </div>\n                <h3 class=\"text-lg sm:text-xl md:text-2xl font-bold bg-gradient-to-r from-green-600 to-blue-600 dark:from-green-400 dark:to-blue-400 bg-clip-text text-transparent\">\n                  {{ t('dashboard.recentActivity', 'Recent Activity') }}\n                </h3>\n              </div>\n              \n              <div class=\"space-y-4 flex-1\">\n                <div v-for=\"(activity, index) in recentActivities\" \n                     :key=\"activity.id\" \n                     class=\"group/activity flex items-center space-x-4 p-3 rounded-xl hover:bg-white/50 dark:hover:bg-white/5 transition-all duration-300 transform hover:scale-105\"\n                     :style=\"{ animationDelay: `${index * 100}ms` }\">\n                  <div class=\"flex-shrink-0\">\n                    <div class=\"w-10 h-10 rounded-full flex items-center justify-center transform group-hover/activity:rotate-12 group-hover/activity:scale-110 transition-all duration-300\" \n                         :class=\"activity.iconColor\">\n                      <svg class=\"w-5 h-5 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\"/>\n                      </svg>\n                    </div>\n                  </div>\n                  <div class=\"flex-1 min-w-0\">\n                    <p class=\"text-xs sm:text-sm md:text-base font-semibold text-gray-900 dark:text-white truncate\">{{ activity.title }}</p>\n                    <p class=\"text-xs sm:text-sm text-blue-600 dark:text-blue-400 font-medium\">{{ activity.time }}</p>\n                  </div>\n                  <div class=\"opacity-0 group-hover/activity:opacity-100 transition-opacity duration-300\">\n                    <svg class=\"w-5 h-5 text-blue-500 dark:text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, computed, defineAsyncComponent } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport { loadComponentSafely } from '../../utils/import-helper'\nimport { useVocabularyStore } from '../../composables/useVocabularyStore'\nimport { getRelativeTime } from '../../utils/dateUtils'\n// Sử dụng defineAsyncComponent để import components an toàn\nconst LazyLoadComponent = defineAsyncComponent(\n  loadComponentSafely(() => import('../../components/LazyLoadComponent.vue'))\n)\nconst DashboardHeader = defineAsyncComponent(\n  loadComponentSafely(() => import('./components/DashboardHeader.vue'))\n)\nconst DashboardStats = defineAsyncComponent(\n  loadComponentSafely(() => import('./components/DashboardStats.vue'))\n)\nconst FlashcardStats = defineAsyncComponent(\n  loadComponentSafely(() => import('./components/FlashcardStats.vue'))\n)\n\nconst router = useRouter()\nconst { t } = useI18n()\nconst vocabularyStore = useVocabularyStore()\n\n\n\n// Computed stats data based on real vocabulary data\nconst stats = computed(() => {\n  const allVocabs = vocabularyStore.allVocabularies.value\n  const favoriteCount = vocabularyStore.favoriteVocabularies.value.length\n  const categories = vocabularyStore.getCategories.value.length\n  \n  // Calculate learning streak (simplified)\n  const today = new Date()\n  const todayStr = today.toISOString().split('T')[0]\n  const todayVocabs = allVocabs.filter(v => \n    v.createdAt && v.createdAt.split('T')[0] === todayStr\n  ).length\n  \n  return {\n    vocabularyLearned: allVocabs.length,\n    grammarLessons: categories, // Use categories count as grammar lessons\n    currentStreak: Math.max(1, todayVocabs), // At least 1 if there are vocabularies\n    totalTime: favoriteCount * 5 // Estimate 5 minutes per favorite vocabulary\n  }\n})\n\n// Recent activities based on actual vocabulary data\nconst recentActivities = computed(() => {\n  const allVocabs = vocabularyStore.allVocabularies.value\n  const activities: Array<{\n    id: number\n    title: string\n    time: string\n    iconColor: string\n  }> = []\n  \n  // Get recent vocabularies (sorted by creation/update time)\n  const recentVocabs = [...allVocabs]\n    .sort((a, b) => {\n      const aTime = a.updatedAt || a.createdAt || ''\n      const bTime = b.updatedAt || b.createdAt || ''\n      return new Date(bTime).getTime() - new Date(aTime).getTime()\n    })\n    .slice(0, 4)\n  \n  recentVocabs.forEach((vocab, index) => {\n    const isUpdated = vocab.updatedAt && vocab.updatedAt !== vocab.createdAt\n    const timeStr = vocab.updatedAt || vocab.createdAt || ''\n    \n    const categoryTranslated = t(`categories.${vocab.category}`, vocab.category)\n    \n    activities.push({\n      id: index + 1,\n      title: isUpdated \n        ? t('dashboard.activity.updated', { word: vocab.word, category: categoryTranslated }, `Updated '${vocab.word}' in ${categoryTranslated}`)\n        : t('dashboard.activity.added', { word: vocab.word, category: categoryTranslated }, `Added '${vocab.word}' to ${categoryTranslated}`),\n      time: timeStr ? getRelativeTime(timeStr, t) : t('dashboard.activity.justNow', 'Just now'),\n      iconColor: isUpdated ? 'bg-blue-500' : 'bg-green-500'\n    })\n  })\n  \n  // Add practice activity if no vocabulary activities (fallback)\n  if (activities.length === 0) {\n    activities.push({\n      id: 1,\n      title: t('dashboard.activity.noActivity', 'No recent activity'),\n      time: t('dashboard.activity.addFirstVocab', 'Add your first vocabulary to get started!'),\n      iconColor: 'bg-gray-500'\n    })\n  }\n  \n  return activities\n})\n\nconst navigateTo = (path: string) => {\n  router.push(path)\n}\n\nonMounted(() => {\n  // Initialize vocabulary store\n  vocabularyStore.initializeStore()\n  console.log('Dashboard mounted with real data')\n})\n</script>\n"],"file":"assets/DashboardView-1sfYDp5e.js"}