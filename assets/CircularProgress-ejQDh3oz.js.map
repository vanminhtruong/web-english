{"version":3,"file":"CircularProgress-ejQDh3oz.js","sources":["../../src/components/CircularProgress.vue"],"sourcesContent":["<template>\n  <div class=\"relative inline-flex items-center justify-center\">\n    <!-- SVG Circle Progress -->\n    <svg \n      :width=\"size\" \n      :height=\"size\" \n      class=\"transform -rotate-90\" \n      :viewBox=\"`0 0 ${size} ${size}`\"\n    >\n      <!-- Background circle -->\n      <circle\n        :cx=\"size / 2\"\n        :cy=\"size / 2\"\n        :r=\"radius\"\n        stroke=\"currentColor\"\n        :stroke-width=\"strokeWidth\"\n        fill=\"transparent\"\n        class=\"text-gray-200 dark:text-dark-bg-mute opacity-50\"\n      />\n      <!-- Progress circle -->\n      <circle\n        :cx=\"size / 2\"\n        :cy=\"size / 2\"\n        :r=\"radius\"\n        stroke=\"currentColor\"\n        :stroke-width=\"strokeWidth\"\n        fill=\"transparent\"\n        :stroke-dasharray=\"circumference\"\n        :stroke-dashoffset=\"strokeDashoffset\"\n        :class=\"progressColor\"\n        class=\"transition-all duration-500 ease-in-out\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n    \n    <!-- Percentage text in center -->\n    <div \n      class=\"absolute inset-0 flex items-center justify-center z-10\"\n      :class=\"textSizeClass\"\n    >\n      <span \n        class=\"font-bold transition-colors duration-300 bg-white dark:bg-dark-bg rounded-full px-0.5 py-0.5 shadow-sm\"\n        :class=\"textColor\"\n        style=\"line-height: 1;\"\n      >\n        {{ displayValue }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\n\ninterface Props {\n  /** Progress percentage (0-100) */\n  percentage: number\n  /** Size of the circle in pixels */\n  size?: number\n  /** Stroke width of the circle */\n  strokeWidth?: number\n  /** Custom color classes for the progress circle */\n  color?: string\n  /** Show percentage or custom text */\n  showText?: boolean\n  /** Custom text to display instead of percentage */\n  customText?: string\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  percentage: 0,\n  size: 48,\n  strokeWidth: 4,\n  color: '',\n  showText: true,\n  customText: ''\n})\n\n// Calculate circle properties\nconst radius = computed(() => (props.size - props.strokeWidth) / 2)\nconst circumference = computed(() => radius.value * 2 * Math.PI)\nconst strokeDashoffset = computed(() => {\n  const progress = Math.min(Math.max(props.percentage, 0), 100)\n  return circumference.value - (progress / 100) * circumference.value\n})\n\n// Color classes based on progress\nconst progressColor = computed(() => {\n  if (props.color) return props.color\n  \n  if (props.percentage >= 100) {\n    return 'text-green-500 dark:text-green-400'\n  } else if (props.percentage >= 70) {\n    return 'text-blue-500 dark:text-blue-400'\n  } else if (props.percentage >= 40) {\n    return 'text-yellow-500 dark:text-yellow-400'\n  } else {\n    return 'text-orange-500 dark:text-orange-400'\n  }\n})\n\n// Text color to match progress color\nconst textColor = computed(() => {\n  if (props.percentage >= 100) {\n    return 'text-green-600 dark:text-green-300'\n  } else if (props.percentage >= 70) {\n    return 'text-blue-600 dark:text-blue-300'\n  } else if (props.percentage >= 40) {\n    return 'text-yellow-600 dark:text-yellow-300'\n  } else {\n    return 'text-orange-600 dark:text-orange-300'\n  }\n})\n\n// Text size based on circle size\nconst textSizeClass = computed(() => {\n  if (props.size <= 32) {\n    return 'text-xs'\n  } else if (props.size <= 48) {\n    return 'text-sm'\n  } else if (props.size <= 64) {\n    return 'text-base'\n  } else {\n    return 'text-lg'\n  }\n})\n\n// Display value\nconst displayValue = computed(() => {\n  if (props.customText) {\n    return props.customText\n  }\n  if (!props.showText) {\n    return ''\n  }\n  return `${Math.round(props.percentage)}%`\n})\n</script>\n\n<style scoped>\n/* Additional animations for smooth progress changes */\ncircle {\n  transition: stroke-dashoffset 0.5s ease-in-out;\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","size","_createElementVNode","strokeWidth","_normalizeClass"],"mappings":";;;;;;;;;;;;;;;;;;AAqEA,UAAM,QAAQ;AAUd,UAAM,SAAS,SAAS,OAAO,MAAM,OAAO,MAAM,eAAe,CAAC;AAClE,UAAM,gBAAgB,SAAS,MAAM,OAAO,QAAQ,IAAI,KAAK,EAAE;AAC/D,UAAM,mBAAmB,SAAS,MAAM;AACtC,YAAM,WAAW,KAAK,IAAI,KAAK,IAAI,MAAM,YAAY,CAAC,GAAG,GAAG;AAC5D,aAAO,cAAc,QAAS,WAAW,MAAO,cAAc;AAAA,IAChE,CAAC;AAGD,UAAM,gBAAgB,SAAS,MAAM;AACnC,UAAI,MAAM,MAAO,QAAO,MAAM;AAE9B,UAAI,MAAM,cAAc,KAAK;AAC3B,eAAO;AAAA,MACT,WAAW,MAAM,cAAc,IAAI;AACjC,eAAO;AAAA,MACT,WAAW,MAAM,cAAc,IAAI;AACjC,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAGD,UAAM,YAAY,SAAS,MAAM;AAC/B,UAAI,MAAM,cAAc,KAAK;AAC3B,eAAO;AAAA,MACT,WAAW,MAAM,cAAc,IAAI;AACjC,eAAO;AAAA,MACT,WAAW,MAAM,cAAc,IAAI;AACjC,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAGD,UAAM,gBAAgB,SAAS,MAAM;AACnC,UAAI,MAAM,QAAQ,IAAI;AACpB,eAAO;AAAA,MACT,WAAW,MAAM,QAAQ,IAAI;AAC3B,eAAO;AAAA,MACT,WAAW,MAAM,QAAQ,IAAI;AAC3B,eAAO;AAAA,MACT,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AAGD,UAAM,eAAe,SAAS,MAAM;AAClC,UAAI,MAAM,YAAY;AACpB,eAAO,MAAM;AAAA,MACf;AACA,UAAI,CAAC,MAAM,UAAU;AACnB,eAAO;AAAA,MACT;AACA,aAAO,GAAG,KAAK,MAAM,MAAM,UAAU,CAAC;AAAA,IACxC,CAAC;;AAvIC,aAAAA,UAAA,GAAAC,mBA+CM,OA/CN,YA+CM;AAAA,sBA7CJA,mBA8BM,OAAA;AAAA,UA7BH,OAAOC,KAAAA;AAAAA,UACP,QAAQA,KAAAA;AAAAA,UACT,OAAM;AAAA,UACL,SAAO,OAASA,KAAAA,IAAI,IAAIA,KAAAA,IAAI;AAAA,QAAA;UAG7BC,gBAQE,UAAA;AAAA,YAPC,IAAID,KAAAA,OAAI;AAAA,YACR,IAAIA,KAAAA,OAAI;AAAA,YACR,GAAG,OAAA;AAAA,YACJ,QAAO;AAAA,YACN,gBAAcE,KAAAA;AAAAA,YACf,MAAK;AAAA,YACL,OAAM;AAAA,UAAA;UAGRD,gBAYE,UAAA;AAAA,YAXC,IAAID,KAAAA,OAAI;AAAA,YACR,IAAIA,KAAAA,OAAI;AAAA,YACR,GAAG,OAAA;AAAA,YACJ,QAAO;AAAA,YACN,gBAAcE,KAAAA;AAAAA,YACf,MAAK;AAAA,YACJ,oBAAkB,cAAA;AAAA,YAClB,qBAAmB,iBAAA;AAAA,YACnB,OAAKC,eAAA,CAAE,cAAA,OACF,yCAAyC,CAAA;AAAA,YAC/C,kBAAe;AAAA,UAAA;;QAKnBF,gBAWM,OAAA;AAAA,UAVJ,OAAKE,eAAA,CAAC,0DACE,cAAA,KAAa,CAAA;AAAA,QAAA;UAErBF,gBAMO,QAAA;AAAA,YALL,OAAKE,eAAA,CAAC,0GACE,UAAA,KAAS,CAAA;AAAA,YACjB,OAAA,EAAA,eAAA,IAAA;AAAA,UAAA,mBAEG,aAAA,KAAY,GAAA,CAAA;AAAA,QAAA;;;;;;"}