{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,UAAM,EAAE,MAAM;AAGd,UAAM,sBAAsB,qBAAqB,0BAAM,OAAO,mCAA2B,oDAAC;AAC1F,UAAM,iBAAiB,qBAAqB,0BAAM,OAAO,8BAAsB,oDAAC;AAGhF,UAAM,kBAAkB,IAAI,KAAK;AACjC,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,kBAAkB,IAAI,KAAK;AACjC,UAAM,iBAAiB;AAEvB,UAAM,QAAQ;AAWd,UAAM,OAAO;AAGb,UAAM,uBAAuB,MAAM;AACjC,WAAK,iBAAiB;AAAA,IACxB;AAGA,UAAM,sBAAsB,CAAC,cAAuB;AAElD,sBAAgB,QAAQ;AACxB,iBAAW,MAAM;AACf,wBAAgB,QAAQ;AACxB,qBAAa,QAAQ;AAAA,MACvB,GAAG,EAAE;AAGL,WAAK,kBAAkB,SAAS;AAAA,IAClC;AAGA,UAAM,kBAAkB,MAAM;AAC5B,WAAK,YAAY;AAAA,IACnB;AAGA,UAAM,gBAAgB,MAAM;AAC1B,sBAAgB,QAAQ;AACxB,mBAAa,QAAQ;AAAA,IACvB;AAIA,UAAM,MAAM,MAAM,uBAAuB,CAAC,aAAa;AACrD,UAAI,YAAY,CAAC,gBAAgB,SAAS,CAAC,MAAM,mBAAmB;AAElE,wBAAgB,QAAQ,MAAM;AAE9B,mBAAW,MAAM;AACf,0BAAgB,QAAQ;AACxB,uBAAa,QAAQ;AAAA,QACvB,GAAG,EAAE;AAAA,MACP;AAAA,IACF,CAAC;;0BAtICA,mBA4DM;AAAA,QA3DJ,OAAM;AAAA,QACL,gDAAD;AAAA,WAAa;AAAA,QACZ,+CAAD;AAAA,WAAY;AAAA,QACX,uDAAD;AAAA,WAAoB;AAAA;QAIZC,0BAAqBC,0BAD7BC,YAMEC,MAAA;AAAA;UAJC,MAAMF;AAAAA,UACN,kBAAgBG;AAAAA,UAChB,iBAAgB;AAAA,UAChB,aAAY;AAAA,oDAIfC,aAAAN,mBAkCM,OAlCN,YAkCM;AAAA,UAjCJO,gBAIM,OAJN,YAIM;AAAA,YAHJA,gBAEO,QAFP,YAEOC,gBADFN,WAAM,WAAWG,kBAAaH,UAAK,QAAQ;AAAA;UAGlDK,gBAAiJ,MAAjJ,YAAiJC,gBAAlBN,WAAM,IAAI;AAAA,UACzIK,gBAAkI,KAAlI,YAAkIC,gBAA1BN,WAAM,aAAa;AAAA,WAE/GO,kDAAZT,mBAEM,OAFN,YAEMQ,gBADDJ,MAAA,GAAC,kIAENJ,mBAaM;AAAA,YAZJO,gBAWS;AAAA,cAVN,SAAO;AAAA,cACP,UAAUG;AAAAA,cACX,OAAKC,eAAA,CAAC,+GAA6G,mBACxFD,kBAAW;AAAA;cAEtCH,gBAIM;AAAA,gBAJD,OAAM;AAAA,gBAAU,MAAK;AAAA,gBAAe,SAAQ;AAAA;gBAC/CA,gBAA+C,UAAzC,GAAE,sCAAoC;AAAA,gBAC5CA,gBAAqG,UAA/F,GAAE,4FAA0F;AAAA,gBAClGA,gBAAkD,UAA5C,GAAE,yCAAuC;AAAA;;;UAKrDA,gBAMM,OANN,YAMM;AAAA,YALKK,4BAATN,UAAA,GAAAN,mBAAwQ,KAAxQ,aAAwQ;AAAA,cAA7Ja,gBAAAL,gBAAAJ,MAAA,iEAA+D,MAAE;AAAA,cAAAG,gBAAwF,QAAxF,aAAwFC,gBAA7BI,wBAAmB;AAAA;YAC/OE,8BAAXR,UAAA,GAAAN,mBAGM,OAHN,aAGM;AAAA,cAFKe,0CAATf,mBAA2K,KAA3K,aAA2KQ,gBAArDJ,MAAA,GAAC,mEACvHJ,mBAAuJ,KAAvJ,aAAuJQ,gBAA1DJ,MAAA,GAAC;AAAA;;;QAMpGY,YAMEZ,MAAA;AAAA,mBALI;AAAA,UAAJ,KAAI;AAAA,UACH,oBAAkB;AAAA,UAClB,iBAAe;AAAA,UACf,cAAY;AAAA,UACZ,kBAAiB;AAAA","names":["_createElementBlock","wordsCrushEnabled","card","_createBlock","_unref","getTopicName","_openBlock","_createElementVNode","_toDisplayString","isSpeechRecognitionSupported","isRecording","_normalizeClass","pronunciationResult","_createTextVNode","pronunciationAnswered","pronunciationCorrect","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/PronunciationMode.vue"],"sourcesContent":["<template>\n  <div\n    class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-4 sm:p-6 md:p-8 min-h-96 h-auto select-none overflow-hidden\"\n    @copy.prevent\n    @cut.prevent\n    @contextmenu.prevent\n  >\n    <!-- Words Crush Mode -->\n    <WordsCrushMode \n      v-if=\"wordsCrushEnabled && card\"\n      :card=\"card\"\n      :get-topic-name=\"getTopicName\"\n      @game-completed=\"handleGameCompleted\"\n      @play-audio=\"handlePlayAudio\"\n    />\n    \n    <!-- Traditional Pronunciation Mode -->\n    <div v-else class=\"text-center h-full flex flex-col justify-start md:justify-center items-center gap-3 md:gap-4\">\n      <div class=\"mb-6\">\n        <span class=\"px-2.5 py-0.5 bg-blue-100 dark:bg-dark-bg-mute text-blue-800 dark:text-blue-300 text-xs sm:text-sm font-medium rounded-full\">\n          {{ card?.category ? getTopicName(card.category) : '' }}\n        </span>\n      </div>\n      <h2 class=\"text-3xl sm:text-4xl md:text-5xl leading-tight font-bold text-gray-900 dark:text-white mb-3 md:mb-4 break-words\">{{ card?.word }}</h2>\n      <p class=\"text-base sm:text-lg md:text-xl text-gray-500 dark:text-white/70 mb-6 md:mb-8 break-words\">{{ card?.pronunciation }}</p>\n\n      <div v-if=\"!isSpeechRecognitionSupported\" class=\"text-red-500 dark:text-red-400\">\n        {{ t('flashcard.pronunciation.microphoneError', 'Microphone error! Please check microphone access permissions.') }}\n      </div>\n      <div v-else>\n        <button\n          @click=\"handleStartRecording\"\n          :disabled=\"isRecording\"\n          class=\"bg-red-500 hover:bg-red-600 text-white p-4 sm:p-5 md:p-6 rounded-full transition-colors disabled:opacity-50\"\n          :class=\"{ 'animate-pulse': isRecording }\"\n        >\n          <svg class=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path d=\"M7 4a3 3 0 016 0v6a3 3 0 11-6 0V4z\" />\n            <path d=\"M5.5 9.5a.5.5 0 01.5.5v1a4 4 0 004 4h.5a.5.5 0 010 1h-.5a5 5 0 01-5-5v-1a.5.5 0 01.5-.5z\" />\n            <path d=\"M10 18a5 5 0 005-5h-1a4 4 0 01-4 4v1z\" />\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"mt-5 sm:mt-6 md:mt-8\">\n        <p v-if=\"pronunciationResult\" class=\"text-gray-600 dark:text-white/80 text-sm sm:text-base break-words\">{{ t('flashcard.pronunciation.yourRecording', 'Your Recording') }}: <span class=\"font-medium text-gray-800 dark:text-white\">{{ pronunciationResult }}</span></p>\n        <div v-if=\"pronunciationAnswered\" class=\"mt-4\">\n          <p v-if=\"pronunciationCorrect\" class=\"text-lg sm:text-xl md:text-2xl font-bold text-green-600 dark:text-green-400\">{{ t('flashcard.listening.correct', 'âœ“ Correct!') }}</p>\n          <p v-else class=\"text-lg sm:text-xl md:text-2xl font-bold text-red-600 dark:text-red-400\">{{ t('flashcard.pronunciation.tryAgain', 'Try Again!') }}</p>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Firework Sound Effect -->\n    <FireworkSoundEffect \n      ref=\"fireworkEffect\"\n      :trigger-firework=\"triggerFirework\"\n      :trigger-sound=\"triggerSound\"\n      :is-correct=\"isCorrectAnswer\"\n      @effect-complete=\"resetTriggers\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, defineAsyncComponent } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport type { Vocabulary } from '../../../composables/useVocabularyStore';\n\nconst { t } = useI18n()\n\n// Import components using defineAsyncComponent to avoid \"has no default export\" error\nconst FireworkSoundEffect = defineAsyncComponent(() => import('./FireworkSoundEffect.vue'))\nconst WordsCrushMode = defineAsyncComponent(() => import('./WordsCrushMode.vue'))\n\n// Effect triggers\nconst triggerFirework = ref(false)\nconst triggerSound = ref(false)\nconst isCorrectAnswer = ref(false)\nconst fireworkEffect = ref()\n\nconst props = defineProps<{\n  card: Vocabulary | null;\n  isRecording: boolean;\n  pronunciationResult: string;\n  pronunciationAnswered: boolean;\n  pronunciationCorrect: boolean;\n  isSpeechRecognitionSupported: boolean;\n  getTopicName: (topic: string) => string;\n  wordsCrushEnabled: boolean;\n}>();\n\nconst emit = defineEmits(['start-recording', 'game-completed', 'play-audio']);\n\n// Handle start recording with potential effects triggering\nconst handleStartRecording = () => {\n  emit('start-recording')\n}\n\n// Handle Words Crush game completion\nconst handleGameCompleted = (isCorrect: boolean) => {\n  // Trigger effects for Words Crush mode\n  isCorrectAnswer.value = isCorrect\n  setTimeout(() => {\n    triggerFirework.value = true\n    triggerSound.value = true\n  }, 50)\n  \n  // Emit to parent for session tracking\n  emit('game-completed', isCorrect)\n}\n\n// Handle audio playback request from Words Crush mode\nconst handlePlayAudio = () => {\n  emit('play-audio')\n}\n\n// Reset effect triggers\nconst resetTriggers = () => {\n  triggerFirework.value = false\n  triggerSound.value = false\n}\n\n// Watch for pronunciationAnswered changes to trigger effects after parent updates\n// Only for traditional pronunciation mode, not Words Crush mode\nwatch(() => props.pronunciationAnswered, (newValue) => {\n  if (newValue && !triggerFirework.value && !props.wordsCrushEnabled) {\n    // Answer was just processed, trigger effects\n    isCorrectAnswer.value = props.pronunciationCorrect\n    \n    setTimeout(() => {\n      triggerFirework.value = true\n      triggerSound.value = true\n    }, 50)\n  }\n})\n</script>"],"file":"assets/PronunciationMode-BJJaBD9Z.js"}