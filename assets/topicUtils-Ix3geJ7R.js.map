{"version":3,"file":"topicUtils-Ix3geJ7R.js","sources":["../../src/utils/topicUtils.ts"],"sourcesContent":["import { useI18n } from 'vue-i18n'\r\n\r\nexport interface CustomTopic {\r\n  key: string\r\n  vi: string\r\n  en: string\r\n  ko?: string\r\n}\r\n\r\n// Centralized list of built-in categories to avoid duplication\r\nexport const BUILT_IN_CATEGORIES: string[] = [\r\n  'technology', 'business', 'travel', 'food', 'health', 'education',\r\n  'sports', 'entertainment', 'science', 'art', 'music', 'literature',\r\n  'politics', 'environment', 'fashion', 'finance'\r\n]\r\n\r\n// Normalize locale to base language code used by the app\r\n// Examples: 'vi-VN' -> 'vi', 'en-US' -> 'en', 'ko-KR' -> 'ko'\r\nfunction normalizeLocale(input?: string): 'en' | 'vi' | 'ko' {\r\n  const s = (input || '').toLowerCase()\r\n  if (s.startsWith('vi')) return 'vi'\r\n  if (s.startsWith('ko')) return 'ko'\r\n  return 'en'\r\n}\r\n\r\n/**\r\n * Get the translated name of a topic/category based on current locale\r\n * This version accepts t and locale as parameters to avoid composable issues\r\n */\r\nexport function getTopicName(categoryKey: string, t?: any, locale?: any, vocabularyItem?: any): string {\r\n  // Prepare helpers and sources\r\n  const customTopics = getCustomTopics()\r\n  const builtInKeys = BUILT_IN_CATEGORIES\r\n  \r\n  // Resolve current locale once\r\n  const rawLocale = typeof locale === 'string' ? locale : locale?.value\r\n  const currentLocale = normalizeLocale(rawLocale)\r\n\r\n  // Normalize numeric-like keys by falling back to the vocabulary item's real category if available\r\n  let key = String(categoryKey || '').trim()\r\n  const isNumericLike = /^\\d+$/.test(key)\r\n  if (isNumericLike && vocabularyItem && vocabularyItem.category && !/^\\d+$/.test(String(vocabularyItem.category))) {\r\n    key = String(vocabularyItem.category)\r\n  }\r\n  const keyLower = key.toLowerCase()\r\n\r\n  // If vocabulary item has categoryName from imported data, only prefer it for English locale\r\n  // AND only when it is not actually a topic key (case-insensitive check).\r\n  if (vocabularyItem && vocabularyItem.categoryName) {\r\n    const cn = String(vocabularyItem.categoryName).trim()\r\n    const cnLower = cn.toLowerCase()\r\n    const isKnownKey = builtInKeys.includes(cnLower) || customTopics.some(ct => (ct.key || '').toLowerCase() === cnLower)\r\n    if (!isKnownKey && currentLocale === 'en') {\r\n      return cn\r\n    }\r\n  }\r\n\r\n  // First check if it's a custom topic by key\r\n  const customTopic = customTopics.find(topic => topic.key === key)\r\n    || customTopics.find(topic => (topic.key || '').toLowerCase() === keyLower)\r\n  \r\n  if (customTopic) {\r\n    // Return the name based on current locale (normalize vi-VN, en-US, ko-KR, ...)\r\n    if (currentLocale === 'vi') {\r\n      return customTopic.vi || customTopic.en || customTopic.ko || key\r\n    }\r\n    if (currentLocale === 'ko') {\r\n      return customTopic.ko || customTopic.en || customTopic.vi || key\r\n    }\r\n    return customTopic.en || customTopic.vi || customTopic.ko || key\r\n  }\r\n  \r\n  // Check if it's a built-in category with translation (if t function provided)\r\n  if (t) {\r\n    const translationKey = `vocabulary.categories.${keyLower}`\r\n    const translatedName = t(translationKey)\r\n    \r\n    // If translation exists and is not the same as the key, return it\r\n    if (translatedName && translatedName !== translationKey) {\r\n      return translatedName\r\n    }\r\n  }\r\n  \r\n  // For built-in categories, use hardcoded fallback\r\n  const builtInCategories: { [key: string]: { vi: string, en: string, ko: string } } = {\r\n    'technology': { vi: 'Công nghệ', en: 'Technology', ko: '기술' },\r\n    'business': { vi: 'Kinh doanh', en: 'Business', ko: '비즈니스' },\r\n    'travel': { vi: 'Du lịch', en: 'Travel', ko: '여행' },\r\n    'food': { vi: 'Ẩm thực', en: 'Food', ko: '음식' },\r\n    'health': { vi: 'Sức khỏe', en: 'Health', ko: '건강' },\r\n    'education': { vi: 'Giáo dục', en: 'Education', ko: '교육' },\r\n    'sports': { vi: 'Thể thao', en: 'Sports', ko: '스포츠' },\r\n    'entertainment': { vi: 'Giải trí', en: 'Entertainment', ko: '엔터테인먼트' },\r\n    'science': { vi: 'Khoa học', en: 'Science', ko: '과학' },\r\n    'art': { vi: 'Nghệ thuật', en: 'Art', ko: '예술' },\r\n    'music': { vi: 'Âm nhạc', en: 'Music', ko: '음악' },\r\n    'literature': { vi: 'Văn học', en: 'Literature', ko: '문학' },\r\n    'politics': { vi: 'Chính trị', en: 'Politics', ko: '정치' },\r\n    'environment': { vi: 'Môi trường', en: 'Environment', ko: '환경' },\r\n    'fashion': { vi: 'Thời trang', en: 'Fashion', ko: '패션' },\r\n    'finance': { vi: 'Tài chính', en: 'Finance', ko: '금융' }\r\n  }\r\n  \r\n  if (builtInCategories[keyLower]) {\r\n    if (currentLocale === 'vi') return builtInCategories[keyLower].vi\r\n    if (currentLocale === 'ko') return builtInCategories[keyLower].ko\r\n    return builtInCategories[keyLower].en\r\n  }\r\n  \r\n  // Fallback to the category key itself (capitalized)\r\n  if (vocabularyItem && vocabularyItem.categoryName) {\r\n    // Prefer provided display name as last resort\r\n    return String(vocabularyItem.categoryName)\r\n  }\r\n  return key.charAt(0).toUpperCase() + key.slice(1)\r\n}\r\n\r\n/**\r\n * Get all available topics (built-in + custom) with their translated names\r\n */\r\nexport function getAllTopicsWithNames(t?: any, locale?: any): Array<{ key: string; name: string }> {\r\n  // Built-in categories\r\n  const builtInCategories = BUILT_IN_CATEGORIES\r\n  \r\n  const result: Array<{ key: string; name: string }> = []\r\n  \r\n  // Add built-in categories\r\n  builtInCategories.forEach(key => {\r\n    result.push({\r\n      key,\r\n      name: getTopicName(key, t, locale)\r\n    })\r\n  })\r\n  \r\n  // Add custom topics\r\n  const customTopics = getCustomTopics()\r\n  customTopics.forEach(topic => {\r\n    result.push({\r\n      key: topic.key,\r\n      name: getTopicName(topic.key, t, locale)\r\n    })\r\n  })\r\n  \r\n  return result.sort((a, b) => a.name.localeCompare(b.name))\r\n}\r\n\r\n/**\r\n * Load custom topics from localStorage\r\n */\r\nexport function getCustomTopics(): CustomTopic[] {\r\n  try {\r\n    const saved = localStorage.getItem('customTopics')\r\n    if (saved) {\r\n      const topics = JSON.parse(saved)\r\n      return Array.isArray(topics) ? topics : []\r\n    }\r\n  } catch (error) {\r\n    console.error('Error loading custom topics:', error)\r\n  }\r\n  return []\r\n}\r\n\r\n/**\r\n * Save custom topics to localStorage\r\n */\r\nexport function saveCustomTopics(topics: CustomTopic[]): void {\r\n  try {\r\n    localStorage.setItem('customTopics', JSON.stringify(topics))\r\n  } catch (error) {\r\n    console.error('Error saving custom topics:', error)\r\n  }\r\n}\r\n\r\n/**\r\n * Check if a topic key is built-in or custom\r\n */\r\nexport function isBuiltInTopic(categoryKey: string): boolean {\r\n  return BUILT_IN_CATEGORIES.includes(categoryKey)\r\n}\r\n\r\n/**\r\n * Get topic name for display in forms and lists\r\n * This function is reactive to locale changes\r\n */\r\nexport function useTopicName() {\r\n  const { t, locale } = useI18n()\r\n  \r\n  return {\r\n    getTopicName: (categoryKey: string) => {\r\n      // Re-compute when locale changes\r\n      return getTopicName(categoryKey, t, locale)\r\n    },\r\n    getAllTopicsWithNames: () => {\r\n      // Re-compute when locale changes\r\n      return getAllTopicsWithNames(t, locale)\r\n    },\r\n    currentLocale: locale\r\n  }\r\n}\r\n"],"names":[],"mappings":";AAUO,MAAM,sBAAgC;AAAA,EAC3C;AAAA,EAAc;AAAA,EAAY;AAAA,EAAU;AAAA,EAAQ;AAAA,EAAU;AAAA,EACtD;AAAA,EAAU;AAAA,EAAiB;AAAA,EAAW;AAAA,EAAO;AAAA,EAAS;AAAA,EACtD;AAAA,EAAY;AAAA,EAAe;AAAA,EAAW;AACxC;AAIA,SAAS,gBAAgB,OAAoC;AAC3D,QAAM,KAAK,SAAS,IAAI,YAAA;AACxB,MAAI,EAAE,WAAW,IAAI,EAAG,QAAO;AAC/B,MAAI,EAAE,WAAW,IAAI,EAAG,QAAO;AAC/B,SAAO;AACT;AAMO,SAAS,aAAa,aAAqB,GAAS,QAAc,gBAA8B;AAErG,QAAM,eAAe,gBAAA;AACrB,QAAM,cAAc;AAGpB,QAAM,YAAY,OAAO,WAAW,WAAW,SAAS,QAAQ;AAChE,QAAM,gBAAgB,gBAAgB,SAAS;AAG/C,MAAI,MAAM,OAAO,eAAe,EAAE,EAAE,KAAA;AACpC,QAAM,gBAAgB,QAAQ,KAAK,GAAG;AACtC,MAAI,iBAAiB,kBAAkB,eAAe,YAAY,CAAC,QAAQ,KAAK,OAAO,eAAe,QAAQ,CAAC,GAAG;AAChH,UAAM,OAAO,eAAe,QAAQ;AAAA,EACtC;AACA,QAAM,WAAW,IAAI,YAAA;AAIrB,MAAI,kBAAkB,eAAe,cAAc;AACjD,UAAM,KAAK,OAAO,eAAe,YAAY,EAAE,KAAA;AAC/C,UAAM,UAAU,GAAG,YAAA;AACnB,UAAM,aAAa,YAAY,SAAS,OAAO,KAAK,aAAa,KAAK,CAAA,QAAO,GAAG,OAAO,IAAI,YAAA,MAAkB,OAAO;AACpH,QAAI,CAAC,cAAc,kBAAkB,MAAM;AACzC,aAAO;AAAA,IACT;AAAA,EACF;AAGA,QAAM,cAAc,aAAa,KAAK,CAAA,UAAS,MAAM,QAAQ,GAAG,KAC3D,aAAa,KAAK,YAAU,MAAM,OAAO,IAAI,YAAA,MAAkB,QAAQ;AAE5E,MAAI,aAAa;AAEf,QAAI,kBAAkB,MAAM;AAC1B,aAAO,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM;AAAA,IAC/D;AACA,QAAI,kBAAkB,MAAM;AAC1B,aAAO,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM;AAAA,IAC/D;AACA,WAAO,YAAY,MAAM,YAAY,MAAM,YAAY,MAAM;AAAA,EAC/D;AAGA,MAAI,GAAG;AACL,UAAM,iBAAiB,yBAAyB,QAAQ;AACxD,UAAM,iBAAiB,EAAE,cAAc;AAGvC,QAAI,kBAAkB,mBAAmB,gBAAgB;AACvD,aAAO;AAAA,IACT;AAAA,EACF;AAGA,QAAM,oBAA+E;AAAA,IACnF,cAAc,EAAE,IAAI,aAAa,IAAI,cAAc,IAAI,KAAA;AAAA,IACvD,YAAY,EAAE,IAAI,cAAc,IAAI,YAAY,IAAI,OAAA;AAAA,IACpD,UAAU,EAAE,IAAI,WAAW,IAAI,UAAU,IAAI,KAAA;AAAA,IAC7C,QAAQ,EAAE,IAAI,WAAW,IAAI,QAAQ,IAAI,KAAA;AAAA,IACzC,UAAU,EAAE,IAAI,YAAY,IAAI,UAAU,IAAI,KAAA;AAAA,IAC9C,aAAa,EAAE,IAAI,YAAY,IAAI,aAAa,IAAI,KAAA;AAAA,IACpD,UAAU,EAAE,IAAI,YAAY,IAAI,UAAU,IAAI,MAAA;AAAA,IAC9C,iBAAiB,EAAE,IAAI,YAAY,IAAI,iBAAiB,IAAI,SAAA;AAAA,IAC5D,WAAW,EAAE,IAAI,YAAY,IAAI,WAAW,IAAI,KAAA;AAAA,IAChD,OAAO,EAAE,IAAI,cAAc,IAAI,OAAO,IAAI,KAAA;AAAA,IAC1C,SAAS,EAAE,IAAI,WAAW,IAAI,SAAS,IAAI,KAAA;AAAA,IAC3C,cAAc,EAAE,IAAI,WAAW,IAAI,cAAc,IAAI,KAAA;AAAA,IACrD,YAAY,EAAE,IAAI,aAAa,IAAI,YAAY,IAAI,KAAA;AAAA,IACnD,eAAe,EAAE,IAAI,cAAc,IAAI,eAAe,IAAI,KAAA;AAAA,IAC1D,WAAW,EAAE,IAAI,cAAc,IAAI,WAAW,IAAI,KAAA;AAAA,IAClD,WAAW,EAAE,IAAI,aAAa,IAAI,WAAW,IAAI,KAAA;AAAA,EAAK;AAGxD,MAAI,kBAAkB,QAAQ,GAAG;AAC/B,QAAI,kBAAkB,KAAM,QAAO,kBAAkB,QAAQ,EAAE;AAC/D,QAAI,kBAAkB,KAAM,QAAO,kBAAkB,QAAQ,EAAE;AAC/D,WAAO,kBAAkB,QAAQ,EAAE;AAAA,EACrC;AAGA,MAAI,kBAAkB,eAAe,cAAc;AAEjD,WAAO,OAAO,eAAe,YAAY;AAAA,EAC3C;AACA,SAAO,IAAI,OAAO,CAAC,EAAE,gBAAgB,IAAI,MAAM,CAAC;AAClD;AAKO,SAAS,sBAAsB,GAAS,QAAoD;AAEjG,QAAM,oBAAoB;AAE1B,QAAM,SAA+C,CAAA;AAGrD,oBAAkB,QAAQ,CAAA,QAAO;AAC/B,WAAO,KAAK;AAAA,MACV;AAAA,MACA,MAAM,aAAa,KAAK,GAAG,MAAM;AAAA,IAAA,CAClC;AAAA,EACH,CAAC;AAGD,QAAM,eAAe,gBAAA;AACrB,eAAa,QAAQ,CAAA,UAAS;AAC5B,WAAO,KAAK;AAAA,MACV,KAAK,MAAM;AAAA,MACX,MAAM,aAAa,MAAM,KAAK,GAAG,MAAM;AAAA,IAAA,CACxC;AAAA,EACH,CAAC;AAED,SAAO,OAAO,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAC3D;AAKO,SAAS,kBAAiC;AAC/C,MAAI;AACF,UAAM,QAAQ,aAAa,QAAQ,cAAc;AACjD,QAAI,OAAO;AACT,YAAM,SAAS,KAAK,MAAM,KAAK;AAC/B,aAAO,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAA;AAAA,IAC1C;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AAAA,EACrD;AACA,SAAO,CAAA;AACT;AAwBO,SAAS,eAAe;AAC7B,QAAM,EAAE,GAAG,OAAA,IAAW,QAAA;AAEtB,SAAO;AAAA,IACL,cAAc,CAAC,gBAAwB;AAErC,aAAO,aAAa,aAAa,GAAG,MAAM;AAAA,IAC5C;AAAA,IACA,uBAAuB,MAAM;AAE3B,aAAO,sBAAsB,GAAG,MAAM;AAAA,IACxC;AAAA,IACA,eAAe;AAAA,EAAA;AAEnB;"}