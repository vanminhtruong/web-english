{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA,UAAM,gBAAgB,qBAAqB,0BAAI,OAAO,6BAAqB,0CAAC;;AArF1E,aAAAA,UAAA,GAAAC,mBA+EM,OA/EN,YA+EM;AAAA,QA9EJC,gBAsEM,OAtEN,YAsEM;AAAA,UArEJA,gBAoEM,OApEN,YAoEM;AAAA,YAlEJA,gBAIM,OAJN,YAIM;AAAA,cAHJA,gBAEO,QAFP,YAEOC,gBADFC,WAAM,MAAM,UAAU,WAAWC,MAAA,cAAaD,WAAM,MAAM,UAAU,QAAQ;AAAA;sCAKnFF,gBASM,SATD,OAAM,kBAAc;AAAA,cACvBA,gBAOS;AAAA,gBANP;AAAA,gBACA,OAAM;AAAA;gBAENA,gBAEM;AAAA,kBAFD,OAAM;AAAA,kBAAsC,MAAK;AAAA,kBAAe,SAAQ;AAAA;kBAC3EA,gBAAqG;AAAA,oBAA/F,aAAU;AAAA,oBAAU,GAAE;AAAA,oBAAoD,aAAU;AAAA;;;;YAMtFE,YAAM,MAAM,UAAU,2BAAhCH,mBAAwL,KAAxL,YAAkJ,oCAAkC,mBACpLA,mBAA6I,KAA7I,YAAgH,2BAAyB;AAAA,YAG7HG,YAAM,MAAM,UAAU,cAAlCJ,aAAAC,mBAcM,OAdN,YAcM;AAAA,cAbJC,gBAOE;AAAA,gBANC,OAAOE,WAAM,MAAM,UAAU,cAAU;AAAA,gBACxC,MAAK;AAAA,gBACL;AAAA,gBACA;AAAA,gBACA,OAAM;AAAA,gBACN,aAAY;AAAA;cAEdF,gBAIM,OAJN,aAIM;AAAA,gBAHKE,WAAM,cAAS,qBAAxBH,mBAAwI,KAAxI,aAA0H,YAAU,mBACpIA,mBAAwK,KAAxK,aAAyG,uBAAkBE,gBAAGC,WAAM,MAAM,UAAU,aAAa;AAAA,gBACjKF,gBAAoH,KAApH,aAAoHC,gBAAzBC,WAAM,YAAY;AAAA;mBAKjHJ,UAAA,GAAAC,mBAyBM,OAzBN,aAyBM;AAAA,cAxBJC,gBAkBM,OAlBN,aAkBM;AAAA,kCAjBJD,mBAgBMK,UAAA,MAAAC,WAfiBH,WAAM,MAAM,UAAU,WAAO,KAA1C,KAAK,QAAG;sCADlBH,mBAgBM;AAAA,oBAdH,KAAK;AAAA,oBACN,uBAAM,uLAAqL;AAAA,sBACjK,QAAQG,WAAM,MAAM,UAAU,6HAAkK,QAAQA,WAAM,MAAM,UAAU;;;oBAQxPF,gBAEO,QAFP,aAEOC,gBADF,OAAO,kBAAkB,GAAG;AAAA,oBAEjCD,gBAA+D,QAA/D,aAA+DC,gBAAb,GAAG;AAAA;;;cAGzDD,gBAIM,OAJN,aAIM;AAAA,gBAHKE,WAAM,cAAS,qBAAxBH,mBAAwI,KAAxI,aAA0H,YAAU,mBACpIA,mBAAwK,KAAxK,aAAyG,uBAAkBE,gBAAGC,WAAM,MAAM,UAAU,aAAa;AAAA,gBACjKF,gBAAoH,KAApH,aAAoHC,gBAAzBC,WAAM,YAAY;AAAA;;;;QAOrHI,YAIEH,MAAA;AAAA,UAHC,eAAaD,WAAM,MAAM,UAAU,aAAcA,WAAM,MAAM,UAAU,kBAAc,cAAoBA,WAAM,MAAM,UAAU,cAAU;AAAA,UACzI,kBAAgBA,WAAM,MAAM,UAAU;AAAA,UACtC,cAAYA,WAAM;AAAA","names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","entry","_unref","_Fragment","_renderList","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/component-child/SessionDetailModal/ListeningDetail.vue"],"sourcesContent":["<template>\n  <!-- Listening Mode-specific details -->\n  <div class=\"mt-2 sm:mt-3 space-y-2 sm:space-y-3\">\n    <div class=\"bg-white dark:bg-[#0a0a0a] rounded-lg sm:rounded-xl shadow-2xl border border-gray-200 dark:border-gray-800 p-3 sm:p-4 md:p-6 lg:p-8 min-h-[280px] xs:min-h-[320px] sm:h-auto md:h-96 select-none\">\n      <div class=\"text-center h-full flex flex-col justify-center\">\n        <!-- Header -->\n        <div class=\"mb-4 sm:mb-6\">\n          <span class=\"px-2 py-1 xs:px-3 xs:py-1 bg-blue-100 dark:bg-gray-800 text-blue-800 dark:text-blue-300 text-xs sm:text-sm font-medium rounded-full truncate\">\n            {{ entry.extra.listening.category ? getTopicName(entry.extra.listening.category) : 'Unknown Category' }}\n          </span>\n        </div>\n\n        <!-- Audio Play Button -->\n        <div class=\"mb-6 sm:mb-8\">\n          <button\n            disabled\n            class=\"bg-gray-400 text-white p-4 xs:p-5 sm:p-6 rounded-full cursor-not-allowed\"\n          >\n            <svg class=\"w-6 h-6 xs:w-7 xs:h-7 sm:w-8 sm:h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" clip-rule=\"evenodd\"/>\n            </svg>\n          </button>\n        </div>\n\n        <!-- Instructions -->\n        <p v-if=\"!entry.extra.listening.isQuizMode\" class=\"text-xs xs:text-sm sm:text-base md:text-lg text-gray-600 dark:text-gray-300 mb-6 sm:mb-8 px-2\">Listen and type the word you hear:</p>\n        <p v-else class=\"text-xs xs:text-sm sm:text-base md:text-lg text-gray-600 dark:text-gray-300 mb-6 sm:mb-8 px-2\">Choose the word you hear:</p>\n\n        <!-- Input Area -->\n        <div v-if=\"!entry.extra.listening.isQuizMode\" class=\"max-w-xs xs:max-w-sm sm:max-w-md mx-auto px-2\">\n          <input\n            :value=\"entry.extra.listening.userAnswer || ''\"\n            type=\"text\"\n            disabled\n            readonly\n            class=\"w-full p-2 xs:p-3 sm:p-4 text-center text-sm xs:text-base sm:text-lg border border-gray-300 dark:border-gray-600 rounded-md sm:rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white cursor-not-allowed\"\n            placeholder=\"Type the word you hear...\"\n          />\n          <div class=\"mt-3 xs:mt-4\">\n            <p v-if=\"entry.isCorrect === true\" class=\"text-green-600 dark:text-green-400 font-medium text-xs xs:text-sm sm:text-base\">✓ Correct!</p>\n            <p v-else class=\"text-red-600 dark:text-red-400 font-medium text-xs xs:text-sm sm:text-base break-words\">✗ Correct answer: {{ entry.extra.listening.correctAnswer }}</p>\n            <p class=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1 xs:mt-2 break-words\">{{ entry.meaningShort }}</p>\n          </div>\n        </div>\n\n        <!-- Quiz Options -->\n        <div v-else class=\"w-full px-2 sm:px-3 md:px-0\">\n          <div class=\"grid grid-cols-1 xs:grid-cols-2 gap-1.5 xs:gap-2 sm:gap-3 justify-items-stretch w-full max-w-xs xs:max-w-sm\">\n            <div\n              v-for=\"(opt, idx) in entry.extra.listening.options || []\"\n              :key=\"idx\"\n              class=\"px-2 xs:px-3 py-1.5 xs:py-2 rounded border text-xs xs:text-sm transition-all duration-150 opacity-70 cursor-not-allowed text-left flex items-center gap-1.5 xs:gap-2 w-full min-w-0\"\n              :class=\"[\n                opt === entry.extra.listening.correctAnswer\n                  ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                  : (opt === entry.extra.listening.selectedOption\n                      ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                      : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n              ]\"\n            >\n              <span class=\"inline-flex items-center justify-center w-4 h-4 xs:w-5 xs:h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80 shrink-0\">\n                {{ String.fromCharCode(65 + idx) }}\n              </span>\n              <span class=\"truncate overflow-hidden min-w-0\">{{ opt }}</span>\n            </div>\n          </div>\n          <div class=\"mt-3 xs:mt-4 text-center px-2\">\n            <p v-if=\"entry.isCorrect === true\" class=\"text-green-600 dark:text-green-400 font-medium text-xs xs:text-sm sm:text-base\">✓ Correct!</p>\n            <p v-else class=\"text-red-600 dark:text-red-400 font-medium text-xs xs:text-sm sm:text-base break-words\">✗ Correct answer: {{ entry.extra.listening.correctAnswer }}</p>\n            <p class=\"text-xs sm:text-sm text-gray-500 dark:text-gray-400 mt-1 xs:mt-2 break-words\">{{ entry.meaningShort }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Result Summary -->\n    <ResultSummary\n      :user-answer=\"entry.extra.listening.isQuizMode ? (entry.extra.listening.selectedOption || 'No answer') : (entry.extra.listening.userAnswer || 'No answer')\"\n      :correct-answer=\"entry.extra.listening.correctAnswer\"\n      :is-correct=\"entry.isCorrect\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { getTopicName } from '../../../../../utils/topicUtils'\nimport { defineAsyncComponent } from 'vue'\nconst ResultSummary = defineAsyncComponent(()=>import('./ResultSummary.vue'))\n\ndefineProps<{\n  entry: any\n}>()\n</script>\n"],"file":"assets/ListeningDetail-0kytceH9.js"}