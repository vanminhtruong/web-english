{"version":3,"mappings":"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","names":["_createElementBlock","_createElementVNode","_toDisplayString","currentCard","_unref","_openBlock","imageQuizEnabled","imageAnswered","_Fragment","_renderList","imageQuizOptions","imageQuizAnswered","_normalizeClass","imageCorrect","_createTextVNode","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/FlashcardImage.vue"],"sourcesContent":["<template>\n  <div\n    class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-6 min-h-96 max-h-[500px] select-none\"\n    @copy.prevent\n    @cut.prevent\n    @contextmenu.prevent\n  >\n    <div class=\"h-full flex flex-col overflow-hidden\">\n      <!-- Category Badge -->\n      <div class=\"mb-4 text-center\">\n        <span class=\"px-3 py-1 bg-purple-100 dark:bg-dark-bg-mute text-purple-800 dark:text-purple-300 text-sm font-medium rounded-full\">\n          {{ currentCard?.category ? getTopicName(currentCard.category) : '' }}\n        </span>\n      </div>\n\n      <!-- Image Display -->\n      <div class=\"flex-1 flex items-center justify-center mb-4 min-h-0\">\n        <div v-if=\"currentCard?.image\" class=\"relative\">\n          <img \n            :src=\"currentCard.image\" \n            :alt=\"t('flashcard.image.imageAlt', 'Flashcard image')\"\n            class=\"max-w-full max-h-40 object-contain rounded-lg shadow-md border border-gray-200 dark:border-dark-bg-mute\"\n            @error=\"handleImageError\"\n          />\n          <div v-if=\"imageError\" class=\"absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-lg\">\n            <div class=\"text-center\">\n              <svg class=\"mx-auto h-12 w-12 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <p class=\"text-sm text-gray-500 dark:text-white/60 mt-2\">{{ t('flashcard.image.imageError', 'Could not load image.') }}</p>\n            </div>\n          </div>\n        </div>\n        \n        <!-- No Image State -->\n        <div v-else class=\"flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-lg p-8 w-full max-w-sm\">\n          <div class=\"text-center\">\n            <svg class=\"mx-auto h-16 w-16 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n            <p class=\"text-sm text-gray-500 dark:text-white/60 mt-2\">{{ t('flashcard.image.noImage', 'No image available for this card.') }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Answer Area -->\n      <div class=\"space-y-3 flex-shrink-0\">\n        <!-- Typing input when toggle is OFF -->\n        <div v-if=\"!imageQuizEnabled\">\n          <input\n            ref=\"imageTypingInput\"\n            v-model=\"userAnswer\"\n            @keyup.enter=\"checkAnswer\"\n            type=\"text\"\n            :disabled=\"imageAnswered\"\n            :placeholder=\"t('flashcard.image.placeholder', 'Enter your answer...')\"\n            class=\"w-full px-4 py-3 text-center text-lg border border-gray-300 dark:border-dark-bg-mute rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent bg-white dark:bg-dark-bg-soft text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-white/50 disabled:opacity-50 disabled:cursor-not-allowed select-text\"\n            inputmode=\"text\"\n            autocapitalize=\"none\"\n            autocomplete=\"off\"\n            spellcheck=\"false\"\n            @blur=\"onImageTypingBlur\"\n          />\n        </div>\n\n        <!-- Multiple choice when toggle is ON -->\n        <div v-else>\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-2 justify-items-center sm:justify-items-center justify-center mx-auto max-w-[560px] sm:max-w-[520px]\">\n            <button\n              v-for=\"(opt, idx) in imageQuizOptions\"\n              :key=\"idx\"\n              @click=\"onSelectImageOption(opt)\"\n              :disabled=\"imageQuizAnswered\"\n              translate=\"no\"\n              class=\"notranslate px-3 py-2 rounded-md border text-[13px] sm:text-sm transition-all duration-150 disabled:opacity-70 disabled:cursor-not-allowed text-left flex items-center gap-2 w-full max-w-[260px] sm:max-w-[240px]\"\n              :class=\"[\n                imageQuizAnswered\n                  ? (isOptionCorrect(opt)\n                      ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 border-green-300 dark:border-green-700'\n                      : isOptionSelected(opt)\n                        ? 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60')\n                  : 'bg-white dark:bg-gray-custom text-gray-900 dark:text-white border-gray-300 dark:border-gray-custom/60 hover:shadow-sm hover:scale-[1.01] dark:hover:bg-white/5'\n              ]\"\n            >\n              <span\n                class=\"inline-flex items-center justify-center w-5 h-5 rounded-full text-xs font-semibold bg-gray-200 text-gray-700 dark:bg-white/10 dark:text-white/80\"\n              >\n                {{ String.fromCharCode(65 + idx) }}\n              </span>\n              <span class=\"truncate\">{{ opt }}</span>\n            </button>\n          </div>\n        </div>\n\n        <!-- Show result after answered -->\n        <div v-if=\"imageAnswered\" class=\"text-center space-y-2 max-h-32 overflow-y-auto\">\n          <div \n            :class=\"[\n              'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n              imageCorrect \n                ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300' \n                : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\n            ]\"\n          >\n            <svg v-if=\"imageCorrect\" class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n            </svg>\n            <svg v-else class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n              <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n            </svg>\n            {{ imageCorrect ? t('common.correct', 'Correct') : t('common.incorrect', 'Incorrect') }}\n          </div>\n          \n          <!-- Show correct answer if wrong -->\n          <div v-if=\"!imageCorrect\" class=\"text-center\">\n            <p class=\"text-sm text-gray-600 dark:text-white/70\">\n              {{ t('flashcard.image.correctAnswer', 'Correct answer') }}: \n              <span class=\"font-semibold text-gray-900 dark:text-white\">{{ currentCard?.word }}</span>\n            </p>\n            <p class=\"text-xs text-gray-500 dark:text-white/60 mt-1 line-clamp-2\">\n              {{ currentCard?.meaning }}\n            </p>\n          </div>\n          \n          <!-- Show meaning if correct -->\n          <div v-else class=\"text-center\">\n            <p class=\"text-sm text-gray-600 dark:text-white/70 line-clamp-2\">\n              {{ currentCard?.meaning }}\n            </p>\n          </div>\n        </div>\n\n        <!-- Instruction text -->\n        <p v-if=\"!imageAnswered && !imageQuizEnabled\" class=\"text-center text-sm text-gray-500 dark:text-white/60\">\n          {{ t('flashcard.image.instruction', 'Type the word for the image above and press Enter.') }}\n        </p>\n        <p v-if=\"!imageAnswered && imageQuizEnabled\" class=\"text-center text-sm text-gray-500 dark:text-white/60\">\n          {{ t('flashcard.image.instructionQuiz', 'Choose the correct word for the image.') }}\n        </p>\n      </div>\n    </div>\n    \n    <!-- Firework Sound Effect -->\n    <FireworkSoundEffect \n      ref=\"fireworkEffect\"\n      :trigger-firework=\"triggerFirework\"\n      :trigger-sound=\"triggerSound\"\n      :is-correct=\"isCorrectAnswer\"\n      @effect-complete=\"resetTriggers\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, defineAsyncComponent, onMounted, nextTick } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport type { Vocabulary } from '../../../composables/useVocabularyStore'\nimport { getTopicName } from '../../../utils/topicUtils'\n\n// Import component using defineAsyncComponent to avoid \"has no default export\" error\nconst FireworkSoundEffect = defineAsyncComponent(() => import('./FireworkSoundEffect.vue'))\n\n// Effect triggers\nconst triggerFirework = ref(false)\nconst triggerSound = ref(false)\nconst isCorrectAnswer = ref(false)\nconst fireworkEffect = ref()\n\ninterface Props {\n  currentCard: Vocabulary | null\n  imageAnswer: string\n  imageAnswered: boolean\n  imageCorrect: boolean\n  imageQuizEnabled: boolean\n  imageQuizOptions: string[]\n  imageQuizSelected: string\n  imageQuizAnswered: boolean\n}\n\ninterface Emits {\n  (e: 'update:imageAnswer', value: string): void\n  (e: 'checkAnswer'): void\n  (e: 'update:imageQuizEnabled', value: boolean): void\n  (e: 'select-image-quiz-answer', value: string): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\n\nconst { t } = useI18n()\n\n// Local reactive data\nconst userAnswer = ref('')\nconst imageError = ref(false)\nconst imageTypingInput = ref<HTMLInputElement | null>(null)\n\n// Watch for changes in imageAnswer prop to sync with local state\nwatch(() => props.imageAnswer, (newValue) => {\n  userAnswer.value = newValue\n})\n\n// Remove Vietnamese diacritics so input is saved without accents\n// Special-case: map all forms of 'ư' to 'w' so Unikey 'w' is preserved\nconst stripDiacritics = (s: string) => s\n  .replace(/[ưừứửữự]/g, 'w')\n  .replace(/[ƯỪỨỬỮỰ]/g, 'W')\n  .normalize('NFD')\n  .replace(/[\\u0300-\\u036f]/g, '')\n  .replace(/đ/g, 'd')\n  .replace(/Đ/g, 'D')\n\n// Watch for changes in local userAnswer to sanitize and emit updates\nwatch(userAnswer, (newValue) => {\n  const sanitized = stripDiacritics(newValue)\n  if (sanitized !== newValue) {\n    userAnswer.value = sanitized\n  }\n  emit('update:imageAnswer', sanitized)\n})\n\n// Watch for card changes to reset error state\nwatch(() => props.currentCard, () => {\n  imageError.value = false\n})\n\n// Handle image loading errors\nconst handleImageError = () => {\n  imageError.value = true\n}\n\n// Check answer function\nconst checkAnswer = () => {\n  if (!props.imageAnswered && userAnswer.value.trim()) {\n    emit('checkAnswer')\n    \n    // Wait a bit for the answer to be processed, then trigger effects\n    setTimeout(() => {\n      // Use the imageCorrect prop from parent\n      isCorrectAnswer.value = props.imageCorrect\n      \n      // Trigger effects\n      triggerFirework.value = true\n      triggerSound.value = true\n    }, 100)\n  }\n}\n\n// Reset effect triggers\nconst resetTriggers = () => {\n  triggerFirework.value = false\n  triggerSound.value = false\n}\n\n// Watch for imageAnswered changes to trigger effects after parent updates\nwatch(() => props.imageAnswered, (newValue) => {\n  if (newValue && !triggerFirework.value) {\n    // Answer was just processed, trigger effects\n    isCorrectAnswer.value = props.imageCorrect\n    \n    setTimeout(() => {\n      triggerFirework.value = true\n      triggerSound.value = true\n    }, 50)\n  }\n})\n\n// Persist Image Quiz toggle in localStorage\nconst STORAGE_KEY_IMAGE_QUIZ = 'flashcard_image_quiz_enabled'\n\nonMounted(() => {\n  try {\n    const saved = localStorage.getItem(STORAGE_KEY_IMAGE_QUIZ)\n    if (saved !== null) {\n      const val = saved === 'true'\n      if (val !== props.imageQuizEnabled) {\n        emit('update:imageQuizEnabled', val)\n      }\n    }\n  } catch (e) {\n    // ignore storage errors\n  }\n  ensureImageTypingFocus()\n})\n\nwatch(() => props.imageQuizEnabled, (newVal) => {\n  try {\n    localStorage.setItem(STORAGE_KEY_IMAGE_QUIZ, String(newVal))\n  } catch (e) {\n    // ignore storage errors\n  }\n  if (!newVal) ensureImageTypingFocus()\n})\n\n// Toggle handled in FlashcardHeader dropdown; no local toggle UI here\n\n// Helpers for options UI\nconst onSelectImageOption = (opt: string) => {\n  if (!props.imageQuizAnswered) {\n    emit('select-image-quiz-answer', opt)\n  }\n}\nconst isOptionSelected = (opt: string) => props.imageQuizSelected === opt\nconst isOptionCorrect = (opt: string) => props.currentCard ? opt.trim().toLowerCase() === props.currentCard.word.trim().toLowerCase() : false\n\n// ---------------- Auto-focus typing input (variant OFF) ----------------\nconst focusImageTypingInput = async () => {\n  await nextTick()\n  try {\n    imageTypingInput.value?.focus({ preventScroll: true })\n  } catch {\n    imageTypingInput.value?.focus()\n  }\n}\n\nconst ensureImageTypingFocus = () => {\n  if (!props.imageQuizEnabled && !props.imageAnswered) {\n    if (document.activeElement !== imageTypingInput.value) {\n      focusImageTypingInput()\n    }\n  }\n}\n\nconst onImageTypingBlur = () => {\n  ensureImageTypingFocus()\n}\n\n// Refocus on key prop changes\nwatch(() => props.imageAnswered, (answered) => {\n  if (!answered) ensureImageTypingFocus()\n})\nwatch(() => props.currentCard, () => {\n  ensureImageTypingFocus()\n})\n</script>\n"],"file":"assets/FlashcardImage-BFoEm3Dn.js"}