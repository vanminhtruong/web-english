{"version":3,"file":"QuestionFormDialog-BkKg_eEI.js","sources":["../../src/views/vocabulary/components/QuestionFormDialog.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Backdrop -->\n    <Transition\n      enter-active-class=\"transition-all duration-500 ease-out\"\n      enter-from-class=\"opacity-0\"\n      enter-to-class=\"opacity-100\"\n      leave-active-class=\"transition-all duration-300 ease-in\"\n      leave-from-class=\"opacity-100\"\n      leave-to-class=\"opacity-0\"\n    >\n      <div \n        v-if=\"show\" \n        class=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50 backdrop-blur-sm\"\n      >\n        <!-- Dialog Container -->\n        <Transition\n          enter-active-class=\"transition-all duration-500 ease-out\"\n          enter-from-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n          enter-to-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-active-class=\"transition-all duration-300 ease-in\"\n          leave-from-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-to-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n        >\n          <div class=\"w-full max-h-[90vh] flex flex-col max-w-full sm:max-w-lg md:max-w-2xl lg:max-w-4xl\">\n            <!-- Dialog Content -->\n            <div \n              class=\"bg-white dark:bg-[#0a0a0a] shadow-2xl rounded-xl border border-gray-200 dark:border-gray-700 flex flex-col h-full overflow-hidden transform\"\n              @click.stop\n            >\n              <!-- Header -->\n              <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a]\">\n                <div class=\"flex items-center justify-between\">\n                  <h2 class=\"text-lg sm:text-xl md:text-2xl font-semibold text-gray-900 dark:text-white flex items-center space-x-2\">\n                    <span class=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></span>\n                    <span>{{ question ? t('vocabulary.questions.editQuestion', 'Edit Question') : t('vocabulary.questions.addQuestion', 'Add New Question') }}</span>\n                  </h2>\n                  <button \n                    @click=\"$emit('close')\"\n                    class=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-all duration-300 hover:scale-110 hover:rotate-90 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800\"\n                  >\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Form -->\n              <div class=\"px-6 py-4 flex-1 overflow-y-auto min-h-0\">\n                <form @submit.prevent=\"handleSubmit\" class=\"space-y-6\">\n                  <!-- Vocabulary Selection -->\n                  <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.1s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-blue-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.selectVocabulary', 'Select Vocabulary Word') }} <span class=\"text-red-500 ml-1\">*</span>\n                    </label>\n                    <select\n                      v-model=\"formData.vocabularyId\"\n                      required\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 hover:border-blue-400 dark:hover:border-blue-500 transform hover:scale-[1.02]\"\n                    >\n                      <option value=\"\">{{ t('vocabulary.questions.selectVocabularyPlaceholder', 'Choose a vocabulary word...') }}</option>\n                      <option v-for=\"vocab in vocabularyList\" :key=\"vocab.id\" :value=\"vocab.id\">\n                        {{ vocab.word }} - {{ vocab.meaning }}\n                      </option>\n                    </select>\n                  </div>\n\n                  <!-- Question Type -->\n                  <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.2s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-green-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.questionType', 'Question Type') }} <span class=\"text-red-500 ml-1\">*</span>\n                    </label>\n                    <select\n                      v-model=\"formData.type\"\n                      required\n                      @change=\"onTypeChange\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300 hover:border-green-400 dark:hover:border-green-500 transform hover:scale-[1.02]\"\n                    >\n                      <option value=\"\">{{ t('vocabulary.questions.selectType', 'Select question type...') }}</option>\n                      <option value=\"multiple-choice\">{{ t('vocabulary.questions.types.multipleChoice', 'Multiple Choice') }}</option>\n                      <option value=\"fill-blank\">{{ t('vocabulary.questions.types.fillBlank', 'Fill in the Blank') }}</option>\n                      <option value=\"true-false\">{{ t('vocabulary.questions.types.trueFalse', 'True/False') }}</option>\n                      <option value=\"short-answer\">{{ t('vocabulary.questions.types.shortAnswer', 'Short Answer') }}</option>\n                    </select>\n                  </div>\n\n                  <!-- Question Text -->\n                  <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.3s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-purple-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.questionText', 'Question') }} <span class=\"text-red-500 ml-1\">*</span>\n                    </label>\n                    <textarea\n                      v-model=\"formData.question\"\n                      required\n                      rows=\"3\"\n                      :placeholder=\"t('vocabulary.questions.questionPlaceholder', 'Enter your question...')\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 hover:border-purple-400 dark:hover:border-purple-500 transform hover:scale-[1.02] resize-none\"\n                    ></textarea>\n                  </div>\n\n                  <!-- Multiple Choice Options -->\n                  <div v-if=\"formData.type === 'multiple-choice'\" class=\"space-y-4 animate-fade-in-up\" style=\"animation-delay: 0.4s\">\n                    <div class=\"flex items-center justify-between\">\n                      <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 flex items-center\">\n                        <span class=\"w-1 h-4 bg-orange-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.questions.options', 'Answer Options') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <button\n                        type=\"button\"\n                        @click=\"addOption\"\n                        class=\"text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 text-sm font-medium transition-all duration-300 hover:scale-105\"\n                      >\n                        + {{ t('vocabulary.questions.addOption', 'Add Option') }}\n                      </button>\n                    </div>\n                    <template v-if=\"formData.options\">\n                      <div v-for=\"(option, index) in formData.options\" :key=\"index\" class=\"flex items-center space-x-3\">\n                      <div class=\"flex items-center\">\n                        <input\n                          :id=\"`option-${index}`\"\n                          v-model=\"formData.correctAnswer\"\n                          :value=\"index\"\n                          type=\"radio\"\n                          name=\"correctAnswer\"\n                          class=\"w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600\"\n                        />\n                        <label :for=\"`option-${index}`\" class=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">\n                          {{ String.fromCharCode(65 + index) }}\n                        </label>\n                      </div>\n                      <input\n                        v-model=\"formData.options[index]\"\n                        type=\"text\"\n                        :placeholder=\"`${t('vocabulary.questions.optionPlaceholder', 'Option')} ${String.fromCharCode(65 + index)}`\"\n                        class=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 hover:border-blue-400 dark:hover:border-blue-500 transform hover:scale-[1.02]\"\n                      />\n                      <button\n                        v-if=\"formData.options && formData.options.length > 2\"\n                        type=\"button\"\n                        @click=\"removeOption(index)\"\n                        class=\"p-2 text-red-600 dark:text-red-400 hover:bg-red-50/50 dark:hover:bg-red-900/20 rounded-lg transition-all duration-300 hover:scale-110\"\n                      >\n                        <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                        </svg>\n                      </button>\n                      </div>\n                    </template>\n                  </div>\n\n                  <!-- Correct Answer for Non-Multiple Choice -->\n                  <div v-if=\"formData.type && formData.type !== 'multiple-choice'\" class=\"animate-fade-in-up\" style=\"animation-delay: 0.5s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-orange-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.correctAnswer', 'Correct Answer') }} <span class=\"text-red-500 ml-1\">*</span>\n                    </label>\n                    <input\n                      v-if=\"formData.type === 'true-false'\"\n                      :value=\"formData.correctAnswer === 'true' ? t('vocabulary.questions.true', 'True') : t('vocabulary.questions.false', 'False')\"\n                      type=\"text\"\n                      readonly\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-gray-50/50 dark:bg-[#0a0a0a]/50 text-gray-900 dark:text-white\"\n                    />\n                    <div v-if=\"formData.type === 'true-false'\" class=\"mt-2 flex space-x-4\">\n                      <label class=\"flex items-center\">\n                        <input\n                          v-model=\"formData.correctAnswer\"\n                          value=\"true\"\n                          type=\"radio\"\n                          name=\"trueFalse\"\n                          class=\"w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600\"\n                        />\n                        <span class=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">{{ t('vocabulary.questions.true', 'True') }}</span>\n                      </label>\n                      <label class=\"flex items-center\">\n                        <input\n                          v-model=\"formData.correctAnswer\"\n                          value=\"false\"\n                          type=\"radio\"\n                          name=\"trueFalse\"\n                          class=\"w-4 h-4 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600\"\n                        />\n                        <span class=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">{{ t('vocabulary.questions.false', 'False') }}</span>\n                      </label>\n                    </div>\n                    <input\n                      v-else\n                      v-model=\"formData.correctAnswer\"\n                      type=\"text\"\n                      required\n                      :placeholder=\"t('vocabulary.questions.correctAnswerPlaceholder', 'Enter the correct answer...')\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-300 hover:border-orange-400 dark:hover:border-orange-500 transform hover:scale-[1.02]\"\n                    />\n                  </div>\n\n                  <!-- Difficulty -->\n                  <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.6s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-yellow-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.difficulty', 'Difficulty') }}\n                    </label>\n                    <select\n                      v-model=\"formData.difficulty\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300 hover:border-yellow-400 dark:hover:border-yellow-500 transform hover:scale-[1.02]\"\n                    >\n                      <option value=\"\">{{ t('vocabulary.questions.selectDifficulty', 'Select difficulty...') }}</option>\n                      <option value=\"easy\">{{ t('common.easy', 'Easy') }}</option>\n                      <option value=\"medium\">{{ t('vocabulary.questions.difficulty.medium', 'Medium') }}</option>\n                      <option value=\"hard\">{{ t('common.difficult', 'Difficult') }}</option>\n                    </select>\n                  </div>\n\n                  <!-- Explanation -->\n                  <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.7s\">\n                    <label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                      <span class=\"w-1 h-4 bg-cyan-500 rounded mr-2\"></span>\n                      {{ t('vocabulary.questions.explanation', 'Explanation') }}\n                    </label>\n                    <textarea\n                      v-model=\"formData.explanation\"\n                      rows=\"3\"\n                      :placeholder=\"t('vocabulary.questions.explanationPlaceholder', 'Optional explanation for the answer...')\"\n                      class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent transition-all duration-300 hover:border-cyan-400 dark:hover:border-cyan-500 transform hover:scale-[1.02] resize-none\"\n                    ></textarea>\n                  </div>\n                </form>\n              </div>\n\n              <!-- Footer -->\n              <div class=\"flex items-center justify-end space-x-3 p-6 border-t border-gray-200 dark:border-gray-700 bg-gradient-to-r from-gray-50 to-white dark:from-[#0a0a0a] dark:to-[#0a0a0a] flex-shrink-0\">\n                <button\n                  @click=\"$emit('close')\"\n                  type=\"button\"\n                  class=\"px-4 py-2 text-gray-700 dark:text-gray-300 bg-white/50 dark:bg-[#0a0a0a]/50 hover:bg-gray-100/50 dark:hover:bg-[#0a0a0a]/70 border border-gray-300 dark:border-gray-600 rounded-lg font-medium transition-all duration-300 hover:scale-105 shadow-md hover:shadow-lg\"\n                >\n                  {{ t('common.cancel', 'Cancel') }}\n                </button>\n                <button\n                  @click=\"handleSubmit\"\n                  type=\"submit\"\n                  :disabled=\"!isFormValid\"\n                  class=\"px-6 py-2 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 disabled:from-gray-400 disabled:to-gray-500 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-all duration-300 hover:scale-105 shadow-lg hover:shadow-xl\"\n                >\n                  {{ question ? t('common.update', 'Update') : t('common.add', 'Add') }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </Transition>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted, onUnmounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\ninterface Question {\n  id: string\n  vocabularyId: string\n  vocabulary?: {\n    id: string\n    word: string\n  }\n  question: string\n  type: 'multiple-choice' | 'fill-blank' | 'true-false' | 'short-answer'\n  options?: string[]\n  correctAnswer: string\n  difficulty?: 'easy' | 'medium' | 'hard'\n  explanation?: string\n  createdAt: string\n  updatedAt: string\n}\n\ninterface Props {\n  show: boolean\n  question?: Question | null\n  vocabularyList: Array<{ id: string; word: string; meaning: string }>\n}\n\ninterface Emits {\n  (e: 'close'): void\n  (e: 'save', question: Partial<Question>): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\nconst { t } = useI18n()\n\n// Form data\nconst formData = ref<{\n  vocabularyId: string\n  question: string\n  type: 'multiple-choice' | 'fill-blank' | 'true-false' | 'short-answer'\n  options: string[] | undefined\n  correctAnswer: string\n  difficulty: 'easy' | 'medium' | 'hard' | undefined\n  explanation: string\n}>({\n  vocabularyId: '',\n  question: '',\n  type: 'multiple-choice',\n  options: undefined,\n  correctAnswer: '',\n  difficulty: undefined,\n  explanation: ''\n})\n\n// Computed\nconst isFormValid = computed(() => {\n  if (!formData.value.vocabularyId || !formData.value.question || !formData.value.type) {\n    return false\n  }\n\n  if (formData.value.type === 'multiple-choice') {\n    return formData.value.options?.every(opt => opt.trim()) && \n           formData.value.correctAnswer !== '' &&\n           formData.value.options?.length >= 2\n  }\n\n  return formData.value.correctAnswer !== ''\n})\n\n// Methods\nconst resetForm = () => {\n  formData.value = {\n    vocabularyId: '',\n    question: '',\n    type: 'multiple-choice',\n    options: undefined,\n    correctAnswer: '',\n    difficulty: undefined,\n    explanation: ''\n  }\n}\n\nconst loadQuestion = () => {\n  if (props.question) {\n    formData.value = {\n      vocabularyId: props.question.vocabularyId,\n      question: props.question.question,\n      type: props.question.type,\n      options: props.question.options ? [...props.question.options] : ['', '', '', ''],\n      correctAnswer: String(props.question.correctAnswer),\n      difficulty: props.question.difficulty || 'easy',\n      explanation: props.question.explanation || ''\n    }\n  } else {\n    resetForm()\n  }\n}\n\nconst onTypeChange = () => {\n  if (formData.value.type === 'multiple-choice') {\n    formData.value.options = ['', '', '', '']\n  } else if (formData.value.type === 'true-false') {\n    formData.value.options = undefined\n    formData.value.correctAnswer = 'true'\n  } else {\n    formData.value.options = undefined\n    formData.value.correctAnswer = ''\n  }\n}\n\nconst addOption = () => {\n  if (formData.value.options && formData.value.options.length < 6) {\n    formData.value.options.push('')\n  }\n}\n\nconst removeOption = (index: number) => {\n  if (formData.value.options && formData.value.options.length > 2) {\n    formData.value.options.splice(index, 1)\n    // Adjust correct answer if it was pointing to removed option\n    const currentAnswerIndex = Number(formData.value.correctAnswer)\n    if (currentAnswerIndex === index) {\n      formData.value.correctAnswer = ''\n    } else if (currentAnswerIndex > index) {\n      formData.value.correctAnswer = String(currentAnswerIndex - 1)\n    }\n  }\n}\n\nconst handleSubmit = () => {\n  if (!isFormValid.value) return\n\n  const questionData = {\n    vocabularyId: formData.value.vocabularyId,\n    question: formData.value.question,\n    type: formData.value.type,\n    correctAnswer: formData.value.correctAnswer,\n    difficulty: formData.value.difficulty,\n    explanation: formData.value.explanation,\n    options: formData.value.type === 'multiple-choice' ? formData.value.options?.filter(opt => opt.trim()) : undefined\n  }\n\n  emit('save', questionData)\n}\n\nconst lockBodyScroll = () => {\n  document.body.style.overflow = 'hidden'\n}\n\nconst unlockBodyScroll = () => {\n  document.body.style.overflow = ''\n}\n\n// Watchers\nwatch(() => props.show, (newShow) => {\n  if (newShow) {\n    loadQuestion()\n    lockBodyScroll()\n  } else {\n    unlockBodyScroll()\n  }\n})\n\nwatch(() => props.question, () => {\n  if (props.show) {\n    loadQuestion()\n  }\n})\n\nonMounted(() => {\n  if (props.show) {\n    loadQuestion()\n    lockBodyScroll()\n  }\n})\n\nonUnmounted(() => {\n  unlockBodyScroll()\n})\n\ndefineOptions({\n  name: 'QuestionFormDialog'\n})\n</script>\n\n<script lang=\"ts\">\nexport default {}\n</script>\n"],"names":["_createElementBlock","_createVNode","_Transition","show","_openBlock","_createElementVNode","_toDisplayString","question","_unref","$emit","_Fragment","_renderList","vocabularyList","_vModelSelect","_vModelText","_vModelRadio","_createTextVNode"],"mappings":"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"}