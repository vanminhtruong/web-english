{"version":3,"mappings":"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","names":["_createElementBlock","_createElementVNode","_toDisplayString","card","getTopicName","_unref","_openBlock","_Fragment","_renderList","_normalizeClass","flipTileAnswered","flipTileCorrect","_createTextVNode","_createVNode"],"ignoreList":[],"sources":["../../src/views/practice/components/FlipTileMode.vue"],"sourcesContent":["<template>\n  <div\n    class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-2xl border border-gray-200 dark:border-dark-bg-mute p-6 min-h-96 max-h-[560px] select-none\"\n    @copy.prevent\n    @cut.prevent\n    @contextmenu.prevent\n    @mousedown=\"enforceInputFocus\"\n  >\n    <div class=\"h-full flex flex-col overflow-hidden\">\n      <!-- Category Badge -->\n      <div class=\"mb-4 flex items-center justify-center gap-3\">\n        <span class=\"px-3 py-1 bg-purple-100 dark:bg-dark-bg-mute text-purple-800 dark:text-purple-300 text-sm font-medium rounded-full\">\n          {{ card?.category ? getTopicName(card.category) : '' }}\n        </span>\n        <!-- Flipped tiles counter -->\n        <div class=\"flex items-center gap-2\">\n          <span class=\"text-xs text-gray-600 dark:text-white/70\">\n            {{ t('flashcard.flipTile.tilesFlipped', 'Tiles flipped') }}: {{ flippedCount }}/{{ maxFlips }}\n          </span>\n        </div>\n      </div>\n\n      <!-- Hint Display: Image or Definition -->\n      <div class=\"flex-1 flex items-center justify-center mb-4 min-h-0\">\n        <!-- Show definition if hints mode is enabled OR no image available -->\n        <div v-if=\"useHints || !card?.image\" class=\"flex items-center justify-center bg-gradient-to-br from-teal-50 to-cyan-50 dark:from-teal-900/30 dark:to-cyan-900/30 rounded-xl p-6 w-full max-w-lg border border-teal-200 dark:border-teal-700/50 shadow-sm\">\n          <div class=\"text-center space-y-3\">\n            <div class=\"mx-auto w-12 h-12 bg-teal-100 dark:bg-teal-800/50 rounded-full flex items-center justify-center mb-4\">\n              <svg class=\"w-6 h-6 text-teal-600 dark:text-teal-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n              </svg>\n            </div>\n            <div class=\"max-h-32 overflow-y-auto\">\n              <p class=\"text-lg font-medium text-gray-900 dark:text-white leading-relaxed\">\n                {{ card?.meaning || t('flashcard.flipTile.noDefinition', 'No definition available') }}\n              </p>\n            </div>\n          </div>\n        </div>\n        <!-- Show image only when hints mode is disabled AND image is available -->\n        <div v-else-if=\"!useHints && card?.image\" class=\"relative\">\n          <img\n            :src=\"card.image\"\n            :alt=\"t('flashcard.flipTile.imageAlt', 'Flip tile image')\"\n            class=\"max-w-full max-h-40 object-contain rounded-lg shadow-md border border-gray-200 dark:border-dark-bg-mute filter blur-sm\"\n            @error=\"handleImageError\"\n          />\n          <div v-if=\"imageError\" class=\"absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-lg\">\n            <div class=\"text-center\">\n              <svg class=\"mx-auto h-12 w-12 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              <p class=\"text-sm text-gray-500 dark:text-white/60 mt-2\">{{ t('flashcard.image.imageError', 'Could not load image.') }}</p>\n            </div>\n          </div>\n        </div>\n        <!-- No content fallback -->\n        <div v-else class=\"flex items-center justify-center bg-gray-100 dark:bg-dark-bg-mute rounded-lg p-8 w-full max-w-sm\">\n          <div class=\"text-center\">\n            <svg class=\"mx-auto h-16 w-16 text-gray-400 dark:text-white/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 16m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n            </svg>\n            <p class=\"text-sm text-gray-500 dark:text-white/60 mt-2\">{{ t('flashcard.flipTile.noContent', 'No content available for this card.') }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Letter tiles -->\n      <div class=\"flex-shrink-0 mb-4\">\n        <!-- Responsive container with horizontal scroll for xs/sm -->\n        <div class=\"w-full max-w-full overflow-x-auto\">\n          <div class=\"flex flex-wrap gap-2 xs:gap-1.5 sm:gap-2 md:gap-3 justify-center items-center min-w-fit px-1\">\n            <div v-for=\"(tile, idx) in tiles\" :key=\"idx\">\n              <div v-if=\"tile.separator\" class=\"px-1 text-sm xs:text-base sm:text-lg text-gray-700 dark:text-white/80 select-none\">\n                {{ tile.char }}\n              </div>\n              <div\n                v-else\n                class=\"relative w-8 h-10 xs:w-10 xs:h-12 sm:w-12 sm:h-14 md:w-14 md:h-16 transition-all duration-500 tile-3d flex-shrink-0\"\n                :class=\"[ { 'cursor-pointer': !tile.flipped && canFlipMore }, tile.flipped ? 'is-flipped' : 'hover:shadow-xl hover:scale-105' ]\"\n                @click=\"onTileClick(idx)\"\n              >\n              <!-- Front face (hidden) -->\n              <div \n                class=\"tile-face absolute inset-0 flex items-center justify-center rounded-lg border-2 bg-gradient-to-br from-blue-500 to-purple-600 dark:from-blue-600 dark:to-purple-700 border-blue-400 dark:border-blue-500 shadow-lg\"\n              >\n                <div class=\"text-white\">\n                  <svg class=\"w-3 h-3 xs:w-4 xs:h-4 sm:w-5 sm:h-5 md:w-6 md:h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\" clip-rule=\"evenodd\"/>\n                  </svg>\n                </div>\n              </div>\n\n              <!-- Back face (revealed) -->\n              <div \n                class=\"tile-face tile-back absolute inset-0 flex items-center justify-center rounded-lg border-2 bg-white dark:bg-dark-bg-soft border-green-400 dark:border-green-500 shadow-lg text-sm xs:text-base sm:text-xl md:text-2xl font-bold text-gray-900 dark:text-white\"\n              >\n                {{ tile.char.toUpperCase() }}\n              </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Answer Input -->\n      <div v-if=\"!flipTileAnswered\" class=\"flex-shrink-0 mb-4\">\n        <div class=\"max-w-md mx-auto\">\n          <div class=\"relative\">\n            <input\n              ref=\"answerInput\"\n              v-model=\"userAnswer\"\n              type=\"text\"\n              :placeholder=\"t('flashcard.flipTile.answerPlaceholder', 'Type your answer...')\"\n              class=\"w-full px-4 py-3 text-lg font-medium text-center rounded-xl border-2 bg-white dark:bg-dark-bg-soft text-gray-900 dark:text-white border-gray-300 dark:border-dark-bg-mute focus:outline-none focus:border-blue-500 dark:focus:border-blue-400 focus:ring-2 focus:ring-blue-200 dark:focus:ring-blue-800/50 transition-all duration-200\"\n              :disabled=\"flipTileAnswered\"\n              @keydown.enter=\"checkAnswer\"\n              @input=\"onAnswerInput\"\n            />\n            <button\n              v-if=\"userAnswer.trim()\"\n              @click=\"checkAnswer\"\n              class=\"absolute right-3 top-1/2 transform -translate-y-1/2 px-3 py-1 bg-blue-500 hover:bg-blue-600 dark:bg-blue-600 dark:hover:bg-blue-700 text-white text-sm font-medium rounded-lg transition-colors duration-200\"\n            >\n              {{ t('flashcard.flipTile.check', 'Check') }}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Feedback -->\n      <div v-if=\"flipTileAnswered\" class=\"text-center space-y-2 max-h-32 overflow-y-auto\">\n        <div\n          :class=\"[\n            'inline-flex items-center px-3 py-1 rounded-full text-sm font-medium',\n            flipTileCorrect\n              ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300'\n              : 'bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-300'\n          ]\"\n        >\n          <svg v-if=\"flipTileCorrect\" class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n          </svg>\n          <svg v-else class=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n          </svg>\n          {{ flipTileCorrect ? t('common.correct', 'Correct') : t('common.incorrect', 'Incorrect') }}\n        </div>\n        <div v-if=\"!flipTileCorrect\" class=\"text-center\">\n          <p class=\"text-sm text-gray-600 dark:text-white/70\">\n            {{ t('flashcard.image.correctAnswer', 'Correct answer') }}:\n            <span class=\"font-semibold text-gray-900 dark:text-white\">{{ card?.word }}</span>\n          </p>\n          <p class=\"text-xs text-gray-500 dark:text-white/60 mt-1 line-clamp-2\">\n            {{ card?.meaning }}\n          </p>\n        </div>\n        <div v-else class=\"text-center\">\n          <p class=\"text-sm text-gray-600 dark:text-white/70 line-clamp-2\">\n            {{ card?.meaning }}\n          </p>\n        </div>\n      </div>\n\n      <!-- Instruction -->\n      <p v-if=\"!flipTileAnswered\" class=\"text-center text-sm text-gray-500 dark:text-white/60 mt-3\">\n        {{ t('flashcard.flipTile.instruction', `Click on tiles to reveal letters (max ${maxFlips}), then type your answer and press Enter.`) }}\n      </p>\n      \n      <!-- Firework Sound Effect -->\n      <FireworkSoundEffect \n        ref=\"fireworkEffect\"\n        :trigger-firework=\"triggerFirework\"\n        :trigger-sound=\"triggerSound\"\n        :is-correct=\"isCorrectAnswer\"\n        @effect-complete=\"resetTriggers\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted, defineAsyncComponent, computed, nextTick } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport type { Vocabulary } from '../../../composables/useVocabularyStore'\nimport { useVoiceStore } from '../../../stores/voiceStore'\n\ninterface Props {\n  card: Vocabulary | null\n  flipTileAnswer: string\n  flipTileAnswered: boolean\n  flipTileCorrect: boolean\n  getTopicName: (id: string) => string\n  useHints: boolean\n}\n\ninterface Emits {\n  (e: 'update:flip-tile-answer', value: string): void\n  (e: 'check-answer'): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\nconst { t } = useI18n()\nconst { playAudio } = useVoiceStore()\n\n// Computed property to determine whether to use hints (definition) or image\nconst useHints = computed(() => props.useHints ?? true)\n\nconst imageError = ref(false)\nconst answerInput = ref<HTMLInputElement | null>(null)\nconst userAnswer = ref('')\n\n// Import effect component lazily\nconst FireworkSoundEffect = defineAsyncComponent(() => import('./FireworkSoundEffect.vue'))\n// Effect triggers\nconst triggerFirework = ref(false)\nconst triggerSound = ref(false)\nconst isCorrectAnswer = ref(false)\nconst fireworkEffect = ref()\n\ntype Tile = { char: string; flipped: boolean; separator?: boolean }\nconst tiles = ref<Tile[]>([])\n\nconst normalizeWord = (w: string) => w.normalize('NFKC')\n\nconst buildTiles = (word: string) => {\n  const letters = normalizeWord(word)\n  const arr: Tile[] = []\n  const isAlpha = (c: string) => /^[a-z]$/i.test(c)\n\n  for (let i = 0; i < letters.length; i++) {\n    const c = letters[i]\n    if (!isAlpha(c)) {\n      // keep separators (space, hyphen, apostrophe)\n      arr.push({ char: c, flipped: true, separator: true })\n      continue\n    }\n    // All alphabetic characters start as hidden (not flipped)\n    arr.push({ char: c, flipped: false })\n  }\n  tiles.value = arr\n}\n\nconst flippedCount = computed(() => {\n  return tiles.value.filter(tile => tile.flipped && !tile.separator).length\n})\n\n// Total letter tiles (exclude separators like space, hyphen, etc.)\nconst totalLetterTiles = computed(() => tiles.value.filter(tile => !tile.separator).length)\n\n// Dynamic max flips: if word has 4 letters or fewer, allow only 1 flip; otherwise allow 2 flips\nconst maxFlips = computed(() => (totalLetterTiles.value <= 4 ? 1 : 2))\n\nconst canFlipMore = computed(() => flippedCount.value < maxFlips.value)\n\nconst onTileClick = (idx: number) => {\n  const tile = tiles.value[idx]\n  if (!tile || tile.separator || tile.flipped || props.flipTileAnswered) return\n  \n  if (canFlipMore.value) {\n    tile.flipped = true\n  }\n}\n\nconst onAnswerInput = () => {\n  emit('update:flip-tile-answer', userAnswer.value)\n}\n\nconst checkAnswer = () => {\n  if (!userAnswer.value.trim()) return\n  emit('check-answer')\n}\n\nconst handleImageError = () => {\n  imageError.value = true\n}\n\n// Reset effect triggers\nconst resetTriggers = () => {\n  triggerFirework.value = false\n  triggerSound.value = false\n}\n\n// Watch answer completion to trigger effects\nwatch(() => props.flipTileAnswered, (newVal) => {\n  if (newVal) {\n    // Reveal all remaining tiles regardless of correctness\n    tiles.value.forEach(tile => {\n      if (!tile.separator) tile.flipped = true\n    })\n\n    if (!triggerFirework.value) {\n      isCorrectAnswer.value = props.flipTileCorrect\n      setTimeout(() => {\n        triggerFirework.value = true\n        triggerSound.value = true\n      }, 50)\n    }\n  }\n  // When answered correctly, pronounce the word using project voice settings\n  if (newVal && props.flipTileCorrect && props.card?.word) {\n    // Fire and forget; ignore errors if TTS unsupported\n    Promise.resolve(playAudio(props.card.word)).catch(() => {})\n  }\n})\n\n// Watch for new card\nwatch(() => props.card, (c) => {\n  imageError.value = false\n  userAnswer.value = ''\n  if (c?.word) {\n    buildTiles(c.word)\n  }\n  // Focus input on new card\n  nextTick(() => {\n    answerInput.value?.focus()\n  })\n})\n\n// Watch flip tile answer from parent\nwatch(() => props.flipTileAnswer, (newVal) => {\n  if (newVal !== userAnswer.value) {\n    userAnswer.value = newVal\n  }\n})\n\nonMounted(() => {\n  if (props.card?.word) {\n    buildTiles(props.card.word)\n  }\n  nextTick(() => {\n    answerInput.value?.focus()\n  })\n})\n\n// Keep input focused regardless of where the user clicks inside the component (when not answered)\nconst enforceInputFocus = () => {\n  if (!props.flipTileAnswered) {\n    // Defer to allow other click handlers (e.g., tile flip) to run first\n    setTimeout(() => {\n      answerInput.value?.focus()\n    }, 0)\n  }\n}\n</script>\n\n<style scoped>\n.preserve-3d {\n  transform-style: preserve-3d;\n}\n\n.rotate-y-180 {\n  transform: rotateY(180deg);\n}\n\n.rotate-y-0 {\n  transform: rotateY(0deg);\n}\n\n/* Flip tile container and faces */\n.tile-3d {\n  transform-style: preserve-3d;\n  transition: transform 0.5s ease;\n}\n\n.tile-3d.is-flipped {\n  transform: rotateY(180deg);\n}\n\n.tile-face {\n  backface-visibility: hidden;\n  -webkit-backface-visibility: hidden; /* Safari */\n}\n\n.tile-back {\n  transform: rotateY(180deg);\n}\n\n/* Add 3D flip animation support */\n@media (prefers-reduced-motion: no-preference) {\n  .preserve-3d {\n    perspective: 1000px;\n  }\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .preserve-3d {\n    perspective: none;\n  }\n  \n  .rotate-y-180,\n  .rotate-y-0 {\n    transform: none;\n  }\n}\n\n/* Custom scrollbar for tiles container on mobile */\n.overflow-x-auto::-webkit-scrollbar {\n  height: 4px;\n}\n\n.overflow-x-auto::-webkit-scrollbar-track {\n  background-color: #f1f5f9;\n  border-radius: 2px;\n}\n\n.overflow-x-auto::-webkit-scrollbar-thumb {\n  background-color: #94a3b8;\n  border-radius: 2px;\n}\n\n.overflow-x-auto::-webkit-scrollbar-thumb:hover {\n  background-color: #64748b;\n}\n\n/* Dark mode scrollbar */\n@media (prefers-color-scheme: dark) {\n  .overflow-x-auto::-webkit-scrollbar-track {\n    background-color: #0f0f0f; /* dark-bg-mute */\n  }\n  \n  .overflow-x-auto::-webkit-scrollbar-thumb {\n    background-color: #0a0a0a; /* dark-bg-soft */\n  }\n  \n  .overflow-x-auto::-webkit-scrollbar-thumb:hover {\n    background-color: #000000; /* dark-bg */\n  }\n  \n  .overflow-x-auto {\n    scrollbar-color: #0a0a0a #0f0f0f;\n  }\n}\n\n/* Firefox scrollbar */\n.overflow-x-auto {\n  scrollbar-width: thin;\n  scrollbar-color: #94a3b8 #f1f5f9;\n}\n</style>\n"],"file":"assets/FlipTileMode-C9FWkLko.js"}