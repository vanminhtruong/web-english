import{u as e}from"./voiceStore-o6lhlGgY.js";class t{voiceStore=e();createAudioContext(){try{return new(window.AudioContext||window.webkitAudioContext)}catch(e){return console.log("Audio context not available"),null}}playImpactSound(){const e=this.createAudioContext();if(e)try{const t=e.createOscillator(),n=e.createGain();t.connect(n),n.connect(e.destination),t.frequency.setValueAtTime(400,e.currentTime),t.frequency.exponentialRampToValueAtTime(200,e.currentTime+.1),n.gain.setValueAtTime(.15,e.currentTime),n.gain.exponentialRampToValueAtTime(.01,e.currentTime+.15),t.type="sine",t.start(e.currentTime),t.stop(e.currentTime+.15)}catch(t){console.log("Impact sound failed:",t)}}playExplosionSound(){const e=this.createAudioContext();if(e)try{const t=e.createOscillator(),n=e.createGain(),i=e.createBiquadFilter();t.connect(i),i.connect(n),n.connect(e.destination),t.frequency.setValueAtTime(800,e.currentTime),t.frequency.exponentialRampToValueAtTime(100,e.currentTime+.3),i.frequency.setValueAtTime(2e3,e.currentTime),i.frequency.exponentialRampToValueAtTime(500,e.currentTime+.3),i.Q.setValueAtTime(3,e.currentTime),n.gain.setValueAtTime(.2,e.currentTime),n.gain.exponentialRampToValueAtTime(.01,e.currentTime+.3),t.type="sawtooth",t.start(e.currentTime),t.stop(e.currentTime+.3)}catch(t){console.log("Explosion sound failed:",t)}}playBounceSound(){const e=this.createAudioContext();if(e)try{const t=e.createOscillator(),n=e.createGain();t.connect(n),n.connect(e.destination),t.frequency.setValueAtTime(600,e.currentTime),t.frequency.exponentialRampToValueAtTime(400,e.currentTime+.08),n.gain.setValueAtTime(.1,e.currentTime),n.gain.exponentialRampToValueAtTime(.01,e.currentTime+.08),t.type="triangle",t.start(e.currentTime),t.stop(e.currentTime+.08)}catch(t){console.log("Bounce sound failed:",t)}}playVocabularySound(e,t="en"){try{if(!("speechSynthesis"in window))return void console.log("Speech Synthesis not supported");window.speechSynthesis.cancel();const n=this.voiceStore.createUtterance(e);if("vi"===t){n.lang="vi-VN";const e=window.speechSynthesis.getVoices().filter(e=>e.lang.startsWith("vi"));e.length>0&&(n.voice=e[0])}else if("ko"===t){n.lang="ko-KR";const e=window.speechSynthesis.getVoices().filter(e=>e.lang.startsWith("ko"));e.length>0&&(n.voice=e[0])}window.speechSynthesis.speak(n)}catch(n){console.log("Vocabulary sound failed:",n)}}}const n=()=>new t;export{n as u};
