{"version":3,"mappings":";;;;AAMA,MAAM,oBAAoB,qBAAqB,0BAAM,OAAO,iCAA0B,0CAAC;AA+BhF,SAAS,uBAAuB,OAAc;AACnD,QAAM,EAAE,MAAM;AACU;AACxB,QAAM,cAAc;AACpB,QAAM,EAAE,iBAAiB;AAGzB,QAAM,iBAAiB,IAA6B,EAAE;AACtD,QAAM,wBAAwB,IAA6B,EAAE;AAC7D,QAAM,eAAe,IAA4B,EAAE;AACnD,QAAM,kBAAkB,IAAI,CAAC;AAC7B,QAAM,cAAc,IAAI,CAAC;AACzB,QAAM,gBAAgB,IAAI,CAAC;AAC3B,QAAM,kBAAkB,IAA4B,EAAE;AACtD,QAAM,oBAAoB,IAAI,CAAC;AAG/B,QAAM,sBAAsB,CAAC,SAAiB,YAAY,oBAAoB,MAAM,IAAI;AACxF,QAAM,mBAAmB,CAAC,SAAiB,YAAY,oBAAoB,MAAM,IAAI;AAGrF,QAAM,oBAAoB,MAAM;AAC9B,QAAI;AACF,YAAM,QAAQ,aAAa,QAAQ,qCAAqC;AACxE,UAAI,sBAAsB,QAAQ,EAAE,GAAG,KAAK,MAAM,KAAK;AAAA,IACzD,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AAAA,IACtD;AAAA,EACF;AAEA,QAAM,oBAAoB,MAAM;AAC9B,QAAI;AACF,mBAAa,QAAQ,uCAAuC,KAAK,UAAU,eAAe,KAAK,CAAC;AAAA,IAClG,SAAS,OAAO;AACd,cAAQ,MAAM,gCAAgC,KAAK;AAAA,IACrD;AAAA,EACF;AAEA,QAAM,iCAAiC,MAAM;AAC3C,QAAI;AACF,YAAM,QAAQ,aAAa,QAAQ,4CAA4C;AAC/E,UAAI,6BAA6B,QAAQ,EAAE,GAAG,KAAK,MAAM,KAAK;AAAA,IAChE,SAAS,OAAO;AACd,cAAQ,MAAM,qDAAqD,KAAK;AAAA,IAC1E;AAAA,EACF;AAEA,QAAM,iCAAiC,MAAM;AAC3C,QAAI;AACF,mBAAa,QAAQ,8CAA8C,KAAK,UAAU,sBAAsB,KAAK,CAAC;AAAA,IAChH,SAAS,OAAO;AACd,cAAQ,MAAM,+CAA+C,KAAK;AAAA,IACpE;AAAA,EACF;AAEA,QAAM,wBAAwB,MAAM;AAClC,QAAI;AACF,YAAM,QAAQ,aAAa,QAAQ,mCAAmC;AACtE,UAAI,oBAAoB,QAAQ,EAAE,GAAG,KAAK,MAAM,KAAK;AAAA,IACvD,SAAS,OAAO;AACd,cAAQ,MAAM,sCAAsC,KAAK;AAAA,IAC3D;AAAA,EACF;AAEA,QAAM,wBAAwB,MAAM;AAClC,QAAI;AACF,mBAAa,QAAQ,qCAAqC,KAAK,UAAU,aAAa,KAAK,CAAC;AAAA,IAC9F,SAAS,OAAO;AACd,cAAQ,MAAM,qCAAqC,KAAK;AAAA,IAC1D;AAAA,EACF;AAEA,QAAM,2BAA2B,MAAM;AACrC,QAAI;AACF,YAAM,QAAQ,aAAa,QAAQ,8BAA8B;AACjE,UAAI,uBAAuB,QAAQ,EAAE,GAAG,KAAK,MAAM,KAAK;AAAA,IAC1D,SAAS,OAAO;AACd,cAAQ,MAAM,0CAA0C,KAAK;AAAA,IAC/D;AAAA,EACF;AAEA,QAAM,2BAA2B,MAAM;AACrC,QAAI;AACF,mBAAa,QAAQ,gCAAgC,KAAK,UAAU,gBAAgB,KAAK,CAAC;AAAA,IAC5F,SAAS,OAAO;AACd,cAAQ,MAAM,yCAAyC,KAAK;AAAA,IAC9D;AAAA,EACF;AAGA,QAAM,uBAAuB,SAAS,MAAM;AAC1C,UAAM,SAAuC;AAC7C,UAAM,eAAe,QAAQ,WAAS;AACpC,YAAM,WAAW,MAAM,YAAY;AACnC,UAAI,CAAC,OAAO,QAAQ,EAAG,QAAO,QAAQ,IAAI;AAC1C,aAAO,QAAQ,EAAE,KAAK,KAAK;AAAA,IAC7B,CAAC;AACD,WAAO,KAAK,MAAM,EAAE,QAAQ,SAAO;AACjC,aAAO,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,IACzD,CAAC;AACD,WAAO;AAAA,EACT,CAAC;AAED,QAAM,oBAAoB,SAAS,MAAM;AACvC,UAAM,YAAY,qBAAqB;AAGvC,UAAM,YAAY,OAAO,KAAK,SAAS,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,cAAc,CAAC,CAAC;AAC1E,UAAM,SAAS,YAAY,QAAQ,KAAK,cAAc;AACtD,UAAM,MAAM,QAAQ,cAAc;AAClC,UAAM,kBAAkB,UAAU,MAAM,OAAO,GAAG;AAClD,UAAM,kBAAgD;AACtD,oBAAgB,QAAQ,cAAY;AAClC,sBAAgB,QAAQ,IAAI,UAAU,QAAQ;AAAA,IAChD,CAAC;AACD,WAAO;AAAA,EACT,CAAC;AAED,QAAM,iBAAiB,SAAS,MAAM;AACpC,UAAM,cAAc,OAAO,KAAK,qBAAqB,KAAK,EAAE;AAC5D,UAAM,aAAa,KAAK,KAAK,cAAc,cAAc,KAAK;AAC9D,UAAM,cAAc,YAAY,QAAQ,KAAK,cAAc,QAAQ;AACnE,UAAM,WAAW,KAAK,IAAI,YAAY,QAAQ,cAAc,OAAO,WAAW;AAC9E,WAAO;AAAA,MACL;AAAA,MAAa;AAAA,MAAY,aAAa,YAAY;AAAA,MAAO;AAAA,MAAY;AAAA,MACrE,SAAS,YAAY,QAAQ;AAAA,MAAY,aAAa,YAAY,QAAQ;AAAA;AAAA,EAE9E,CAAC;AAED,QAAM,eAAe,SAAS,MAAM;AAClC,UAAM,QAAkB;AACxB,UAAM,aAAa;AACnB,UAAM,SAAS,eAAe,MAAM;AACpC,QAAI,UAAU,YAAY;AACxB,eAAS,IAAI,GAAG,KAAK,QAAQ,IAAK,OAAM,KAAK,CAAC;AAAA,IAChD,OAAO;AACL,YAAM,QAAQ,KAAK,IAAI,GAAG,YAAY,QAAQ,KAAK,MAAM,aAAa,CAAC,CAAC;AACxE,YAAM,MAAM,KAAK,IAAI,QAAQ,QAAQ,aAAa,CAAC;AACnD,eAAS,IAAI,OAAO,KAAK,KAAK,IAAK,OAAM,KAAK,CAAC;AAAA,IACjD;AACA,WAAO;AAAA,EACT,CAAC;AAGD,QAAM,mBAAmB,CAAC,YAAoB,MAAM,SAAS,OAAO,OAAK,EAAE,iBAAiB,OAAO;AACnG,QAAM,4BAA4B,CAAC,YAAoB;AACrD,UAAM,cAAc,iBAAiB,OAAO;AAC5C,UAAM,aAAa,KAAK,IAAI,GAAG,KAAK,KAAK,YAAY,SAAS,gBAAgB,KAAK,CAAC;AACpF,UAAM,UAAU,KAAK,IAAI,aAAa,MAAM,OAAO,KAAK,GAAG,UAAU;AACrE,UAAM,SAAS,UAAU,KAAK,gBAAgB;AAC9C,WAAO,YAAY,MAAM,OAAO,QAAQ,gBAAgB,KAAK;AAAA,EAC/D;AAEA,QAAM,0BAA0B,CAAC,aAAqB;AACpD,UAAM,QAAQ,qBAAqB,MAAM,QAAQ,KAAK;AACtD,UAAM,UAAU,gBAAgB,MAAM,QAAQ,KAAK;AACnD,UAAM,SAAS,UAAU,KAAK,kBAAkB;AAChD,WAAO,MAAM,MAAM,OAAO,QAAQ,kBAAkB,KAAK;AAAA,EAC3D;AAEA,QAAM,0BAA0B,CAAC,aAAqB;AACpD,UAAM,SAAS,qBAAqB,MAAM,QAAQ,KAAK,IAAI;AAC3D,WAAO,KAAK,IAAI,GAAG,KAAK,KAAK,QAAQ,kBAAkB,KAAK,CAAC;AAAA,EAC/D;AAEA,QAAM,8BAA8B,CAAC,aAAqB;AACxD,UAAM,cAAc,qBAAqB,MAAM,QAAQ,KAAK,IAAI;AAChE,UAAM,aAAa,KAAK,IAAI,GAAG,KAAK,KAAK,aAAa,kBAAkB,KAAK,CAAC;AAC9E,UAAM,UAAU,KAAK,IAAI,gBAAgB,MAAM,QAAQ,KAAK,GAAG,UAAU;AACzE,UAAM,QAAQ,eAAe,IAAI,KAAK,UAAU,KAAK,kBAAkB,QAAQ;AAC/E,UAAM,MAAM,KAAK,IAAI,UAAU,kBAAkB,OAAO,UAAU;AAClE,WAAO,EAAE,YAAY,YAAY,aAAa,SAAS,OAAO,KAAK,SAAS,UAAU,YAAY,aAAa,UAAU;AAAA,EAC3H;AAEA,QAAM,uBAAuB,CAAC,YAAoB,KAAK,KAAK,iBAAiB,OAAO,EAAE,SAAS,gBAAgB,KAAK;AAEpH,QAAM,2BAA2B,CAAC,YAAoB;AACpD,UAAM,gBAAgB,iBAAiB,OAAO,EAAE;AAChD,UAAM,aAAa,qBAAqB,OAAO;AAC/C,UAAM,iBAAiB,KAAK,IAAI,GAAG,UAAU;AAC7C,UAAM,UAAU,KAAK,IAAI,aAAa,MAAM,OAAO,KAAK,GAAG,cAAc;AACzE,UAAM,SAAS,UAAU,KAAK,gBAAgB,QAAQ;AACtD,UAAM,MAAM,KAAK,IAAI,UAAU,gBAAgB,OAAO,aAAa;AACnE,WAAO,EAAE,eAAe,YAAY,aAAa,SAAS,OAAO,KAAK,SAAS,UAAU,YAAY,aAAa,UAAU;AAAA,EAC9H;AAEA,QAAM,uBAAuB,CAAC,YAAoB,MAAM,SAAS,OAAO,OAAK,EAAE,iBAAiB,OAAO,EAAE;AACzG,QAAM,2BAA2B,CAAC,UAAwB,MAAM,OAAO,CAAC,OAAO,UAAU,QAAQ,qBAAqB,MAAM,EAAE,GAAG,CAAC;AAElI,QAAM,uBAAuB,CAAC,aAAqB;AACjD,UAAM,QAAkB;AACxB,UAAM,aAAa;AACnB,UAAM,SAAS,wBAAwB,QAAQ;AAC/C,UAAM,UAAW,gBAAgB,MAAM,QAAQ,KAAK;AACpD,QAAI,UAAU,YAAY;AACxB,eAAS,IAAI,GAAG,KAAK,QAAQ,IAAK,OAAM,KAAK,CAAC;AAAA,IAChD,OAAO;AACL,YAAM,QAAQ,KAAK,IAAI,GAAG,UAAU,KAAK,MAAM,aAAa,CAAC,CAAC;AAC9D,YAAM,MAAM,KAAK,IAAI,QAAQ,QAAQ,aAAa,CAAC;AACnD,eAAS,IAAI,OAAO,KAAK,KAAK,IAAK,OAAM,KAAK,CAAC;AAAA,IACjD;AACA,WAAO;AAAA,EACT;AAGA,QAAM,qBAAqB,CAAC,UAAkB,SAAiB;AAC7D,UAAM,aAAa,wBAAwB,QAAQ;AACnD,QAAI,QAAQ,KAAK,QAAQ,YAAY;AACnC,sBAAgB,MAAM,QAAQ,IAAI;AAClC;AAAA,IACF;AAAA,EACF;AAEA,QAAM,yBAAyB,CAAC,aAAqB;AACnD,UAAM,UAAU,gBAAgB,MAAM,QAAQ,KAAK;AACnD,QAAI,UAAU,EAAG,oBAAmB,UAAU,UAAU,CAAC;AAAA,EAC3D;AAEA,QAAM,qBAAqB,CAAC,aAAqB;AAC/C,UAAM,UAAU,gBAAgB,MAAM,QAAQ,KAAK;AACnD,UAAM,aAAa,wBAAwB,QAAQ;AACnD,QAAI,UAAU,WAAY,oBAAmB,UAAU,UAAU,CAAC;AAAA,EACpE;AAEA,QAAM,kBAAkB,CAAC,SAAiB,SAAiB;AACzD,UAAM,aAAa,qBAAqB,OAAO;AAC/C,QAAI,QAAQ,KAAK,QAAQ,YAAY;AACnC,mBAAa,MAAM,OAAO,IAAI;AAC9B;AAAA,IACF;AAAA,EACF;AAEA,QAAM,sBAAsB,CAAC,YAAoB;AAC/C,UAAM,UAAU,aAAa,MAAM,OAAO,KAAK;AAC/C,QAAI,UAAU,EAAG,iBAAgB,SAAS,UAAU,CAAC;AAAA,EACvD;AAEA,QAAM,kBAAkB,CAAC,YAAoB;AAC3C,UAAM,UAAU,aAAa,MAAM,OAAO,KAAK;AAC/C,UAAM,aAAa,qBAAqB,OAAO;AAC/C,QAAI,UAAU,WAAY,iBAAgB,SAAS,UAAU,CAAC;AAAA,EAChE;AAEA,QAAM,WAAW,CAAC,SAAiB;AACjC,QAAI,QAAQ,KAAK,QAAQ,eAAe,MAAM,wBAAwB,QAAQ;AAAA,EAChF;AAEA,QAAM,eAAe,MAAM;AACzB,QAAI,eAAe,MAAM,YAAa,aAAY;AAAA,EACpD;AAEA,QAAM,WAAW,MAAM;AACrB,QAAI,eAAe,MAAM,QAAS,aAAY;AAAA,EAChD;AAGA,QAAM,cAAc,CAAC,aAAqB;AACxC,mBAAe,MAAM,QAAQ,IAAI,CAAC,eAAe,MAAM,QAAQ;AAC/D;AAAA,EACF;AAEA,QAAM,sBAAsB,CAAC,YAAoB;AAC/C,0BAAsB,MAAM,OAAO,IAAI,CAAC,sBAAsB,MAAM,OAAO;AAC3E;AAAA,EACF;AAGA,QAAM,eAAe,CAAC,SAAiB;AACrC,UAAM,SAAS;AAAA,MACb,YAAY,EAAE,sCAAsC,UAAU;AAAA,MAC9D,YAAY,EAAE,sCAAsC,UAAU;AAAA,MAC9D,UAAU,EAAE,oCAAoC,QAAQ;AAAA,MACxD,WAAW,EAAE,qCAAqC,SAAS;AAAA;AAE7D,WAAO,OAAO,IAA2B,KAAK;AAAA,EAChD;AAEA,QAAM,oBAAoB,CAAC,SAAiB;AAC1C,UAAM,UAAU;AAAA,MACd,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW;AAAA;AAEb,WAAO,QAAQ,IAA4B,KAAK;AAAA,EAClD;AAEA,QAAM,qBAAqB,CAAC,eAAuB;AACjD,UAAM,SAAS;AAAA,MACb,QAAQ,EAAE,eAAe,MAAM;AAAA,MAC/B,UAAU,EAAE,yCAAyC,QAAQ;AAAA,MAC7D,QAAQ,EAAE,oBAAoB,WAAW;AAAA;AAE3C,WAAO,OAAO,UAAiC,KAAK;AAAA,EACtD;AAEA,QAAM,0BAA0B,CAAC,eAAuB;AACtD,UAAM,UAAU;AAAA,MACd,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,QAAQ;AAAA;AAEV,WAAO,QAAQ,UAAkC,KAAK;AAAA,EACxD;AAGA,QAAM,QAAQ,CAAC,OAAgB;AAC7B,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAEA,QAAM,aAAa,CAAC,OAAgB;AAClC,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAEA,QAAM,QAAQ,CAAC,OAAgB;AAC7B,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS,QAAQ,eAAe;AAC9C,YAAQ,MAAM,WAAW;AACzB,YAAQ;AACR,YAAQ,MAAM,SAAS;AAAA,EACzB;AAEA,QAAM,aAAa,CAAC,OAAgB;AAClC,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAEA,QAAM,qBAAqB,CAAC,OAAgB;AAC1C,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAEA,QAAM,0BAA0B,CAAC,OAAgB;AAC/C,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAEA,QAAM,qBAAqB,CAAC,OAAgB;AAC1C,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS,QAAQ,eAAe;AAC9C,YAAQ,MAAM,WAAW;AACzB,YAAQ;AACR,YAAQ,MAAM,SAAS;AAAA,EACzB;AAEA,QAAM,0BAA0B,CAAC,OAAgB;AAC/C,UAAM,UAAU;AAChB,YAAQ,MAAM,SAAS;AACvB,YAAQ,MAAM,WAAW;AAAA,EAC3B;AAGA,QAAM,gBAAgB,CAAC,SAAc,SAAc;AAEjD,SAAK,kBAAkB,OAAO;AAAA,EAChC;AAGA,QAAM,uCAAuC,MAAM;AACjD,QAAI,kBAAkB,OAAO,eAAe;AAC5C,WAAO,OAAO,kBAAkB,KAAK,EAAE,QAAQ,WAAS;AACtD,YAAM,QAAQ,WAAS;AACrB,YAAI,sBAAsB,MAAM,MAAM,EAAE,MAAM,QAAW;AACvD,gCAAsB,MAAM,MAAM,EAAE,IAAI;AACxC,4BAAkB;AAAA,QACpB;AACA,YAAI,aAAa,MAAM,MAAM,EAAE,MAAM,QAAW;AAC9C,uBAAa,MAAM,MAAM,EAAE,IAAI;AAC/B,yBAAe;AAAA,QACjB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AACD,QAAI,gBAAiB;AACrB,QAAI,aAAc;AAAA,EACpB;AAEA,QAAM,iCAAiC,MAAM;AAC3C,QAAI,UAAU;AACd,WAAO,KAAK,kBAAkB,KAAK,EAAE,QAAQ,cAAY;AACvD,UAAI,gBAAgB,MAAM,QAAQ,MAAM,QAAW;AACjD,wBAAgB,MAAM,QAAQ,IAAI;AAClC,kBAAU;AAAA,MACZ;AAAA,IACF,CAAC;AACD,QAAI,QAAS;AAAA,EACf;AAEA,QAAM,0BAA0B,MAAM;AACpC,UAAM,YAAY,OAAO,KAAK,kBAAkB,KAAK;AACrD,QAAI,UAAU;AACd,cAAU,QAAQ,SAAO;AACvB,UAAI,eAAe,MAAM,GAAG,MAAM,QAAW;AAC3C,uBAAe,MAAM,GAAG,IAAI;AAC5B,kBAAU;AAAA,MACZ;AAAA,IACF,CAAC;AACD,QAAI,QAAS;AAAA,EACf;AAGA,QAAM,wBAAwB,MAAM;AAClC,QAAI;AACF,YAAM,mBAAmB,IAAI,IAAI,OAAO,KAAK,qBAAqB,KAAK,CAAC;AACxE,YAAM,eAAe,OAAO,KAAK,eAAe,KAAK;AACrD,UAAI,kBAAkB;AACtB,mBAAa,QAAQ,cAAY;AAC/B,YAAI,CAAC,iBAAiB,IAAI,QAAQ,GAAG;AACnC,iBAAO,eAAe,MAAM,QAAQ;AACpC,4BAAkB;AAAA,QACpB;AAAA,MACF,CAAC;AAED,YAAM,gBAAgB,OAAO,KAAK,gBAAgB,KAAK;AACvD,UAAI,oBAAoB;AACxB,oBAAc,QAAQ,cAAY;AAChC,YAAI,CAAC,iBAAiB,IAAI,QAAQ,GAAG;AACnC,iBAAO,gBAAgB,MAAM,QAAQ;AACrC,8BAAoB;AAAA,QACtB;AAAA,MACF,CAAC;AAED,aAAO,KAAK,qBAAqB,KAAK,EAAE,QAAQ,cAAY;AAC1D,cAAM,aAAa,wBAAwB,QAAQ;AACnD,cAAM,UAAU,gBAAgB,MAAM,QAAQ,KAAK;AACnD,YAAI,UAAU,YAAY;AACxB,0BAAgB,MAAM,QAAQ,IAAI;AAClC,8BAAoB;AAAA,QACtB;AAAA,MACF,CAAC;AAED,UAAI,gBAAiB;AACrB,UAAI,kBAAmB;AAAA,IACzB,SAAS,OAAO;AACd,cAAQ,MAAM,uCAAuC,KAAK;AAAA,IAC5D;AAAA,EACF;AAEA,QAAM,6BAA6B,MAAM;AACvC,QAAI;AACF,YAAM,kBAAkB,IAAI,IAAI,MAAM,eAAe,IAAI,OAAK,EAAE,EAAE,CAAC;AACnE,YAAM,eAAe,OAAO,KAAK,sBAAsB,KAAK;AAC5D,UAAI,kBAAkB;AACtB,mBAAa,QAAQ,aAAW;AAC9B,YAAI,CAAC,gBAAgB,IAAI,OAAO,GAAG;AACjC,iBAAO,sBAAsB,MAAM,OAAO;AAC1C,4BAAkB;AAAA,QACpB;AAAA,MACF,CAAC;AAED,YAAM,YAAY,OAAO,KAAK,aAAa,KAAK;AAChD,UAAI,eAAe;AACnB,gBAAU,QAAQ,aAAW;AAC3B,YAAI,CAAC,gBAAgB,IAAI,OAAO,GAAG;AACjC,iBAAO,aAAa,MAAM,OAAO;AACjC,yBAAe;AAAA,QACjB;AAAA,MACF,CAAC;AAED,UAAI,gBAAiB;AACrB,UAAI,aAAc;AAAA,IACpB,SAAS,OAAO;AACd,cAAQ,MAAM,4CAA4C,KAAK;AAAA,IACjE;AAAA,EACF;AAGA,QAAM,MAAM,kBAAkB,OAAO,MAAM;AACzC;AACA;AACA;AAAA,EACF,CAAC;AAED,QAAM,MAAM,qBAAqB,OAAO,MAAM,yBAAyB,EAAE,MAAM,MAAM;AACrF,QAAM,MAAM,MAAM,gBAAgB,MAAM,8BAA8B,EAAE,MAAM,MAAM;AACpF,QAAM,MAAM,eAAe,OAAO,MAAM,qBAAqB,EAAE,MAAM,MAAM;AAC3E,QAAM,MAAM,sBAAsB,OAAO,MAAM,kCAAkC,EAAE,MAAM,MAAM;AAC/F,QAAM,MAAM,aAAa,OAAO,MAAM,yBAAyB,EAAE,MAAM,MAAM;AAC7E,QAAM,MAAM,gBAAgB,OAAO,MAAM,4BAA4B,EAAE,MAAM,MAAM;AAGnF,YAAU,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAW,MAAM;AACf;AACA;AAAA,IACF,GAAG,GAAG;AAAA,EACR,CAAC;AAED,SAAO;AAAA;AAAA,IAEL;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAGA;AAAA;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA,oBAAe;AAAA,EACb,MAAM;AACR;;;;;;;;;AAlEA,UAAM,QAAQ;AAEd,UAAM,OAAO;AAMb,UAAM;AAAA,MAEJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MAGA;AAAA,MAKA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,uBAAuB,KAAK;;AAje9B,aAAAA,UAAA,GAAAC,mBA0ZM,OA1ZN,YA0ZM;AAAA,SAzZJD,UAAA,OAAAC,mBA4UMC,UAAA,MAAAC,WA3UwBC,MAAA,oBAAiB,CAArC,OAAO,aAAQ;8BADzBH,mBA4UM;AAAA,YA1UH,KAAK;AAAA,YACN,OAAM;AAAA;YAGNI,gBAmCM;AAAA,cAlCH,SAAK,YAAED,MAAA,aAAY,QAAQ;AAAA,cAC5B,OAAM;AAAA;cAENC,gBAYM,OAZN,YAYM;AAAA,0CAXJA,gBAEM,SAFD,OAAM,wBAAoB;AAAA,kBAC7BA,gBAAyF,SAApF,OAAM,yEAAuE;AAAA;gBAEpFA,gBAOM;AAAA,kBANJA,gBAEK,MAFL,YAEKC,gBADAF,MAAA,cAAa,QAAQ;AAAA,kBAE1BC,gBAEI,KAFJ,YAEIC,gBADC,MAAM,MAAM,IAAG,MAACA,gBAAG,MAAM,WAAM,IAASF,MAAA,gCAA+BA,MAAA,GAAC;AAAA;;cAKjFC,gBAgBM,OAhBN,YAgBM;AAAA,gBAdJA,gBAEO,QAFP,YAEOC,gBADFF,MAAA,0BAAyB,KAAK,KAAI,MAACE,gBAAGF,MAAA,GAAC;AAAA,8BAI5CH,mBAQM;AAAA,kBAPJ,OAAKM,eAAA,CAAC,8EAA4E,gBAC1DH,MAAA,gBAAe,QAAQ;AAAA,kBAC/C,MAAK;AAAA,kBACL,QAAO;AAAA,kBACP,SAAQ;AAAA;kBAERC,gBAA2F;AAAA,oBAArF,kBAAe;AAAA,oBAAQ,mBAAgB;AAAA,oBAAQ,gBAAa;AAAA,oBAAI,GAAE;AAAA;;;;YAM9EG,YA+RaC,YAAA;AAAA,cA9RX,MAAK;AAAA,cACJ,SAAOL,MAAA;AAAA,cACP,cAAaA,MAAA;AAAA,cACb,SAAOA,MAAA;AAAA,cACP,cAAaA,MAAA;AAAA;+BAEd,MAuRM;AAAA,gBAvRKA,MAAA,gBAAe,QAAQ,KAAlCJ,UAAA,GAAAC,mBAuRM,OAvRN,YAuRM;AAAA,kBAtRJI,gBAqRM,OArRN,YAqRM;AAAA,qBApRJL,UAAA,OAAAC,mBAiNMC,UAAA,MAAAC,WAhNYC,MAAA,yBAAwB,QAAQ,IAAzC,UAAK;0CADdH,mBAiNM;AAAA,wBA/MH,KAAK,MAAM;AAAA,wBACZ,OAAM;AAAA;wBAGNI,gBAsDM;AAAA,0BAtDA,SAAK,YAAED,MAAA,qBAAoB,MAAM,EAAE;AAAA,0BAAG,OAAM;AAAA;0BAChDC,gBA2CM,OA3CN,aA2CM;AAAA,sDA1CJA,gBAEM,SAFD,OAAM,wBAAoB;AAAA,8BAC7BA,gBAAoF,SAA/E,OAAM,oEAAkE;AAAA;4BAE/EA,gBAsCM;AAAA,8BArCJA,gBA2BM,OA3BN,aA2BM;AAAA,gCA1BJA,gBAAmF,MAAnF,aAAmFC,gBAAlB,MAAM,IAAI;AAAA,gCAC3ED,gBAQS;AAAA,kCAPN,SAAKK,cAAA,YAAON,MAAA,qBAAoB,MAAM,IAAI;AAAA,kCAC3C,OAAM;AAAA,kCACL,OAAOA,MAAA,GAAC;AAAA;kCAETC,gBAEM;AAAA,oCAFD,OAAM;AAAA,oCAAsE,MAAK;AAAA,oCAAO,QAAO;AAAA,oCAAe,SAAQ;AAAA;oCACzHA,gBAAuL;AAAA,sCAAjL,kBAAe;AAAA,sCAAQ,mBAAgB;AAAA,sCAAQ,gBAAa;AAAA,sCAAI,GAAE;AAAA;;;gCAI5EA,gBAcS;AAAA,kCAbN,SAAKK,cAAA,YAAON,MAAA,qBAAoB,MAAM,EAAE;AAAA,kCACzC,OAAM;AAAA,kCACL,OAAOA,6BAAsB,MAAM,EAAE,IAAIA,MAAA,GAAC,uDAAwDA,MAAA,GAAC;AAAA;gDAEpGH,mBAQM;AAAA,oCAPJ,uBAAM,iEAA+D,gBAC7CG,6BAAsB,MAAM,EAAE;AAAA,oCACtD,MAAK;AAAA,oCACL,QAAO;AAAA,oCACP,SAAQ;AAAA;oCAERC,gBAA2F;AAAA,sCAArF,kBAAe;AAAA,sCAAQ,mBAAgB;AAAA,sCAAQ,gBAAa;AAAA,sCAAI,GAAE;AAAA;;;;8BAI9EA,gBAA2E,KAA3E,aAA2EC,gBAApB,MAAM,OAAO;AAAA,8BACpED,gBAOM,OAPN,aAOM;AAAA,gCANJA,gBAEO,QAFP,aAEOC,gBADF,MAAM,YAAY;AAAA,gCAEvBD,gBAEO,QAFP,aAEOC,gBADFF,MAAA,sBAAqB,MAAM,EAAE,KAAI,MAACE,gBAAGF,MAAA,sBAAqB,MAAM,EAAE;AAAA;;;0BAK7EC,gBAQS;AAAA,4BAPN,SAAKK,cAAA,YAAOC,WAAK,eAAgB,KAAK;AAAA,4BACvC,OAAM;AAAA;sDAENN,gBAEM;AAAA,8BAFD,OAAM;AAAA,8BAAc,MAAK;AAAA,8BAAO,QAAO;AAAA,8BAAe,SAAQ;AAAA;8BACjEA,gBAA2F;AAAA,gCAArF,kBAAe;AAAA,gCAAQ,mBAAgB;AAAA,gCAAQ,gBAAa;AAAA,gCAAI,GAAE;AAAA;;4BAE1EA,gBAAqF,QAArF,aAAqFC,gBAA5DF,MAAA,GAAC;AAAA;;wBAK9BI,YAiJaC,YAAA;AAAA,0BAhJX,MAAK;AAAA,0BACJ,SAAOL,MAAA;AAAA,0BACP,cAAaA,MAAA;AAAA,0BACb,SAAOA,MAAA;AAAA,0BACP,cAAaA,MAAA;AAAA;2CAEd,MAyIM;AAAA,4BAzIKA,MAAA,uBAAsB,MAAM,EAAE,KAAzCJ,aAAAC,mBAyIM,OAzIN,aAyIM;AAAA,8BAxIOG,MAAA,kBAAiB,MAAM,EAAE,EAAE,WAAM,KAA5CJ,UAAA,GAAAC,mBAKM,OALN,aAKM;AAAA,4DAJJI,gBAEM;AAAA,kCAFD,OAAM;AAAA,kCAAqC,MAAK;AAAA,kCAAO,QAAO;AAAA,kCAAe,SAAQ;AAAA;kCACxFA,gBAAiM;AAAA,oCAA3L,kBAAe;AAAA,oCAAQ,mBAAgB;AAAA,oCAAQ,gBAAa;AAAA,oCAAI,GAAE;AAAA;;gCAE1EA,gBAA0F,KAA1F,aAA0FC,gBAApEF,MAAA,GAAC;AAAA;+BAGzBJ,UAAA,OAAAC,mBA8DMC,2BA7DcE,MAAA,2BAA0B,MAAM,EAAE,IAA7C,YAAO;oDADhBH,mBA8DM;AAAA,kCA5DH,KAAK,QAAQ;AAAA,kCACd,OAAM;AAAA;kCAENI,gBAwDM,OAxDN,aAwDM;AAAA,oCAvDJA,gBAuCM,OAvCN,aAuCM;AAAA,sCAtCJA,gBAQM,OARN,aAQM;AAAA,wCAPJA,gBAGO;AAAA,0CAHD,uBAAM,yEACED,yBAAkB,QAAQ,IAAI;AAAA,2DACvCA,MAAA,cAAa,QAAQ,IAAI;AAAA,wCAElB,QAAQ,2BAApBH,mBAEO;AAAA;0CAFyB,uBAAM,WAAkBG,+BAAwB,QAAQ,UAAU;AAAA,2DAC7FA,MAAA,oBAAmB,QAAQ,UAAU;;sCAI5CC,gBAiBM,OAjBN,aAiBM;AAAA,wCAhBJA,gBAWM,OAXN,aAWM;AAAA,0CAVJA,gBAAoF,KAApF,aAAoFC,gBAApB,QAAQ,KAAK;AAAA,0CAC7ED,gBAQS;AAAA,4CAPN,SAAK,YAAED,MAAA,kBAAiB,QAAQ,OAAO;AAAA,4CACxC,OAAM;AAAA,4CACL,OAAOA,MAAA,GAAC;AAAA;4CAETC,gBAEM;AAAA,8CAFD,OAAM;AAAA,8CAAkE,MAAK;AAAA,8CAAO,QAAO;AAAA,8CAAe,SAAQ;AAAA;8CACrHA,gBAAuL;AAAA,gDAAjL,kBAAe;AAAA,gDAAQ,mBAAgB;AAAA,gDAAQ,gBAAa;AAAA,gDAAI,GAAE;AAAA;;;;wCAI9EA,gBAAkF,KAAlF,aAAkFC,gBAAtB,QAAQ,OAAO;AAAA,wCAClE,QAAQ,eAAjBN,UAAA,GAAAC,mBAEI,KAFJ,aAEIK,gBADC,QAAQ,WAAW;;sCAIf,QAAQ,QAAQ,QAAQ,KAAK,SAAM,KAA9CN,aAAAC,mBAQM,OARN,aAQM;AAAA,yCAPJD,UAAA,OAAAC,mBAMOC,UAAA,MAAAC,WALS,QAAQ,OAAf,QAAG;8DADZF,mBAMO;AAAA,4CAJJ,KAAK;AAAA,4CACN,OAAM;AAAA,6DAEH,GAAG;AAAA;;;oCAKZI,gBAaM,OAbN,aAaM;AAAA,sCAZJA,gBAKS;AAAA,wCAJN,SAAK,YAAEM,WAAK,gBAAiB,OAAO;AAAA,wCACrC,OAAM;AAAA,yDAEHP,MAAA,GAAC;AAAA,sCAENC,gBAKS;AAAA,wCAJN,SAAK,YAAED,MAAA,eAAc,SAAS,IAAI;AAAA,wCACnC,OAAM;AAAA,yDAEHA,MAAA,GAAC;AAAA;;;;8BAODA,MAAA,sBAAqB,MAAM,EAAE,SAAxCJ,aAAAC,mBA+DM,OA/DN,aA+DM;AAAA,gCA9DJI,gBA6DM,OA7DN,aA6DM;AAAA,kCA3DJA,gBAkBM,OAlBN,aAkBM;AAAA,oCAjBJA,gBAMS;AAAA,sCALN,SAAK,YAAED,MAAA,qBAAoB,MAAM,EAAE;AAAA,sCACnC,WAAWA,MAAA,0BAAyB,MAAM,EAAE,EAAE;AAAA,sCAC/C,OAAM;AAAA,uDAEHA,MAAA,GAAC;AAAA,oCAENC,gBAEO,QAFP,aAEOC,gBADFF,gCAAyB,MAAM,EAAE,EAAE,WAAW,IAAG,wBAAMA,MAAA,0BAAyB,MAAM,EAAE,EAAE,UAAU;AAAA,oCAEzGC,gBAMS;AAAA,sCALN,SAAK,YAAED,MAAA,iBAAgB,MAAM,EAAE;AAAA,sCAC/B,WAAWA,MAAA,0BAAyB,MAAM,EAAE,EAAE;AAAA,sCAC/C,OAAM;AAAA,uDAEHA,MAAA,GAAC;AAAA;kCAKRC,gBAgCM,OAhCN,aAgCM;AAAA,oCA/BJA,gBAMS;AAAA,sCALN,SAAK,YAAED,MAAA,qBAAoB,MAAM,EAAE;AAAA,sCACnC,WAAWA,MAAA,0BAAyB,MAAM,EAAE,EAAE;AAAA,sCAC/C,OAAM;AAAA,uDAEHA,MAAA,GAAC;AAAA,oCAGNC,gBAcM,OAdN,aAcM;AAAA,uCAbJL,UAAA,OAAAC,mBAYSC,UAAA,MAAAC,WAXQ,KAAK,IAAIC,MAAA,0BAAyB,MAAM,EAAE,EAAE,iBAApD,SAAI;4DADbH,mBAYS;AAAA,0CAVN,KAAK;AAAA,0CACL,qBAAOG,MAAA,iBAAgB,MAAM,IAAI,IAAI;AAAA,0CACrC,OAAKG,eAAA;AAAA;4CAAiHH,MAAA,0BAAyB,MAAM,EAAE,EAAE,gBAAgB;;2DAOvK,IAAI;AAAA;;oCAIXC,gBAMS;AAAA,sCALN,SAAK,YAAED,MAAA,iBAAgB,MAAM,EAAE;AAAA,sCAC/B,WAAWA,MAAA,0BAAyB,MAAM,EAAE,EAAE;AAAA,sCAC/C,OAAM;AAAA,uDAEHA,MAAA,GAAC;AAAA;kCAKRC,gBAEM,OAFN,aAEMC,gBADDF,MAAA,GAAC,gDAAiDA,MAAA,0BAAyB,MAAM,EAAE,EAAE,OAAK,KAAOA,MAAA,0BAAyB,MAAM,EAAE,EAAE,KAAG,OAASA,MAAA,0BAAyB,MAAM,EAAE,EAAE,iBAAa;AAAA;;;;;;;;oBASpMA,MAAA,yBAAwB,QAAQ,SAA3CJ,aAAAC,mBA+DM,OA/DN,aA+DM;AAAA,sBA9DJI,gBA6DM,OA7DN,aA6DM;AAAA,wBA3DJA,gBAkBM,OAlBN,aAkBM;AAAA,0BAjBJA,gBAMS;AAAA,4BALN,SAAK,YAAED,MAAA,wBAAuB,QAAQ;AAAA,4BACtC,UAAQ,CAAGA,MAAA,6BAA4B,QAAQ,EAAE;AAAA,4BAClD,OAAM;AAAA,6CAEHA,MAAA,GAAC;AAAA,0BAENC,gBAEO,QAFP,aAEOC,gBADFF,MAAA,6BAA4B,QAAQ,EAAE,WAAW,IAAG,QAAGE,gBAAGF,MAAA,6BAA4B,QAAQ,EAAE,UAAU;AAAA,0BAE/GC,gBAMS;AAAA,4BALN,SAAK,YAAED,MAAA,oBAAmB,QAAQ;AAAA,4BAClC,UAAQ,CAAGA,MAAA,6BAA4B,QAAQ,EAAE;AAAA,4BAClD,OAAM;AAAA,6CAEHA,MAAA,GAAC;AAAA;wBAKRC,gBAgCM,OAhCN,aAgCM;AAAA,0BA/BJA,gBAMS;AAAA,4BALN,SAAK,YAAED,MAAA,wBAAuB,QAAQ;AAAA,4BACtC,UAAQ,CAAGA,MAAA,6BAA4B,QAAQ,EAAE;AAAA,4BAClD,OAAM;AAAA,6CAEHA,MAAA,GAAC;AAAA,0BAGNC,gBAcM,OAdN,aAcM;AAAA,6BAbJL,UAAA,OAAAC,mBAYSC,UAAA,MAAAC,WAXQC,MAAA,sBAAqB,QAAQ,IAArC,SAAI;kDADbH,mBAYS;AAAA,gCAVN,KAAK;AAAA,gCACL,SAAK,YAAEG,MAAA,oBAAmB,UAAU,IAAI;AAAA,gCACxC,OAAKG,eAAA;AAAA;kCAAqGH,MAAA,6BAA4B,QAAQ,EAAE,gBAAgB;;iDAO9J,IAAI;AAAA;;0BAIXC,gBAMS;AAAA,4BALN,SAAK,YAAED,MAAA,oBAAmB,QAAQ;AAAA,4BAClC,UAAQ,CAAGA,MAAA,6BAA4B,QAAQ,EAAE;AAAA,4BAClD,OAAM;AAAA,6CAEHA,MAAA,GAAC;AAAA;wBAKRC,gBAEM,OAFN,aAEMC,gBADDF,MAAA,qDAAoDA,MAAA,6BAA4B,QAAQ,EAAE,YAAYA,MAAA,6BAA4B,QAAQ,EAAE,YAAYA,MAAA,6BAA4B,QAAQ,EAAE,cAAU;AAAA;;;;;;;;;QAU9MA,MAAA,gBAAe,aAAU,KAApCJ,aAAAC,mBAyEM,OAzEN,aAyEM;AAAA,UAxEJI,gBAuEM,OAvEN,aAuEM;AAAA,YArEJA,gBAeM,OAfN,aAeM;AAAA,cAdJA,gBAMS;AAAA,gBALN,SAAK;AAAA,6BAAED,MAAA,iBAAAA,MAAA;AAAA,gBACP,UAAQ,CAAGA,MAAA,gBAAe;AAAA,gBAC3B,OAAM;AAAA,iCAEHA,MAAA,GAAC;AAAA,cAENC,gBAMS;AAAA,gBALN,SAAK;AAAA,6BAAED,MAAA,aAAAA,MAAA;AAAA,gBACP,UAAQ,CAAGA,MAAA,gBAAe;AAAA,gBAC3B,OAAM;AAAA,iCAEHA,MAAA,GAAC;AAAA;YAKRC,gBAkDM,OAlDN,aAkDM;AAAA,cAjDJA,gBAQM;AAAA,gBAPJA,gBAMI,KANJ,aAMIC,gBALCF,MAAA,GAAC;AAAA,kBAAgE,OAAAA,MAAA,gBAAe;AAAA,kBAAkC,KAAAA,MAAA,gBAAe;AAAA,kBAAkC,OAAAA,MAAA,gBAAe;AAAA,8BAAyCA,MAAA,gBAAe,UAAU,OAAOA,MAAA,gBAAe,QAAQ,OAAOA,MAAA,gBAAe,WAAW;AAAA;cAO1TC,gBAuCM,OAvCN,aAuCM;AAAA,gBArCJA,gBASS;AAAA,kBARN,SAAK;AAAA,+BAAED,MAAA,iBAAAA,MAAA;AAAA,kBACP,UAAQ,CAAGA,MAAA,gBAAe;AAAA,kBAC3B,OAAM;AAAA;kBAENC,gBAAmE,QAAnE,aAAmEC,gBAA1CF,MAAA,GAAC;AAAA,8CAC1BC,gBAEM;AAAA,oBAFD,OAAM;AAAA,oBAAU,MAAK;AAAA,oBAAe,SAAQ;AAAA;oBAC/CA,gBAAqK;AAAA,sBAA/J,aAAU;AAAA,sBAAU,GAAE;AAAA,sBAAoH,aAAU;AAAA;;;kCAK9JJ,mBAYSC,UAAA,MAAAC,WAXQC,MAAA,eAAY,CAApB,SAAI;sCADbH,mBAYS;AAAA,oBAVN,KAAK;AAAA,oBACL,SAAK,YAAEG,MAAA,UAAS,IAAI;AAAA,oBACpB,OAAKG,eAAA;AAAA,sBAAoB,SAASH,MAAA;;;qCAOhC,IAAI;AAAA;gBAITC,gBASS;AAAA,kBARN,SAAK;AAAA,+BAAED,MAAA,aAAAA,MAAA;AAAA,kBACP,UAAQ,CAAGA,MAAA,gBAAe;AAAA,kBAC3B,OAAM;AAAA;kBAENC,gBAA2D,QAA3D,aAA2DC,gBAAlCF,MAAA,GAAC;AAAA,8CAC1BC,gBAEM;AAAA,oBAFD,OAAM;AAAA,oBAAU,MAAK;AAAA,oBAAe,SAAQ;AAAA;oBAC/CA,gBAAsK;AAAA,sBAAhK,aAAU;AAAA,sBAAU,GAAE;AAAA,sBAAqH,aAAU;AAAA","names":["_openBlock","_createElementBlock","_Fragment","_renderList","_unref","_createElementVNode","_toDisplayString","_normalizeClass","_createVNode","_Transition","_withModifiers","$emit"],"ignoreList":[],"sources":["../../src/views/vocabulary/components/composables/useTopicGroupAccordion.ts","../../src/views/vocabulary/components/TopicGroupAccordion.vue"],"sourcesContent":["import { ref, computed, watch, onMounted, defineAsyncComponent } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useVocabularyStore } from '../../../../composables/useVocabularyStore'\nimport { useAudioSystem } from '../../../practice/composables/bubble-shooter/useAudioSystem'\nimport { useTopicName } from '../../../../utils/topicUtils'\n\nconst ExampleFormDialog = defineAsyncComponent(() => import('../ExampleFormDialog.vue'))\n\nexport interface Example {\n  id: string\n  vocabularyId: string\n  vocabulary?: { id: string; word: string }\n  title: string\n  content: string\n  translation?: string\n  context?: string\n  type: 'sentence' | 'dialogue' | 'phrase' | 'context'\n  difficulty?: 'easy' | 'medium' | 'hard'\n  tags?: string[]\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Vocabulary {\n  id: string\n  word: string\n  meaning: string\n  partOfSpeech: string\n  category: string\n  level: string\n}\n\nexport interface Props {\n  vocabularyList: Vocabulary[]\n  examples: Example[]\n}\n\nexport function useTopicGroupAccordion(props: Props) {\n  const { t } = useI18n()\n  const vocabularyStore = useVocabularyStore()\n  const audioSystem = useAudioSystem()\n  const { getTopicName } = useTopicName()\n\n  // State\n  const expandedGroups = ref<Record<string, boolean>>({})\n  const expandedVocabExamples = ref<Record<string, boolean>>({})\n  const examplePages = ref<Record<string, number>>({})\n  const examplesPerPage = ref(3)\n  const currentPage = ref(1)\n  const topicsPerPage = ref(3)\n  const topicVocabPages = ref<Record<string, number>>({})\n  const topicVocabPerPage = ref(3)\n\n  // Audio functions\n  const playVocabularyAudio = (word: string) => audioSystem.playVocabularySound(word, 'en')\n  const playExampleAudio = (text: string) => audioSystem.playVocabularySound(text, 'en')\n\n  // Local storage functions\n  const loadExpandedState = () => {\n    try {\n      const saved = localStorage.getItem('vocabulary-examples-expanded-topics')\n      if (saved) expandedGroups.value = { ...JSON.parse(saved) }\n    } catch (error) {\n      console.error('Error loading expanded state:', error)\n    }\n  }\n\n  const saveExpandedState = () => {\n    try {\n      localStorage.setItem('vocabulary-examples-expanded-topics', JSON.stringify(expandedGroups.value))\n    } catch (error) {\n      console.error('Error saving expanded state:', error)\n    }\n  }\n\n  const loadExpandedVocabExamplesState = () => {\n    try {\n      const saved = localStorage.getItem('vocabulary-examples-expanded-vocab-grouped')\n      if (saved) expandedVocabExamples.value = { ...JSON.parse(saved) }\n    } catch (error) {\n      console.error('Error loading expanded vocabulary examples state:', error)\n    }\n  }\n\n  const saveExpandedVocabExamplesState = () => {\n    try {\n      localStorage.setItem('vocabulary-examples-expanded-vocab-grouped', JSON.stringify(expandedVocabExamples.value))\n    } catch (error) {\n      console.error('Error saving expanded vocab examples state:', error)\n    }\n  }\n\n  const loadExamplePagesState = () => {\n    try {\n      const saved = localStorage.getItem('vocabulary-examples-pages-grouped')\n      if (saved) examplePages.value = { ...JSON.parse(saved) }\n    } catch (error) {\n      console.error('Error loading example pages state:', error)\n    }\n  }\n\n  const saveExamplePagesState = () => {\n    try {\n      localStorage.setItem('vocabulary-examples-pages-grouped', JSON.stringify(examplePages.value))\n    } catch (error) {\n      console.error('Error saving example pages state:', error)\n    }\n  }\n\n  const loadTopicVocabPagesState = () => {\n    try {\n      const saved = localStorage.getItem('vocabulary-topic-vocab-pages')\n      if (saved) topicVocabPages.value = { ...JSON.parse(saved) }\n    } catch (error) {\n      console.error('Error loading topic vocab pages state:', error)\n    }\n  }\n\n  const saveTopicVocabPagesState = () => {\n    try {\n      localStorage.setItem('vocabulary-topic-vocab-pages', JSON.stringify(topicVocabPages.value))\n    } catch (error) {\n      console.error('Error saving topic vocab pages state:', error)\n    }\n  }\n\n  // Computed values\n  const allGroupedVocabulary = computed(() => {\n    const groups: Record<string, Vocabulary[]> = {}\n    props.vocabularyList.forEach(vocab => {\n      const topicKey = vocab.category || 'uncategorized'\n      if (!groups[topicKey]) groups[topicKey] = []\n      groups[topicKey].push(vocab)\n    })\n    Object.keys(groups).forEach(key => {\n      groups[key].sort((a, b) => a.word.localeCompare(b.word))\n    })\n    return groups\n  })\n\n  const groupedVocabulary = computed(() => {\n    const allGroups = allGroupedVocabulary.value\n    // Ensure topics (categories) are displayed in a consistent alphabetical order\n    // to match the behavior in `VocabularyListView.vue`\n    const topicKeys = Object.keys(allGroups).sort((a, b) => a.localeCompare(b))\n    const start = (currentPage.value - 1) * topicsPerPage.value\n    const end = start + topicsPerPage.value\n    const paginatedTopics = topicKeys.slice(start, end)\n    const paginatedGroups: Record<string, Vocabulary[]> = {}\n    paginatedTopics.forEach(topicKey => {\n      paginatedGroups[topicKey] = allGroups[topicKey]\n    })\n    return paginatedGroups\n  })\n\n  const paginationInfo = computed(() => {\n    const totalTopics = Object.keys(allGroupedVocabulary.value).length\n    const totalPages = Math.ceil(totalTopics / topicsPerPage.value)\n    const startIndex = (currentPage.value - 1) * topicsPerPage.value + 1\n    const endIndex = Math.min(currentPage.value * topicsPerPage.value, totalTopics)\n    return {\n      totalTopics, totalPages, currentPage: currentPage.value, startIndex, endIndex,\n      hasNext: currentPage.value < totalPages, hasPrevious: currentPage.value > 1\n    }\n  })\n\n  const visiblePages = computed(() => {\n    const pages: number[] = []\n    const maxVisible = 5\n    const totalP = paginationInfo.value.totalPages\n    if (totalP <= maxVisible) {\n      for (let i = 1; i <= totalP; i++) pages.push(i)\n    } else {\n      const start = Math.max(1, currentPage.value - Math.floor(maxVisible / 2))\n      const end = Math.min(totalP, start + maxVisible - 1)\n      for (let i = start; i <= end; i++) pages.push(i)\n    }\n    return pages\n  })\n\n  // Data helpers\n  const getVocabExamples = (vocabId: string) => props.examples.filter(e => e.vocabularyId === vocabId)\n  const getPaginatedVocabExamples = (vocabId: string) => {\n    const allExamples = getVocabExamples(vocabId)\n    const totalPages = Math.max(1, Math.ceil(allExamples.length / examplesPerPage.value))\n    const current = Math.min(examplePages.value[vocabId] || 1, totalPages)\n    const start = (current - 1) * examplesPerPage.value\n    return allExamples.slice(start, start + examplesPerPage.value)\n  }\n\n  const getPaginatedTopicVocabs = (topicKey: string) => {\n    const group = allGroupedVocabulary.value[topicKey] || []\n    const current = topicVocabPages.value[topicKey] || 1\n    const start = (current - 1) * topicVocabPerPage.value\n    return group.slice(start, start + topicVocabPerPage.value)\n  }\n\n  const getTopicVocabPagesCount = (topicKey: string) => {\n    const total = (allGroupedVocabulary.value[topicKey] || []).length\n    return Math.max(1, Math.ceil(total / topicVocabPerPage.value))\n  }\n\n  const getTopicVocabPaginationInfo = (topicKey: string) => {\n    const totalVocab = (allGroupedVocabulary.value[topicKey] || []).length\n    const totalPages = Math.max(1, Math.ceil(totalVocab / topicVocabPerPage.value))\n    const current = Math.min(topicVocabPages.value[topicKey] || 1, totalPages)\n    const start = totalVocab === 0 ? 0 : (current - 1) * topicVocabPerPage.value + 1\n    const end = Math.min(current * topicVocabPerPage.value, totalVocab)\n    return { totalVocab, totalPages, currentPage: current, start, end, hasNext: current < totalPages, hasPrevious: current > 1 }\n  }\n\n  const getVocabExamplePages = (vocabId: string) => Math.ceil(getVocabExamples(vocabId).length / examplesPerPage.value)\n\n  const getExamplePaginationInfo = (vocabId: string) => {\n    const totalExamples = getVocabExamples(vocabId).length\n    const totalPages = getVocabExamplePages(vocabId)\n    const safeTotalPages = Math.max(1, totalPages)\n    const current = Math.min(examplePages.value[vocabId] || 1, safeTotalPages)\n    const start = (current - 1) * examplesPerPage.value + 1\n    const end = Math.min(current * examplesPerPage.value, totalExamples)\n    return { totalExamples, totalPages, currentPage: current, start, end, hasNext: current < totalPages, hasPrevious: current > 1 }\n  }\n\n  const getVocabExampleCount = (vocabId: string) => props.examples.filter(e => e.vocabularyId === vocabId).length\n  const getTotalExamplesForTopic = (group: Vocabulary[]) => group.reduce((total, vocab) => total + getVocabExampleCount(vocab.id), 0)\n\n  const getTopicVisiblePages = (topicKey: string) => {\n    const pages: number[] = []\n    const maxVisible = 5\n    const totalP = getTopicVocabPagesCount(topicKey)\n    const current = (topicVocabPages.value[topicKey] || 1)\n    if (totalP <= maxVisible) {\n      for (let i = 1; i <= totalP; i++) pages.push(i)\n    } else {\n      const start = Math.max(1, current - Math.floor(maxVisible / 2))\n      const end = Math.min(totalP, start + maxVisible - 1)\n      for (let i = start; i <= end; i++) pages.push(i)\n    }\n    return pages\n  }\n\n  // Navigation functions\n  const goToTopicVocabPage = (topicKey: string, page: number) => {\n    const totalPages = getTopicVocabPagesCount(topicKey)\n    if (page >= 1 && page <= totalPages) {\n      topicVocabPages.value[topicKey] = page\n      saveTopicVocabPagesState()\n    }\n  }\n\n  const previousTopicVocabPage = (topicKey: string) => {\n    const current = topicVocabPages.value[topicKey] || 1\n    if (current > 1) goToTopicVocabPage(topicKey, current - 1)\n  }\n\n  const nextTopicVocabPage = (topicKey: string) => {\n    const current = topicVocabPages.value[topicKey] || 1\n    const totalPages = getTopicVocabPagesCount(topicKey)\n    if (current < totalPages) goToTopicVocabPage(topicKey, current + 1)\n  }\n\n  const goToExamplePage = (vocabId: string, page: number) => {\n    const totalPages = getVocabExamplePages(vocabId)\n    if (page >= 1 && page <= totalPages) {\n      examplePages.value[vocabId] = page\n      saveExamplePagesState()\n    }\n  }\n\n  const previousExamplePage = (vocabId: string) => {\n    const current = examplePages.value[vocabId] || 1\n    if (current > 1) goToExamplePage(vocabId, current - 1)\n  }\n\n  const nextExamplePage = (vocabId: string) => {\n    const current = examplePages.value[vocabId] || 1\n    const totalPages = getVocabExamplePages(vocabId)\n    if (current < totalPages) goToExamplePage(vocabId, current + 1)\n  }\n\n  const goToPage = (page: number) => {\n    if (page >= 1 && page <= paginationInfo.value.totalPages) currentPage.value = page\n  }\n\n  const previousPage = () => {\n    if (paginationInfo.value.hasPrevious) currentPage.value--\n  }\n\n  const nextPage = () => {\n    if (paginationInfo.value.hasNext) currentPage.value++\n  }\n\n  // Toggle functions\n  const toggleGroup = (topicKey: string) => {\n    expandedGroups.value[topicKey] = !expandedGroups.value[topicKey]\n    saveExpandedState()\n  }\n\n  const toggleVocabExamples = (vocabId: string) => {\n    expandedVocabExamples.value[vocabId] = !expandedVocabExamples.value[vocabId]\n    saveExpandedVocabExamplesState()\n  }\n\n  // Styling helpers\n  const getTypeLabel = (type: string) => {\n    const labels = {\n      'sentence': t('vocabulary.examples.types.sentence', 'Sentence'),\n      'dialogue': t('vocabulary.examples.types.dialogue', 'Dialogue'),\n      'phrase': t('vocabulary.examples.types.phrase', 'Phrase'),\n      'context': t('vocabulary.examples.types.context', 'Context')\n    }\n    return labels[type as keyof typeof labels] || type\n  }\n\n  const getTypeColorClass = (type: string) => {\n    const classes = {\n      'sentence': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n      'dialogue': 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n      'phrase': 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300',\n      'context': 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300'\n    }\n    return classes[type as keyof typeof classes] || 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300'\n  }\n\n  const getDifficultyLabel = (difficulty: string) => {\n    const labels = {\n      'easy': t('common.easy', 'Easy'),\n      'medium': t('vocabulary.examples.difficulty.medium', 'Medium'),\n      'hard': t('common.difficult', 'Difficult')\n    }\n    return labels[difficulty as keyof typeof labels] || difficulty\n  }\n\n  const getDifficultyColorClass = (difficulty: string) => {\n    const classes = {\n      'easy': 'text-green-600 dark:text-green-400',\n      'medium': 'text-yellow-600 dark:text-yellow-400',\n      'hard': 'text-red-600 dark:text-red-400'\n    }\n    return classes[difficulty as keyof typeof classes] || 'text-gray-600 dark:text-gray-400'\n  }\n\n  // Animation functions\n  const enter = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = '0'\n    element.style.overflow = 'hidden'\n  }\n\n  const afterEnter = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = 'auto'\n    element.style.overflow = 'visible'\n  }\n\n  const leave = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = element.scrollHeight + 'px'\n    element.style.overflow = 'hidden'\n    element.offsetHeight\n    element.style.height = '0'\n  }\n\n  const afterLeave = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = 'auto'\n    element.style.overflow = 'visible'\n  }\n\n  const vocabExamplesEnter = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = '0'\n    element.style.overflow = 'hidden'\n  }\n\n  const vocabExamplesAfterEnter = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = 'auto'\n    element.style.overflow = 'visible'\n  }\n\n  const vocabExamplesLeave = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = element.scrollHeight + 'px'\n    element.style.overflow = 'hidden'\n    element.offsetHeight\n    element.style.height = '0'\n  }\n\n  const vocabExamplesAfterLeave = (el: Element) => {\n    const element = el as HTMLElement\n    element.style.height = 'auto'\n    element.style.overflow = 'visible'\n  }\n\n  // Action handlers\n  const deleteExample = (example: any, emit: any) => {\n    // Only emit the event. Parent handles confirmation and success toast.\n    emit('delete-example', example)\n  }\n\n  // Initialization functions\n  const initializeExpandedVocabExamplesState = () => {\n    let examplesChanged = false, pagesChanged = false\n    Object.values(groupedVocabulary.value).forEach(group => {\n      group.forEach(vocab => {\n        if (expandedVocabExamples.value[vocab.id] === undefined) {\n          expandedVocabExamples.value[vocab.id] = true\n          examplesChanged = true\n        }\n        if (examplePages.value[vocab.id] === undefined) {\n          examplePages.value[vocab.id] = 1\n          pagesChanged = true\n        }\n      })\n    })\n    if (examplesChanged) saveExpandedVocabExamplesState()\n    if (pagesChanged) saveExamplePagesState()\n  }\n\n  const initializeTopicVocabPagesState = () => {\n    let changed = false\n    Object.keys(groupedVocabulary.value).forEach(topicKey => {\n      if (topicVocabPages.value[topicKey] === undefined) {\n        topicVocabPages.value[topicKey] = 1\n        changed = true\n      }\n    })\n    if (changed) saveTopicVocabPagesState()\n  }\n\n  const initializeExpandedState = () => {\n    const topicKeys = Object.keys(groupedVocabulary.value)\n    let changed = false\n    topicKeys.forEach(key => {\n      if (expandedGroups.value[key] === undefined) {\n        expandedGroups.value[key] = true\n        changed = true\n      }\n    })\n    if (changed) saveExpandedState()\n  }\n\n  // Cleanup functions\n  const cleanupOldTopicStates = () => {\n    try {\n      const currentTopicKeys = new Set(Object.keys(allGroupedVocabulary.value))\n      const expandedKeys = Object.keys(expandedGroups.value)\n      let expandedChanged = false\n      expandedKeys.forEach(topicKey => {\n        if (!currentTopicKeys.has(topicKey)) {\n          delete expandedGroups.value[topicKey]\n          expandedChanged = true\n        }\n      })\n      \n      const topicPageKeys = Object.keys(topicVocabPages.value)\n      let topicPagesChanged = false\n      topicPageKeys.forEach(topicKey => {\n        if (!currentTopicKeys.has(topicKey)) {\n          delete topicVocabPages.value[topicKey]\n          topicPagesChanged = true\n        }\n      })\n\n      Object.keys(allGroupedVocabulary.value).forEach(topicKey => {\n        const totalPages = getTopicVocabPagesCount(topicKey)\n        const current = topicVocabPages.value[topicKey] || 1\n        if (current > totalPages) {\n          topicVocabPages.value[topicKey] = totalPages\n          topicPagesChanged = true\n        }\n      })\n\n      if (expandedChanged) saveExpandedState()\n      if (topicPagesChanged) saveTopicVocabPagesState()\n    } catch (error) {\n      console.error('Error cleaning up old topic states:', error)\n    }\n  }\n\n  const cleanupOldVocabularyStates = () => {\n    try {\n      const currentVocabIds = new Set(props.vocabularyList.map(v => v.id))\n      const expandedKeys = Object.keys(expandedVocabExamples.value)\n      let expandedChanged = false\n      expandedKeys.forEach(vocabId => {\n        if (!currentVocabIds.has(vocabId)) {\n          delete expandedVocabExamples.value[vocabId]\n          expandedChanged = true\n        }\n      })\n      \n      const pagesKeys = Object.keys(examplePages.value)\n      let pagesChanged = false\n      pagesKeys.forEach(vocabId => {\n        if (!currentVocabIds.has(vocabId)) {\n          delete examplePages.value[vocabId]\n          pagesChanged = true\n        }\n      })\n      \n      if (expandedChanged) saveExpandedVocabExamplesState()\n      if (pagesChanged) saveExamplePagesState()\n    } catch (error) {\n      console.error('Error cleaning up old vocabulary states:', error)\n    }\n  }\n\n  // Watchers\n  watch(() => groupedVocabulary.value, () => {\n    initializeExpandedState()\n    initializeExpandedVocabExamplesState()\n    initializeTopicVocabPagesState()\n  })\n\n  watch(() => allGroupedVocabulary.value, () => cleanupOldTopicStates(), { deep: true })\n  watch(() => props.vocabularyList, () => cleanupOldVocabularyStates(), { deep: true })\n  watch(() => expandedGroups.value, () => saveExpandedState(), { deep: true })\n  watch(() => expandedVocabExamples.value, () => saveExpandedVocabExamplesState(), { deep: true })\n  watch(() => examplePages.value, () => saveExamplePagesState(), { deep: true })\n  watch(() => topicVocabPages.value, () => saveTopicVocabPagesState(), { deep: true })\n\n  // Lifecycle\n  onMounted(() => {\n    loadExpandedState()\n    loadExpandedVocabExamplesState()\n    loadExamplePagesState()\n    loadTopicVocabPagesState()\n    initializeExpandedState()\n    initializeExpandedVocabExamplesState()\n    initializeTopicVocabPagesState()\n    setTimeout(() => {\n      cleanupOldTopicStates()\n      cleanupOldVocabularyStates()\n    }, 100)\n  })\n\n  return {\n    // External dependencies\n    ExampleFormDialog,\n    getTopicName,\n    t,\n    \n    // State\n    expandedGroups,\n    expandedVocabExamples,\n    examplePages,\n    examplesPerPage,\n    currentPage,\n    topicsPerPage,\n    topicVocabPages,\n    topicVocabPerPage,\n\n    // Computed\n    allGroupedVocabulary,\n    groupedVocabulary,\n    paginationInfo,\n    visiblePages,\n\n    // Audio\n    playVocabularyAudio,\n    playExampleAudio,\n\n    // Data helpers\n    getVocabExamples,\n    getPaginatedVocabExamples,\n    getPaginatedTopicVocabs,\n    getTopicVocabPagesCount,\n    getTopicVocabPaginationInfo,\n    getVocabExamplePages,\n    getExamplePaginationInfo,\n    getVocabExampleCount,\n    getTotalExamplesForTopic,\n    getTopicVisiblePages,\n\n    // Navigation\n    goToTopicVocabPage,\n    previousTopicVocabPage,\n    nextTopicVocabPage,\n    goToExamplePage,\n    previousExamplePage,\n    nextExamplePage,\n    goToPage,\n    previousPage,\n    nextPage,\n\n    // Toggle\n    toggleGroup,\n    toggleVocabExamples,\n\n    // Styling\n    getTypeLabel,\n    getTypeColorClass,\n    getDifficultyLabel,\n    getDifficultyColorClass,\n\n    // Animation\n    enter,\n    afterEnter,\n    leave,\n    afterLeave,\n    vocabExamplesEnter,\n    vocabExamplesAfterEnter,\n    vocabExamplesLeave,\n    vocabExamplesAfterLeave,\n\n    // Actions\n    deleteExample\n  }\n}\n","<template>\n  <div class=\"space-y-4\">\n    <div\n      v-for=\"(group, topicKey) in groupedVocabulary\"\n      :key=\"topicKey\"\n      class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.002]\"\n    >\n      <!-- Topic Header with Accordion Toggle -->\n      <div \n        @click=\"toggleGroup(topicKey)\"\n        class=\"flex items-center justify-between p-4 cursor-pointer hover:bg-white/20 dark:hover:bg-[#0a0a0a]/20 rounded-t-2xl transition-all duration-300\"\n      >\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"animate-pulse-slow\">\n            <div class=\"w-2.5 h-2.5 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full\"></div>\n          </div>\n          <div>\n            <h3 class=\"text-lg font-bold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent\">\n              {{ getTopicName(topicKey) }}\n            </h3>\n            <p class=\"text-sm text-gray-600 dark:text-gray-300\">\n              {{ group.length }} {{ group.length === 1 ? t('vocabulary.word', 'word') : t('vocabulary.words', 'words') }}\n            </p>\n          </div>\n        </div>\n        \n        <div class=\"flex items-center space-x-2\">\n          <!-- Examples count -->\n          <span class=\"text-sm text-gray-500 dark:text-gray-400\">\n            {{ getTotalExamplesForTopic(group) }} {{ t('vocabulary.examples.examples', 'examples') }}\n          </span>\n          \n          <!-- Accordion toggle icon -->\n          <svg \n            class=\"w-5 h-5 text-gray-500 dark:text-gray-400 transition-transform duration-300\"\n            :class=\"{ 'rotate-180': expandedGroups[topicKey] }\"\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n      </div>\n\n      <!-- Vocabulary Content (Collapsible) -->\n      <transition\n        name=\"accordion\"\n        @enter=\"enter\"\n        @after-enter=\"afterEnter\"\n        @leave=\"leave\"\n        @after-leave=\"afterLeave\"\n      >\n        <div v-if=\"expandedGroups[topicKey]\" class=\"accordion-content border-t border-gray-200/50 dark:border-gray-700/50\">\n          <div class=\"p-4 space-y-4\">\n            <div\n              v-for=\"vocab in getPaginatedTopicVocabs(topicKey)\"\n              :key=\"vocab.id\"\n              class=\"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-4 hover:shadow-lg transition-all duration-300\"\n            >\n              <!-- Vocabulary Header -->\n              <div @click=\"toggleVocabExamples(vocab.id)\" class=\"flex items-center justify-between mb-3 pb-2 border-b border-gray-200/30 dark:border-gray-700/30 cursor-pointer\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"animate-pulse-slow\">\n                    <div class=\"w-2 h-2 bg-gradient-to-r from-green-400 to-blue-500 rounded-full\"></div>\n                  </div>\n                  <div>\n                    <div class=\"flex items-center space-x-2\">\n                      <h4 class=\"text-base font-bold text-gray-900 dark:text-white\">{{ vocab.word }}</h4>\n                      <button\n                        @click.stop=\"playVocabularyAudio(vocab.word)\"\n                        class=\"p-1 text-blue-600 hover:text-blue-700 hover:bg-blue-50/50 dark:text-blue-400 dark:hover:text-blue-300 dark:hover:bg-blue-900/20 rounded transition-all duration-300 group\"\n                        :title=\"t('vocabulary.examples.playPronunciation', 'Play pronunciation')\"\n                      >\n                        <svg class=\"w-3.5 h-3.5 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.464-9.536a9 9 0 010 12.728M9 9l3-3v6l-3-3H4a1 1 0 01-1-1V10a1 1 0 011-1h5z\" />\n                        </svg>\n                      </button>\n                      <!-- Examples Toggle Button (always visible, even if 0 examples) -->\n                      <button\n                        @click.stop=\"toggleVocabExamples(vocab.id)\"\n                        class=\"p-1 text-gray-600 hover:text-gray-700 hover:bg-gray-50/50 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:bg-[#0a0a0a]/20 rounded transition-all duration-300 group\"\n                        :title=\"expandedVocabExamples[vocab.id] ? t('vocabulary.examples.hideExamples', 'Hide examples') : t('vocabulary.examples.showExamples', 'Show examples')\"\n                      >\n                        <svg \n                          class=\"w-3.5 h-3.5 group-hover:scale-110 transition-all duration-200\" \n                          :class=\"{ 'rotate-180': expandedVocabExamples[vocab.id] }\"\n                          fill=\"none\" \n                          stroke=\"currentColor\" \n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\" />\n                        </svg>\n                      </button>\n                    </div>\n                    <p class=\"text-sm text-gray-600 dark:text-gray-300\">{{ vocab.meaning }}</p>\n                    <div class=\"flex items-center space-x-2 mt-1\">\n                      <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300\">\n                        {{ vocab.partOfSpeech }}\n                      </span>\n                      <span class=\"text-xs text-gray-500 dark:text-gray-400\">\n                        {{ getVocabExampleCount(vocab.id) }} {{ getVocabExampleCount(vocab.id) === 1 ? 'example' : 'examples' }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  @click.stop=\"$emit('add-example', vocab)\"\n                  class=\"px-3 py-1.5 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white rounded-lg font-medium transition-all duration-300 shadow-lg hover:shadow-xl flex items-center space-x-1.5\"\n                >\n                  <svg class=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\" />\n                  </svg>\n                  <span class=\"text-sm\">{{ t('vocabulary.examples.addExample', 'Add Example') }}</span>\n                </button>\n              </div>\n\n              <!-- Examples for this vocabulary (Collapsible) -->\n              <transition\n                name=\"vocab-examples-accordion\"\n                @enter=\"vocabExamplesEnter\"\n                @after-enter=\"vocabExamplesAfterEnter\"\n                @leave=\"vocabExamplesLeave\"\n                @after-leave=\"vocabExamplesAfterLeave\"\n              >\n                <div v-if=\"expandedVocabExamples[vocab.id]\" class=\"vocab-examples-accordion-content space-y-2\">\n                  <div v-if=\"getVocabExamples(vocab.id).length === 0\" class=\"text-center py-3 text-gray-500 dark:text-gray-400\">\n                    <svg class=\"mx-auto h-6 w-6 text-gray-400 mb-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                    </svg>\n                    <p class=\"text-xs\">{{ t('vocabulary.examples.noExamplesForWord', 'No examples yet') }}</p>\n                  </div>\n\n                  <div\n                    v-for=\"example in getPaginatedVocabExamples(vocab.id)\"\n                    :key=\"example.id\"\n                    class=\"bg-white/40 dark:bg-[#0a0a0a]/40 backdrop-blur-sm rounded-lg border border-white/20 dark:border-white/10 p-3 hover:shadow-md transition-all duration-300\"\n                  >\n                    <div class=\"flex items-start justify-between\">\n                      <div class=\"flex-1\">\n                        <div class=\"flex items-center space-x-2 mb-2\">\n                          <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium\"\n                                :class=\"getTypeColorClass(example.type)\">\n                            {{ getTypeLabel(example.type) }}\n                          </span>\n                          <span v-if=\"example.difficulty\" class=\"text-sm\" :class=\"getDifficultyColorClass(example.difficulty)\">\n                            {{ getDifficultyLabel(example.difficulty) }}\n                          </span>\n                        </div>\n                        \n                        <div class=\"mb-2\">\n                          <div class=\"flex items-center justify-between\">\n                            <p class=\"text-gray-900 dark:text-white font-medium text-sm\">{{ example.title }}</p>\n                            <button\n                              @click=\"playExampleAudio(example.content)\"\n                              class=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-50/50 dark:text-green-400 dark:hover:text-green-300 dark:hover:bg-green-900/20 rounded transition-all duration-300 group\"\n                              :title=\"t('vocabulary.examples.playExample', 'Play example')\"\n                            >\n                              <svg class=\"w-3 h-3 group-hover:scale-110 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m2.464-9.536a9 9 0 010 12.728M9 9l3-3v6l-3-3H4a1 1 0 01-1-1V10a1 1 0 011-1h5z\" />\n                              </svg>\n                            </button>\n                          </div>\n                          <p class=\"text-gray-700 dark:text-gray-300 mt-1 text-sm\">{{ example.content }}</p>\n                          <p v-if=\"example.translation\" class=\"text-gray-600 dark:text-gray-400 text-xs mt-1 italic\">\n                            {{ example.translation }}\n                          </p>\n                        </div>\n\n                        <div v-if=\"example.tags && example.tags.length > 0\" class=\"flex flex-wrap gap-1\">\n                          <span\n                            v-for=\"tag in example.tags\"\n                            :key=\"tag\"\n                            class=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300\"\n                          >\n                            {{ tag }}\n                          </span>\n                        </div>\n                      </div>\n                      \n                      <div class=\"flex items-center gap-1.5 ml-3\">\n                        <button\n                          @click=\"$emit('edit-example', example)\"\n                          class=\"px-2 py-1.5 text-blue-600 hover:text-blue-700 hover:bg-blue-50/50 dark:text-blue-400 dark:hover:text-blue-300 dark:hover:bg-blue-900/20 rounded-md transition-all duration-300 text-sm\"\n                        >\n                          {{ t('common.edit', 'Edit') }}\n                        </button>\n                        <button\n                          @click=\"deleteExample(example, emit)\"\n                          class=\"px-2 py-1.5 text-red-600 hover:text-red-700 hover:bg-red-50/50 dark:text-red-400 dark:hover:text-red-300 dark:hover:bg-red-900/20 rounded-md transition-all duration-300 text-sm\"\n                        >\n                          {{ t('common.delete', 'Delete') }}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <!-- Examples Pagination -->\n                  <div v-if=\"getVocabExamplePages(vocab.id) > 1\" class=\"border-t border-white/20 dark:border-white/10 px-3 py-2 mt-3\">\n                    <div class=\"flex items-center justify-between\">\n                      <!-- Mobile Pagination (Simple) -->\n                      <div class=\"flex sm:hidden items-center gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Previous') }}\n                        </button>\n                        <span class=\"text-xs text-slate-600 dark:text-slate-400\">\n                          {{ getExamplePaginationInfo(vocab.id).currentPage }} / {{ getExamplePaginationInfo(vocab.id).totalPages }}\n                        </span>\n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Desktop Pagination (Full) -->\n                      <div class=\"hidden sm:flex items-center gap-2\">\n                        <button\n                          @click=\"previousExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasPrevious\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.previous', 'Previous') }}\n                        </button>\n                        \n                        <div class=\"flex gap-1\">\n                          <button\n                            v-for=\"page in Math.min(getExamplePaginationInfo(vocab.id).totalPages, 5)\"\n                            :key=\"page\"\n                            @click=\"goToExamplePage(vocab.id, page)\"\n                            :class=\"[\n                              'px-3 py-1.5 text-sm rounded transition-colors',\n                              getExamplePaginationInfo(vocab.id).currentPage === page\n                                ? 'bg-blue-600 text-white'\n                                : 'bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'\n                            ]\"\n                          >\n                            {{ page }}\n                          </button>\n                        </div>\n                        \n                        <button\n                          @click=\"nextExamplePage(vocab.id)\"\n                          :disabled=\"!getExamplePaginationInfo(vocab.id).hasNext\"\n                          class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                        >\n                          {{ t('common.next', 'Next') }}\n                        </button>\n                      </div>\n                      \n                      <!-- Examples count info -->\n                      <div class=\"text-xs text-slate-500 dark:text-slate-400\">\n                        {{ t('vocabulary.examples.showingExamples', { start: getExamplePaginationInfo(vocab.id).start, end: getExamplePaginationInfo(vocab.id).end, total: getExamplePaginationInfo(vocab.id).totalExamples }, 'Showing {start} to {end} of {total} examples') }}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </transition>\n            </div>\n\n            <!-- Topic-level Vocabulary Pagination -->\n            <div v-if=\"getTopicVocabPagesCount(topicKey) > 1\" class=\"border-t border-white/20 dark:border-white/10 px-3 py-2\">\n              <div class=\"flex items-center justify-between\">\n                <!-- Mobile Pagination (Simple) -->\n                <div class=\"flex sm:hidden items-center gap-2\">\n                  <button\n                    @click=\"previousTopicVocabPage(topicKey)\"\n                    :disabled=\"!getTopicVocabPaginationInfo(topicKey).hasPrevious\"\n                    class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                  >\n                    {{ t('common.previous', 'Previous') }}\n                  </button>\n                  <span class=\"text-xs text-slate-600 dark:text-slate-400\">\n                    {{ getTopicVocabPaginationInfo(topicKey).currentPage }} / {{ getTopicVocabPaginationInfo(topicKey).totalPages }}\n                  </span>\n                  <button\n                    @click=\"nextTopicVocabPage(topicKey)\"\n                    :disabled=\"!getTopicVocabPaginationInfo(topicKey).hasNext\"\n                    class=\"px-2 py-1 text-xs bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                  >\n                    {{ t('common.next', 'Next') }}\n                  </button>\n                </div>\n\n                <!-- Desktop Pagination (Full) -->\n                <div class=\"hidden sm:flex items-center gap-2\">\n                  <button\n                    @click=\"previousTopicVocabPage(topicKey)\"\n                    :disabled=\"!getTopicVocabPaginationInfo(topicKey).hasPrevious\"\n                    class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                  >\n                    {{ t('common.previous', 'Previous') }}\n                  </button>\n\n                  <div class=\"flex gap-1\">\n                    <button\n                      v-for=\"page in getTopicVisiblePages(topicKey)\"\n                      :key=\"page\"\n                      @click=\"goToTopicVocabPage(topicKey, page)\"\n                      :class=\"[\n                        'px-3 py-1.5 text-sm rounded transition-colors',\n                        getTopicVocabPaginationInfo(topicKey).currentPage === page\n                          ? 'bg-blue-600 text-white'\n                          : 'bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-600'\n                      ]\"\n                    >\n                      {{ page }}\n                    </button>\n                  </div>\n\n                  <button\n                    @click=\"nextTopicVocabPage(topicKey)\"\n                    :disabled=\"!getTopicVocabPaginationInfo(topicKey).hasNext\"\n                    class=\"px-3 py-1.5 text-sm bg-slate-200 dark:bg-dark-bg-mute text-slate-700 dark:text-slate-300 rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-slate-300 dark:hover:bg-slate-600 transition-colors\"\n                  >\n                    {{ t('common.next', 'Next') }}\n                  </button>\n                </div>\n\n                <!-- Vocabulary count info -->\n                <div class=\"text-xs text-slate-500 dark:text-slate-400\">\n                  {{ t('vocabulary.examples.showingVocabulary', { start: getTopicVocabPaginationInfo(topicKey).start, end: getTopicVocabPaginationInfo(topicKey).end, total: getTopicVocabPaginationInfo(topicKey).totalVocab }, 'Showing {start} to {end} of {total} words') }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </transition>\n    </div>\n    \n    <!-- Pagination for Grouped View -->\n    <div v-if=\"paginationInfo.totalPages > 1\" class=\"mt-6 group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-4\">\n      <div class=\"flex items-center justify-between\">\n        <!-- Mobile pagination -->\n        <div class=\"flex-1 flex justify-between sm:hidden\">\n          <button \n            @click=\"previousPage\" \n            :disabled=\"!paginationInfo.hasPrevious\" \n            class=\"relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {{ t('common.previous', 'Previous') }}\n          </button>\n          <button \n            @click=\"nextPage\" \n            :disabled=\"!paginationInfo.hasNext\" \n            class=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-[#0a0a0a] hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {{ t('common.next', 'Next') }}\n          </button>\n        </div>\n        \n        <!-- Desktop pagination -->\n        <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n          <div>\n            <p class=\"text-sm text-gray-700 dark:text-gray-300\">\n              {{ t('vocabulary.examples.showingTopics', { \n                start: paginationInfo.startIndex, \n                end: paginationInfo.endIndex, \n                total: paginationInfo.totalTopics \n              }, `Showing ${paginationInfo.startIndex} to ${paginationInfo.endIndex} of ${paginationInfo.totalTopics} topics`) }}\n            </p>\n          </div>\n          <nav class=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n            <!-- Previous button -->\n            <button \n              @click=\"previousPage\" \n              :disabled=\"!paginationInfo.hasPrevious\" \n              class=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span class=\"sr-only\">{{ t('common.previous', 'Previous') }}</span>\n              <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n            \n            <!-- Page numbers -->\n            <button\n              v-for=\"page in visiblePages\"\n              :key=\"page\"\n              @click=\"goToPage(page)\"\n              :class=\"[\n                page === currentPage\n                  ? 'z-10 bg-blue-50 dark:bg-blue-900 border-blue-500 dark:border-blue-400 text-blue-600 dark:text-blue-300'\n                  : 'bg-white dark:bg-[#0a0a0a] border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600',\n                'relative inline-flex items-center px-4 py-2 border text-sm font-medium'\n              ]\"\n            >\n              {{ page }}\n            </button>\n            \n            <!-- Next button -->\n            <button \n              @click=\"nextPage\" \n              :disabled=\"!paginationInfo.hasNext\" \n              class=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-[#0a0a0a] text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <span class=\"sr-only\">{{ t('common.next', 'Next') }}</span>\n              <svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fill-rule=\"evenodd\" d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\" clip-rule=\"evenodd\"/>\n              </svg>\n            </button>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\" name=\"TopicGroupAccordion\">\nimport { useTopicGroupAccordion, type Example, type Vocabulary } from './composables/useTopicGroupAccordion'\n\ninterface Props {\n  vocabularyList: Vocabulary[]\n  examples: Example[]\n}\n\nconst props = defineProps<Props>()\n\nconst emit = defineEmits<{\n  'add-example': [vocab: Vocabulary]\n  'edit-example': [example: Example]\n  'delete-example': [example: Example]\n}>()\n\nconst {\n  ExampleFormDialog,\n  getTopicName,\n  t,\n  expandedGroups,\n  expandedVocabExamples,\n  examplePages,\n  examplesPerPage,\n  currentPage,\n  topicsPerPage,\n  topicVocabPages,\n  topicVocabPerPage,\n  allGroupedVocabulary,\n  groupedVocabulary,\n  paginationInfo,\n  visiblePages,\n  playVocabularyAudio,\n  playExampleAudio,\n  getVocabExamples,\n  getPaginatedVocabExamples,\n  getPaginatedTopicVocabs,\n  getTopicVocabPagesCount,\n  getTopicVocabPaginationInfo,\n  getVocabExamplePages,\n  getExamplePaginationInfo,\n  getVocabExampleCount,\n  getTotalExamplesForTopic,\n  getTopicVisiblePages,\n  goToTopicVocabPage,\n  previousTopicVocabPage,\n  nextTopicVocabPage,\n  goToExamplePage,\n  previousExamplePage,\n  nextExamplePage,\n  goToPage,\n  previousPage,\n  nextPage,\n  toggleGroup,\n  toggleVocabExamples,\n  getTypeLabel,\n  getTypeColorClass,\n  getDifficultyLabel,\n  getDifficultyColorClass,\n  enter,\n  afterEnter,\n  leave,\n  afterLeave,\n  vocabExamplesEnter,\n  vocabExamplesAfterEnter,\n  vocabExamplesLeave,\n  vocabExamplesAfterLeave,\n  deleteExample\n} = useTopicGroupAccordion(props)\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'TopicGroupAccordion'\n}\n</script>\n\n<style scoped>\n/* Accordion animation */\n.accordion-enter-active,\n.accordion-leave-active {\n  transition: height 0.3s ease-in-out;\n}\n\n.accordion-enter-from,\n.accordion-leave-to {\n  height: 0;\n  overflow: hidden;\n}\n\n.accordion-content {\n  overflow: hidden;\n}\n\n/* Vocabulary examples accordion animation */\n.vocab-examples-accordion-enter-active,\n.vocab-examples-accordion-leave-active {\n  transition: height 0.3s ease-in-out;\n}\n\n.vocab-examples-accordion-enter-from,\n.vocab-examples-accordion-leave-to {\n  height: 0;\n  overflow: hidden;\n}\n\n.vocab-examples-accordion-content {\n  overflow: hidden;\n}\n\n/* Smooth hover effects */\n.group:hover .animate-pulse-slow > div {\n  transform: scale(1.1);\n  transition: transform 0.3s ease;\n}\n</style>\n"],"file":"assets/TopicGroupAccordion-Q9unusfD.js"}