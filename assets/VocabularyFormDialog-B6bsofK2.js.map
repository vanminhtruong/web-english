{"version":3,"mappings":"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","names":["_createElementBlock","_createVNode","_Transition","modelValue","_openBlock","_createElementVNode","_toDisplayString","_unref","_normalizeClass","_vModelText","_createTextVNode","_vModelSelect","_createBlock","_Teleport","_Fragment","_renderList","_vModelCheckbox"],"ignoreList":[],"sources":["../../src/views/vocabulary/components/VocabularyFormDialog.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Backdrop -->\n    <Transition\n      enter-active-class=\"transition-all duration-500 ease-out\"\n      enter-from-class=\"opacity-0\"\n      enter-to-class=\"opacity-100\"\n      leave-active-class=\"transition-all duration-300 ease-in\"\n      leave-from-class=\"opacity-100\"\n      leave-to-class=\"opacity-0\"\n    >\n      <div \n        v-if=\"modelValue\" \n        class=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50 backdrop-blur-sm\"\n      >\n        <!-- Dialog Container -->\n        <Transition\n          enter-active-class=\"transition-all duration-500 ease-out\"\n          enter-from-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n          enter-to-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-active-class=\"transition-all duration-300 ease-in\"\n          leave-from-class=\"opacity-100 scale-100 translate-y-0 rotate-0\"\n          leave-to-class=\"opacity-0 scale-90 translate-y-8 rotate-1\"\n        >\n          <div class=\"w-full max-h-[90vh] flex flex-col max-w-full sm:max-w-lg md:max-w-2xl lg:max-w-4xl\">\n            <!-- Dialog Content -->\n            <div \n              class=\"bg-white dark:bg-[#0a0a0a] shadow-2xl rounded-xl border border-gray-200 dark:border-gray-700 flex flex-col h-full overflow-hidden transform\"\n              @click.stop\n            >\n              <!-- Header -->\n              <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a]\">\n                <div class=\"flex items-center justify-between\">\n                  <h2 class=\"text-lg sm:text-xl md:text-2xl font-semibold text-gray-900 dark:text-white flex items-center space-x-2\">\n                    <span class=\"w-2 h-2 bg-blue-500 rounded-full animate-pulse\"></span>\n                    <span>{{ isEditing ? t('vocabulary.editVocabulary', 'Edit Vocabulary') : t('vocabulary.addVocabulary', 'Add Vocabulary') }}</span>\n                  </h2>\n                  <button \n                    @click=\"closeDialog\"\n                    class=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-all duration-300 hover:scale-110 hover:rotate-90 p-1 rounded-full hover:bg-gray-100 dark:hover:bg-gray-800\"\n                  >\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <!-- Form -->\n              <div ref=\"modalContentRef\" class=\"px-6 py-4 flex-1 overflow-y-auto min-h-0\">\n                <form @submit.prevent=\"submitForm\" class=\"space-y-6\">\n                  <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <!-- Word -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 0.1s\">\n                      <label for=\"word\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-blue-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.word', 'Word') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <div class=\"relative\">\n                        <input\n                          id=\"word\"\n                          v-model=\"form.word\"\n                          type=\"text\"\n                          required\n                          :class=\"[\n                            'w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-300 hover:border-blue-400 dark:hover:border-blue-500 transform hover:scale-[1.02]',\n                            isKoreanLocale ? 'pr-12' : ''\n                          ]\"\n                          :placeholder=\"isKoreanLocale ? t('korean.wordPlaceholder', 'Enter Korean word or click + for help') : t('vocabulary.wordPlaceholder', 'Enter English word')\"\n                          @blur=\"validateWord\"\n                        />\n                        <!-- Korean Input Helper Button -->\n                        <button\n                          v-if=\"isKoreanLocale\"\n                          type=\"button\"\n                          @click=\"openKoreanInputHelper\"\n                          class=\"absolute right-2 top-1/2 -translate-y-1/2 w-7 h-7 bg-blue-500 hover:bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold transition-all duration-300 hover:scale-110 z-[5] shadow-lg keep-center-hover\"\n                          :title=\"t('korean.inputHelper.openHelper', 'Open Korean Input Helper')\"\n                          :aria-label=\"t('korean.inputHelper.openHelper', 'Open Korean Input Helper')\"\n                        >\n                          +\n                        </button>\n                      </div>\n                    </div>\n\n                    <!-- Pronunciation -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.2s\">\n                      <label for=\"pronunciation\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-green-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.pronunciation.label', 'Pronunciation') }}\n                      </label>\n                      <div class=\"relative\">\n                        <input\n                          id=\"pronunciation\"\n                          v-model=\"form.pronunciation\"\n                          type=\"text\"\n                          class=\"w-full pr-12 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-300 hover:border-green-400 dark:hover:border-green-500 transform hover:scale-[1.02]\"\n                          :placeholder=\"isKoreanLocale ? t('korean.pronunciationPlaceholder', 'an-nyeong-ha-se-yo') : '/ˈeksəmpl/'\"\n                          @blur=\"validatePronunciation\"\n                        />\n                        <button\n                          type=\"button\"\n                          @click=\"isKoreanLocale ? openKoreanPronunciationHelper() : openIpaPicker()\"\n                          class=\"absolute right-2 top-1/2 -translate-y-1/2 w-7 h-7 bg-green-500 hover:bg-green-600 text-white rounded-full flex items-center justify-center text-sm font-bold transition-all duration-300 hover:scale-110 z-[5] shadow-lg keep-center-hover\"\n                          :title=\"isKoreanLocale ? t('korean.pronunciationHelper.openHelper', 'Open Korean Pronunciation Helper') : t('vocabulary.pronunciation.openIpaPicker', 'Open IPA Picker')\"\n                          :aria-label=\"isKoreanLocale ? t('korean.pronunciationHelper.openHelper', 'Open Korean Pronunciation Helper') : t('vocabulary.pronunciation.openIpaPicker', 'Open IPA Picker')\"\n                        >\n                          +\n                        </button>\n                      </div>\n                    </div>\n\n                    <!-- Part of Speech -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.3s\">\n                      <label for=\"partOfSpeech\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-purple-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.wordType', 'Word Type') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <select\n                        id=\"partOfSpeech\"\n                        v-model=\"form.partOfSpeech\"\n                        required\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-300 hover:border-purple-400 dark:hover:border-purple-500 transform hover:scale-[1.02] cursor-pointer\"\n                        @change=\"validatePartOfSpeech\"\n                      >\n                        <option value=\"\">{{ t('vocabulary.selectWordType', 'Select word type') }}</option>\n                        <option value=\"noun\">{{ t('vocabulary.wordTypes.noun', 'Noun') }}</option>\n                        <option value=\"verb\">{{ t('vocabulary.wordTypes.verb', 'Verb') }}</option>\n                        <option value=\"adjective\">{{ t('vocabulary.wordTypes.adjective', 'Adjective') }}</option>\n                        <option value=\"adverb\">{{ t('vocabulary.wordTypes.adverb', 'Adverb') }}</option>\n                        <option value=\"preposition\">{{ t('vocabulary.wordTypes.preposition', 'Preposition') }}</option>\n                        <option value=\"conjunction\">{{ t('vocabulary.wordTypes.conjunction', 'Conjunction') }}</option>\n                        <option value=\"interjection\">{{ t('vocabulary.wordTypes.interjection', 'Interjection') }}</option>\n                      </select>\n                    </div>\n\n                    <!-- Category -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.4s\">\n                      <label for=\"category\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-orange-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.category', 'Category') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <div class=\"relative\">\n                        <!-- Add Category Button -->\n                        <button\n                          type=\"button\"\n                          @click=\"openTopicManager()\"\n                          class=\"absolute left-2 top-1/2 transform -translate-y-1/2 w-6 h-6 bg-blue-500 hover:bg-blue-600 text-white rounded-full flex items-center justify-center text-sm font-bold transition-all duration-300 hover:scale-110 hover:rotate-90 z-[10000] shadow-lg keep-center-hover-rotate\"\n                          :title=\"t('vocabulary.addCategory', 'Add Category')\"\n                        >\n                          +\n                        </button>\n                        \n                        <!-- Searchable Dropdown -->\n                        <div class=\"relative\">\n                          <input\n                            id=\"category\"\n                            type=\"text\"\n                            required\n                            readonly\n                            @click=\"toggleCategoryDropdown\"\n                            class=\"w-full pl-10 pr-10 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-300 hover:border-orange-400 dark:hover:border-orange-500 transform hover:scale-[1.02] cursor-pointer\"\n                            :placeholder=\"t('vocabulary.selectCategory', 'Select category')\"\n                            :value=\"form.category ? getTopicDisplayName(form.category) : ''\"\n                          />\n                          \n                          <!-- Dropdown Arrow -->\n                          <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                            <svg class=\"w-4 h-4 text-gray-400 transition-transform duration-200\" :class=\"{ 'rotate-180': showCategoryDropdown }\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                          </div>\n                          \n                          <!-- Dropdown Menu - Using Teleport with Simple Positioning -->\n                          <Teleport to=\"body\">\n                            <Transition\n                              enter-active-class=\"transition duration-200 ease-out\"\n                              enter-from-class=\"transform scale-95 opacity-0\"\n                              enter-to-class=\"transform scale-100 opacity-100\"\n                              leave-active-class=\"transition duration-75 ease-in\"\n                              leave-from-class=\"transform scale-100 opacity-100\"\n                              leave-to-class=\"transform scale-95 opacity-0\"\n                            >\n                              <div\n                                v-if=\"showCategoryDropdown\"\n                                ref=\"dropdownElement\"\n                                :style=\"simpleDropdownStyle\"\n                                class=\"fixed z-[9999] bg-white dark:bg-[#0a0a0a] border border-gray-300 dark:border-gray-600 rounded-lg shadow-xl max-h-60 overflow-hidden\"\n                              >\n                              <!-- Search Input -->\n                              <div class=\"p-2 border-b border-gray-200 dark:border-gray-600\" @click.stop>\n                                <input\n                                  ref=\"categorySearchInput\"\n                                  v-model=\"categorySearchQuery\"\n                                  type=\"text\"\n                                  class=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                                  :placeholder=\"t('vocabulary.searchCategory', 'Search categories...')\"\n                                  @keydown.enter.prevent\n                                  @keydown.escape=\"closeCategoryDropdown\"\n                                  @click.stop\n                                  @focus.stop\n                                />\n                              </div>\n                              \n                              <!-- Options List -->\n                              <div class=\"max-h-40 overflow-y-auto\">\n                                <div\n                                  v-if=\"filteredCategoryKeys.length === 0\"\n                                  class=\"px-3 py-2 text-sm text-gray-500 dark:text-gray-400\"\n                                >\n                                  {{ t('vocabulary.noCategories', 'No categories found') }}\n                                </div>\n                                <div\n                                  v-for=\"key in filteredCategoryKeys\"\n                                  :key=\"key\"\n                                  class=\"px-3 py-2 text-sm cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-custom transition-colors duration-150\"\n                                  :class=\"{ 'bg-orange-50 dark:bg-orange-900/20 text-orange-700 dark:text-orange-300': form.category === key }\"\n                                  @click=\"selectCategory(key)\"\n                                >\n                                  {{ getTopicDisplayName(key) }}\n                                </div>\n                              </div>\n                              </div>\n                            </Transition>\n                          </Teleport>\n                        </div>\n                      </div>\n                    </div>\n\n                    <!-- Level -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.5s\">\n                      <label for=\"level\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-red-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.level', 'Level') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <select\n                        id=\"level\"\n                        v-model=\"form.level\"\n                        required\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-all duration-300 hover:border-red-400 dark:hover:border-red-500 transform hover:scale-[1.02] cursor-pointer\"\n                        @change=\"validateLevel\"\n                      >\n                        <option value=\"\">{{ t('vocabulary.selectLevel', 'Select level') }}</option>\n                        <option value=\"beginner\">{{ t('vocabulary.levels.beginner', 'Beginner') }}</option>\n                        <option value=\"intermediate\">{{ t('vocabulary.levels.intermediate', 'Intermediate') }}</option>\n                        <option value=\"advanced\">{{ t('vocabulary.levels.advanced', 'Advanced') }}</option>\n                      </select>\n                    </div>\n\n                    <!-- Meaning -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 0.6s\">\n                      <label for=\"meaning\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-indigo-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.meaning', 'Meaning') }} <span class=\"text-red-500 ml-1\">*</span>\n                      </label>\n                      <textarea\n                        id=\"meaning\"\n                        v-model=\"form.meaning\"\n                        required\n                        rows=\"3\"\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent resize-none transition-all duration-300 hover:border-indigo-400 dark:hover:border-indigo-500 transform hover:scale-[1.02]\"\n                        :placeholder=\"t('vocabulary.meaningPlaceholder', 'Enter meaning in Vietnamese')\"\n                        @blur=\"validateMeaning\"\n                      ></textarea>\n                    </div>\n\n                    <!-- Example -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 0.7s\">\n                      <label for=\"example\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-teal-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.example', 'Example') }}\n                      </label>\n                      <textarea\n                        id=\"example\"\n                        v-model=\"form.example\"\n                        rows=\"2\"\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-teal-500 focus:border-transparent transition-all duration-300 hover:border-teal-400 dark:hover:border-teal-500 transform hover:scale-[1.02]\"\n                        :placeholder=\"t('vocabulary.examplePlaceholder', 'Enter example sentence')\"\n                        @blur=\"validateExample\"\n                      ></textarea>\n                    </div>\n\n                    <!-- Synonyms -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.8s\">\n                      <label for=\"synonyms\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-pink-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.synonyms', 'Synonyms') }}\n                      </label>\n                      <input\n                        id=\"synonyms\"\n                        v-model=\"form.synonyms\"\n                        type=\"text\"\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-pink-500 focus:border-transparent transition-all duration-300 hover:border-pink-400 dark:hover:border-pink-500 transform hover:scale-[1.02]\"\n                        :placeholder=\"t('vocabulary.separateByComma', 'Separate by comma')\"\n                        @blur=\"validateSynonyms\"\n                      />\n                    </div>\n\n                    <!-- Antonyms -->\n                    <div class=\"animate-fade-in-up\" style=\"animation-delay: 0.9s\">\n                      <label for=\"antonyms\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-yellow-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.antonyms', 'Antonyms') }}\n                      </label>\n                      <input\n                        id=\"antonyms\"\n                        v-model=\"form.antonyms\"\n                        type=\"text\"\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent transition-all duration-300 hover:border-yellow-400 dark:hover:border-yellow-500 transform hover:scale-[1.02]\"\n                        :placeholder=\"t('vocabulary.separateByComma', 'Separate by comma')\"\n                        @blur=\"validateAntonyms\"\n                      />\n                    </div>\n\n                    <!-- Image URL -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 1.0s\">\n                      <label for=\"imageUrl\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 flex items-center\">\n                        <span class=\"w-1 h-4 bg-cyan-500 rounded mr-2\"></span>\n                        {{ t('vocabulary.imageUrl', 'Image URL') }}\n                      </label>\n                      <textarea\n                        id=\"imageUrl\"\n                        v-model=\"form.image\"\n                        rows=\"3\"\n                        class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-[#0a0a0a] text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent resize-none transition-all duration-300 hover:border-cyan-400 dark:hover:border-cyan-500 transform hover:scale-[1.02]\"\n                        :placeholder=\"t('vocabulary.imageUrlPlaceholder', 'Enter image URL (optional)')\"\n\n                      ></textarea>\n                    </div>\n\n                    <!-- Image Upload -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 1.1s\">\n                      <ImageUpload v-model=\"form.image\" />\n                    </div>\n\n                    <!-- Favorite -->\n                    <div class=\"md:col-span-2 animate-fade-in-up\" style=\"animation-delay: 1.2s\">\n                      <div class=\"flex items-center p-3 bg-gray-50 dark:bg-[#0a0a0a] rounded-lg border border-gray-200 dark:border-gray-700 hover:bg-gray-100 dark:hover:bg-gray-800 transition-all duration-300\">\n                        <input\n                          id=\"favorite\"\n                          v-model=\"form.favorite\"\n                          type=\"checkbox\"\n                          class=\"h-5 w-5 text-blue-600 focus:ring-blue-500 border-gray-300 dark:border-gray-600 rounded transition-all duration-300 hover:scale-110 cursor-pointer\"\n                        />\n                        <label for=\"favorite\" class=\"ml-3 block text-sm text-gray-700 dark:text-white cursor-pointer hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300\">\n                          {{ t('vocabulary.isFavorite', 'Mark as favorite') }}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                </form>\n              </div>\n\n              <!-- Footer Actions -->\n              <div class=\"px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex-shrink-0 bg-gradient-to-r from-gray-50 to-blue-50 dark:from-[#0a0a0a] dark:to-[#0a0a0a]\">\n                <div class=\"flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    @click=\"closeDialog\"\n                    class=\"px-6 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-lg transition-all duration-300 hover:scale-105 hover:shadow-lg font-medium\"\n                  >\n                    {{ t('common.cancel', 'Cancel') }}\n                  </button>\n\n                  <button\n                    @click=\"submitForm\"\n                    :disabled=\"isSubmitting\"\n                    class=\"px-6 py-2 bg-gradient-to-r from-blue-500 to-blue-600 text-white rounded-lg hover:from-blue-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50 flex items-center space-x-2 transition-all duration-300 hover:scale-105 hover:shadow-lg font-medium disabled:cursor-not-allowed\"\n                  >\n                    <svg v-if=\"isSubmitting\" class=\"animate-spin h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                      <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    <span>{{ isSubmitting ? t('common.saving', 'Saving...') : (isEditing ? t('common.update', 'Update') : t('vocabulary.saveVocabulary', 'Save Vocabulary')) }}</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n         </Transition>\n  </div>\n     </Transition>\n\n  <!-- ... -->\n\n  <!-- IPA Picker Modal -->\n  <IpaPickerModal\n    v-model=\"showIpaPicker\"\n    :initial-value=\"form.pronunciation\"\n    @apply=\"onIpaApply\"\n  />\n\n  <!-- Topic Manager Modal (no click-outside close) -->\n  <TopicManager\n    v-if=\"showTopicManager\"\n    v-model=\"showTopicManager\"\n    :vocabulary-usage=\"categoryUsage\"\n    @topic-added=\"onTopicAdded\"\n    @topic-updated=\"onTopicUpdated\"\n    @topic-deleted=\"onTopicDeleted\"\n  />\n\n  <!-- Korean Input Helper Modal (no click-outside close) -->\n  <KoreanInputHelper\n    v-if=\"showKoreanInputHelper\"\n    v-model=\"showKoreanInputHelper\"\n    :initial-value=\"form.word\"\n    @input-confirmed=\"onKoreanInputConfirmed\"\n  />\n\n  <!-- Korean Pronunciation Helper Modal (no click-outside close) -->\n  <KoreanPronunciationHelper\n    v-if=\"showKoreanPronunciationHelper\"\n    v-model=\"showKoreanPronunciationHelper\"\n    :initial-value=\"form.pronunciation\"\n    @pronunciation-confirmed=\"onKoreanPronunciationConfirmed\"\n  />\n</div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, reactive, computed, watch, withDefaults, defineProps, defineEmits, onMounted, onUnmounted, defineAsyncComponent, nextTick, Teleport } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useModalStore } from '../../../stores/modalStore'\nimport { useToast } from 'vue-toastification'\nimport { useVocabularyStore, type Vocabulary } from '../../../composables/useVocabularyStore'\nimport { getTopicName } from '../../../utils/topicUtils'\n\n// Import components with defineAsyncComponent to avoid \"has no default export\" error\nconst ImageUpload = defineAsyncComponent(() => import('./ImageUpload.vue'))\nconst TopicManager = defineAsyncComponent(() => import('./TopicManager.vue'))\nconst IpaPickerModal = defineAsyncComponent(() => import('./IpaPickerModal.vue'))\nconst KoreanInputHelper = defineAsyncComponent(() => import('./KoreanInputHelper.vue'))\nconst KoreanPronunciationHelper = defineAsyncComponent(() => import('./KoreanPronunciationHelper.vue'))\n\ninterface Props {\n  modelValue: boolean\n  vocabulary?: Vocabulary | null\n  targetDate?: string | null\n}\n\ninterface Emits {\n  'update:modelValue': [value: boolean]\n  'vocabulary-saved': [data: { category: string }]\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  vocabulary: null,\n  targetDate: null\n})\n\nconst emit = defineEmits<Emits>()\nconst { t, locale } = useI18n()\nconst toast = useToast()\n\n\n\nconst vocabularyStore = useVocabularyStore()\n\n// Data\nconst isSubmitting = ref(false)\nconst refreshTrigger = ref(0) // Trigger to force re-computation\nconst showTopicManager = ref(false) // State for TopicManager modal\nconst showKoreanInputHelper = ref(false) // State for Korean Input Helper modal\nconst showKoreanPronunciationHelper = ref(false) // State for Korean Pronunciation Helper modal\n\n// Category dropdown search functionality\nconst categorySearchQuery = ref('')\nconst showCategoryDropdown = ref(false)\nconst categorySearchInput = ref<HTMLInputElement | null>(null)\nconst dropdownElement = ref<HTMLElement | null>(null)\nconst modalContentRef = ref<HTMLElement | null>(null)\n\n// Search frequency tracking\nconst SEARCH_FREQUENCY_KEY = 'vocabulary-category-search-frequency'\nconst categorySearchFrequency = ref<Record<string, number>>({})\nconst searchFrequencyTimeout = ref<number | null>(null)\n\n// Load search frequency from localStorage\nconst loadSearchFrequency = () => {\n  try {\n    const stored = localStorage.getItem(SEARCH_FREQUENCY_KEY)\n    if (stored) {\n      categorySearchFrequency.value = JSON.parse(stored)\n    }\n  } catch (error) {\n    console.warn('Failed to load search frequency:', error)\n    categorySearchFrequency.value = {}\n  }\n}\n\n// Save search frequency to localStorage\nconst saveSearchFrequency = () => {\n  try {\n    localStorage.setItem(SEARCH_FREQUENCY_KEY, JSON.stringify(categorySearchFrequency.value))\n  } catch (error) {\n    console.warn('Failed to save search frequency:', error)\n  }\n}\n\n// Update search frequency for a category\nconst updateSearchFrequency = (categoryKey: string) => {\n  if (!categoryKey) return\n  \n  categorySearchFrequency.value[categoryKey] = (categorySearchFrequency.value[categoryKey] || 0) + 1\n  saveSearchFrequency()\n  console.log('Updated search frequency for:', categoryKey, 'new count:', categorySearchFrequency.value[categoryKey])\n}\n\n// Define category keys - use computed to make it reactive\nconst categoryKeys = computed(() => {\n  // Use refreshTrigger to force re-computation when topics change\n  refreshTrigger.value // This creates a dependency\n  // Get categories from vocabulary store (includes custom topics)\n  const categories = vocabularyStore.getCategories.value\n  console.log('Category keys computed with refreshTrigger:', refreshTrigger.value, 'Categories:', categories)\n  return categories\n})\n\nconst form = reactive({\n  word: '',\n  pronunciation: '',\n  partOfSpeech: '',\n  meaning: '',\n  example: '',\n  category: '',\n  level: '',\n  synonyms: '',\n  antonyms: '',\n  notes: '',\n  favorite: false,\n  image: null as string | null\n})\n\n// IPA Picker state\nconst showIpaPicker = ref(false)\n\n// IPA Picker handlers\nconst openIpaPicker = () => {\n  showIpaPicker.value = true\n}\n\nconst onIpaApply = (value: string) => {\n  form.pronunciation = value\n}\n\n// Korean Input Helper handlers\nconst openKoreanInputHelper = () => {\n  showKoreanInputHelper.value = true\n}\n\nconst onKoreanInputConfirmed = (value: string) => {\n  form.word = value\n}\n\n// Korean Pronunciation Helper handlers\nconst openKoreanPronunciationHelper = () => {\n  showKoreanPronunciationHelper.value = true\n}\n\nconst onKoreanPronunciationConfirmed = (value: string) => {\n  form.pronunciation = value\n}\n\n// Computed\nconst isEditing = computed(() => !!props.vocabulary)\nconst categoryUsage = computed(() => vocabularyStore.getCategoryUsage.value)\n\n// Check if current locale is Korean to show Korean input helper\nconst isKoreanLocale = computed(() => locale.value === 'ko')\n\n// Filtered categories based on search query with frequency-based sorting\nconst filteredCategoryKeys = computed(() => {\n  let filtered: string[]\n  \n  if (!categorySearchQuery.value.trim()) {\n    // No search query - show all categories sorted by frequency\n    filtered = [...categoryKeys.value]\n  } else {\n    // Filter by search query\n    const query = categorySearchQuery.value.toLowerCase()\n    filtered = categoryKeys.value.filter(key => \n      getTopicDisplayName(key).toLowerCase().includes(query)\n    )\n    \n    // Update search frequency for each matching category when user is actively searching\n    if (query.length >= 2) { // Only track when user types at least 2 characters\n      filtered.forEach(key => {\n        // Only increment if the category name closely matches the search\n        if (getTopicDisplayName(key).toLowerCase().includes(query)) {\n          // Debounce the frequency update to avoid too many increments\n          if (searchFrequencyTimeout.value) {\n            clearTimeout(searchFrequencyTimeout.value)\n          }\n          searchFrequencyTimeout.value = setTimeout(() => {\n            updateSearchFrequency(key)\n          }, 1000) // Update after 1 second of no typing\n        }\n      })\n    }\n  }\n  \n  // Sort by frequency (most searched first), then alphabetically\n  return filtered.sort((a, b) => {\n    const freqA = categorySearchFrequency.value[a] || 0\n    const freqB = categorySearchFrequency.value[b] || 0\n    \n    if (freqA !== freqB) {\n      return freqB - freqA // Higher frequency first\n    }\n    \n    // If same frequency, sort alphabetically\n    return getTopicDisplayName(a).localeCompare(getTopicDisplayName(b))\n  })\n})\n\n// Simple dropdown positioning style\nconst simpleDropdownStyle = computed(() => {\n  if (!showCategoryDropdown.value) {\n    return { display: 'none' }\n  }\n  \n  const inputElement = document.getElementById('category')\n  if (!inputElement) {\n    // Center fallback\n    return {\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '400px',\n      maxWidth: '90vw'\n    }\n  }\n  \n  const rect = inputElement.getBoundingClientRect()\n  return {\n    top: (rect.bottom + 4) + 'px',\n    left: rect.left + 'px',\n    width: Math.max(rect.width, 300) + 'px',\n    maxWidth: '500px'\n  }\n})\n\n// Field-specific validation functions\nconst validateWord = (): boolean => {\n  if (!form.word.trim()) {\n    toast.error(t('vocabulary.validation.wordRequired', 'Word is required'))\n    return false\n  } else if (form.word.trim().length > 100) {\n    toast.error(t('vocabulary.validation.wordTooLong', 'Word is too long'))\n    return false\n  }\n  return true\n}\n\nconst validateMeaning = (): boolean => {\n  if (!form.meaning.trim()) {\n    toast.error(t('vocabulary.validation.meaningRequired', 'Meaning is required'))\n    return false\n  } else if (form.meaning.trim().length > 500) {\n    toast.error(t('vocabulary.validation.meaningTooLong', 'Meaning is too long'))\n    return false\n  }\n  return true\n}\n\nconst validatePartOfSpeech = (): boolean => {\n  if (!form.partOfSpeech) {\n    toast.error(t('vocabulary.validation.partOfSpeechRequired', 'Part of speech is required'))\n    return false\n  }\n  return true\n}\n\nconst validateCategory = (): boolean => {\n  if (!form.category) {\n    toast.error(t('vocabulary.validation.categoryRequired', 'Category is required'))\n    return false\n  }\n  return true\n}\n\nconst validateLevel = (): boolean => {\n  if (!form.level) {\n    toast.error(t('vocabulary.validation.levelRequired', 'Level is required'))\n    return false\n  }\n  return true\n}\n\nconst validateExample = (): boolean => {\n  if (form.example.length > 500) {\n    toast.error(t('vocabulary.validation.exampleTooLong', 'Example is too long'))\n    return false\n  }\n  return true\n}\n\nconst validateNotes = (): boolean => {\n  if (form.notes.length > 500) {\n    toast.error(t('vocabulary.validation.notesTooLong', 'Notes are too long'))\n    return false\n  }\n  return true\n}\n\nconst validatePronunciation = (): boolean => {\n  if (form.pronunciation.length > 100) {\n    toast.error(t('vocabulary.validation.pronunciationTooLong', 'Pronunciation is too long'))\n    return false\n  }\n  return true\n}\n\nconst validateSynonyms = (): boolean => {\n  if (form.synonyms && form.synonyms.trim()) {\n    const synonyms = form.synonyms.split(',').map(s => s.trim()).filter(s => s)\n    if (synonyms.length === 0) {\n      toast.error(t('vocabulary.validation.synonymsInvalid', 'Synonyms are invalid'))\n      return false\n    }\n  }\n  return true\n}\n\nconst validateAntonyms = (): boolean => {\n  if (form.antonyms && form.antonyms.trim()) {\n    const antonyms = form.antonyms.split(',').map(s => s.trim()).filter(s => s)\n    if (antonyms.length === 0) {\n      toast.error(t('vocabulary.validation.antonymsInvalid', 'Antonyms are invalid'))\n      return false\n    }\n  }\n  return true\n}\n\n// Overall form validation (silent - no toasts, just returns boolean)\nconst validateForm = (): boolean => {\n  const isWordValid = !!(form.word.trim() && form.word.trim().length <= 100)\n  const isMeaningValid = !!(form.meaning.trim() && form.meaning.trim().length <= 500)\n  const isPartOfSpeechValid = !!form.partOfSpeech\n  const isCategoryValid = !!form.category\n  const isLevelValid = !!form.level\n  const isExampleValid = form.example.length <= 500\n  const isNotesValid = form.notes.length <= 500\n  const isPronunciationValid = form.pronunciation.length <= 100\n  \n  let isSynonymsValid = true\n  if (form.synonyms && form.synonyms.trim()) {\n    const synonyms = form.synonyms.split(',').map(s => s.trim()).filter(s => s)\n    isSynonymsValid = synonyms.length > 0\n  }\n  \n  let isAntonymsValid = true\n  if (form.antonyms && form.antonyms.trim()) {\n    const antonyms = form.antonyms.split(',').map(s => s.trim()).filter(s => s)\n    isAntonymsValid = antonyms.length > 0\n  }\n\n  return isWordValid && isMeaningValid && isPartOfSpeechValid && isCategoryValid && \n         isLevelValid && isExampleValid && isNotesValid && isPronunciationValid && \n         isSynonymsValid && isAntonymsValid\n}\n\n// Methods\nconst resetForm = () => {\n  form.word = ''\n  form.pronunciation = ''\n  form.partOfSpeech = ''\n  form.meaning = ''\n  form.example = ''\n  form.category = ''\n  form.level = ''\n  form.synonyms = ''\n  form.antonyms = ''\n  form.notes = ''\n  form.favorite = false\n}\n\n// No complex watchers needed with inline dropdown\n\n// Scroll handler to close dropdown when scrolling\nconst handleScroll = () => {\n  if (showCategoryDropdown.value) {\n    showCategoryDropdown.value = false\n    categorySearchQuery.value = ''\n    console.log('Scroll detected, dropdown closed')\n  }\n}\n\n// Load search frequency on component mount\nonMounted(() => {\n  loadSearchFrequency()\n  console.log('Loaded category search frequency:', categorySearchFrequency.value)\n  \n  // Add scroll listener to modal content using ref\n  nextTick(() => {\n    if (modalContentRef.value) {\n      modalContentRef.value.addEventListener('scroll', handleScroll, { passive: true })\n      console.log('Added scroll listener to modal content')\n    }\n  })\n})\n\n// Cleanup scroll listener\nonUnmounted(() => {\n  if (modalContentRef.value) {\n    // Remove multiple possible listeners\n    modalContentRef.value.removeEventListener('scroll', handleScroll)\n    modalContentRef.value.removeEventListener('scroll', handleScroll)\n    console.log('Removed scroll listeners from modal content')\n  }\n})\n\n// Watch modal close to close dropdown and setup scroll listener\nwatch(() => props.modelValue, (isOpen) => {\n  if (!isOpen) {\n    // Close dropdown when modal closes\n    showCategoryDropdown.value = false\n    categorySearchQuery.value = ''\n    \n    // Enable body scroll when modal closes\n    document.body.style.overflow = ''\n    console.log('Modal closed, dropdown closed, body scroll enabled')\n  } else {\n    // Disable body scroll when modal opens\n    document.body.style.overflow = 'hidden'\n    \n    // Add scroll listener when modal opens\n    nextTick(() => {\n      setTimeout(() => {\n        if (modalContentRef.value) {\n          modalContentRef.value.addEventListener('scroll', handleScroll, { passive: true })\n          console.log('Added scroll listener to modal content on modal open')\n        }\n      }, 100) // Small delay to ensure modal content is ready\n    })\n    \n    console.log('Modal opened, body scroll disabled')\n  }\n})\n\n// Watch for editing vocabulary changes\nwatch(\n  () => props.vocabulary,\n  (newVocabulary) => {\n    if (newVocabulary) {\n      // Populate form with existing data\n      form.word = newVocabulary.word\n      form.pronunciation = newVocabulary.pronunciation || ''\n      form.partOfSpeech = newVocabulary.partOfSpeech\n      form.meaning = newVocabulary.meaning\n      form.example = newVocabulary.example || ''\n      form.category = newVocabulary.category\n      form.level = newVocabulary.level\n      form.synonyms = newVocabulary.synonyms?.join(', ') || ''\n      form.antonyms = newVocabulary.antonyms?.join(', ') || ''\n      form.notes = newVocabulary.notes || ''\n      form.favorite = !!newVocabulary.favorite\n      form.image = newVocabulary.image || null\n    } else {\n      // Reset form for new vocabulary\n      resetForm()\n    }\n  },\n  { immediate: true }\n)\n\n// Handle keyboard events\nconst handleKeydown = (event: KeyboardEvent) => {\n  if (event.key === 'Escape') {\n    closeDialog()\n  }\n}\n\n// Watch for dialog open/close\nwatch(() => props.modelValue, (newValue) => {\n  if (newValue) {\n    // Dialog opened\n    window.dispatchEvent(new CustomEvent('vocabulary-edit-word'))\n    // Reset form when dialog opens\n    if (!props.vocabulary) {\n      resetForm()\n    }\n    document.body.style.overflow = 'hidden'\n    document.addEventListener('keydown', handleKeydown)\n  } else {\n    // Dialog closed\n    document.body.style.overflow = ''\n    document.removeEventListener('keydown', handleKeydown)\n  }\n})\n\n// Function to get topic display name\nconst getTopicDisplayName = (category: string): string => {\n  return getTopicName(category, t, locale)\n}\n\n// Category dropdown functions\nconst toggleCategoryDropdown = () => {\n  console.log('Toggle category dropdown clicked')\n  showCategoryDropdown.value = !showCategoryDropdown.value\n  \n  if (showCategoryDropdown.value) {\n    categorySearchQuery.value = ''\n    nextTick(() => {\n      categorySearchInput.value?.focus()\n    })\n  }\n}\n\nconst closeCategoryDropdown = () => {\n  showCategoryDropdown.value = false\n  categorySearchQuery.value = ''\n}\n\n// Open Topic Manager while ensuring the category dropdown is closed to avoid overlap\nconst openTopicManager = () => {\n  if (showCategoryDropdown.value) {\n    closeCategoryDropdown()\n  }\n  showTopicManager.value = true\n}\n\nconst selectCategory = (key: string) => {\n  form.category = key\n  showCategoryDropdown.value = false\n  categorySearchQuery.value = ''\n  \n  // Update search frequency when user selects a category\n  updateSearchFrequency(key)\n  console.log('Category selected:', getTopicDisplayName(key))\n}\n\n// Topic event handlers\nconst onTopicAdded = (newTopic: any) => {\n  console.log('Topic added, refreshing categories:', newTopic.key)\n  \n  // Add small delay to ensure localStorage has been updated by TopicManager\n  setTimeout(() => {\n    // Refresh custom topics from store first\n    vocabularyStore.refreshCustomTopics()\n    \n    // Then force re-computation of categories\n    refreshTrigger.value++\n    \n    // Update form category to the new topic (auto-select it)\n    form.category = newTopic.key\n    \n    console.log('Categories refreshed, new topic selected:', newTopic.key)\n  }, 150) // 150ms delay to ensure data consistency\n}\n\nconst onTopicUpdated = () => {\n  // Force re-computation of categories\n  refreshTrigger.value++\n  // Refresh custom topics from store\n  vocabularyStore.refreshCustomTopics()\n  console.log('Topic updated, refreshing categories')\n}\n\nconst onTopicDeleted = (deletedTopicId: string) => {\n  // Force re-computation of categories\n  refreshTrigger.value++\n  // Refresh custom topics from store\n  vocabularyStore.refreshCustomTopics()\n  // If the current category was deleted, reset it\n  if (form.category === deletedTopicId) {\n    form.category = ''\n  }\n  console.log('Topic deleted, refreshing categories:', deletedTopicId)\n}\n\n// Listen for topics-updated events to refresh categories\nconst handleTopicsUpdated = () => {\n  // Add a small delay to ensure localStorage has been updated\n  setTimeout(() => {\n    // Force re-computation of categories by incrementing trigger\n    refreshTrigger.value++\n    // Refresh custom topics from store\n    vocabularyStore.refreshCustomTopics()\n    console.log('Topics updated, refreshing categories in form dialog')\n  }, 100)\n}\n\n// Click outside handler for dropdown\nconst handleClickOutside = (event: Event) => {\n  if (!showCategoryDropdown.value) return\n  \n  const target = event.target as HTMLElement\n  const dropdownContainer = target.closest('.relative')\n  const dropdownMenu = target.closest('[class*=\"z-[99999]\"]')\n  \n  // Don't close if clicking inside the dropdown container or menu\n  if (dropdownContainer || dropdownMenu) {\n    return\n  }\n  \n  closeCategoryDropdown()\n}\n\n// Lifecycle hooks\nonMounted(() => {\n  // Listen for custom topics updates\n  window.addEventListener('topics-updated', handleTopicsUpdated)\n  // Listen for clicks outside dropdown\n  document.addEventListener('click', handleClickOutside)\n})\n\n// Cleanup on unmount\nonUnmounted(() => {\n  document.body.style.overflow = ''\n  document.body.classList.remove('modal-open')\n  document.removeEventListener('keydown', handleKeydown)\n  window.removeEventListener('topics-updated', handleTopicsUpdated)\n  document.removeEventListener('click', handleClickOutside)\n})\n\nconst closeDialog = () => {\n  // Dispatch modal closed event before emitting update\n  window.dispatchEvent(new CustomEvent('vocabulary-modal-closed'))\n  emit('update:modelValue', false)\n}\n\nconst submitForm = async () => {\n  if (isSubmitting.value) return\n  \n  // Validate form before submission - show toast for first invalid field\n  if (!validateWord()) return\n  if (!validatePronunciation()) return\n  if (!validatePartOfSpeech()) return\n  if (!validateCategory()) return\n  if (!validateLevel()) return\n  if (!validateMeaning()) return\n  if (!validateExample()) return\n  if (!validateSynonyms()) return\n  if (!validateAntonyms()) return\n  if (!validateNotes()) return\n  \n  isSubmitting.value = true\n  \n  try {\n    await new Promise(resolve => setTimeout(resolve, 500))\n\n    // Process form data\n    const vocabularyData: any = {\n      word: form.word.trim(),\n      pronunciation: form.pronunciation.trim(),\n      partOfSpeech: form.partOfSpeech,\n      meaning: form.meaning.trim(),\n      example: form.example.trim(),\n      category: form.category,\n      level: form.level,\n      synonyms: form.synonyms ? form.synonyms.split(',').map(s => s.trim()).filter(s => s) : [],\n      antonyms: form.antonyms ? form.antonyms.split(',').map(s => s.trim()).filter(s => s) : [],\n      notes: form.notes.trim(),\n      favorite: form.favorite,\n      image: form.image\n    }\n\n    if (isEditing.value && props.vocabulary) {\n      // Update existing vocabulary\n      vocabularyStore.updateVocabulary(props.vocabulary.id, vocabularyData)\n      console.log('Vocabulary updated:', props.vocabulary.id, vocabularyData)\n      // Show success toast for update\n      toast.success(t('vocabulary.validation.updateSuccess', 'Vocabulary updated successfully!'))\n    } else {\n      // Add new vocabulary\n      // If targetDate is provided, use it for createdAt and updatedAt\n      if (props.targetDate) {\n        // Create a new Date with current time but set to the target date\n        const now = new Date()\n        const [year, month, day] = props.targetDate.split('-')\n        const targetDateObj = new Date(parseInt(year), parseInt(month) - 1, parseInt(day), now.getHours(), now.getMinutes(), now.getSeconds(), now.getMilliseconds())\n        vocabularyData.createdAt = targetDateObj.toISOString()\n        vocabularyData.updatedAt = targetDateObj.toISOString()\n      }\n      \n      const newVocabulary = vocabularyStore.addVocabulary(vocabularyData)\n      console.log('Vocabulary added:', newVocabulary)\n      // Show success toast for save\n      toast.success(t('vocabulary.validation.saveSuccess', 'Vocabulary added successfully!'))\n    }\n\n    // Emit success event with category info\n    emit('vocabulary-saved', { category: vocabularyData.category })\n\n    // Close dialog after short delay\n    setTimeout(() => {\n      closeDialog()\n    }, 500)\n    \n  } catch (error) {\n    console.error('Error saving vocabulary:', error)\n    // Show error toast instead of alert\n    toast.error(t('vocabulary.validation.saveError', 'Error saving vocabulary'))\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>\n\n<style scoped>\n/* Fade in up animation */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out forwards;\n  opacity: 0;\n}\n\n/* Enhanced hover effects for form inputs */\ninput:focus, textarea:focus, select:focus {\n  transform: scale(1.02);\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n}\n\n/* Smooth transitions for all interactive elements */\n* {\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Removed global button hover translateY to avoid overriding existing transforms\n   (this was causing '+' buttons to shift position on hover). */\n\n/* Ensure '+' buttons keep vertical centering on hover while scaling/rotating */\n.keep-center-hover:hover {\n  transform: translateY(-50%) scale(1.1) !important;\n  transform-origin: center !important;\n}\n.keep-center-hover-rotate:hover {\n  transform: translateY(-50%) scale(1.1) rotate(90deg) !important;\n  transform-origin: center !important;\n}\n\n/* Loading animation for submit button */\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-pulse {\n  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n/* Stagger animation delays for form fields */\n.animate-fade-in-up:nth-child(1) { animation-delay: 0.1s; }\n.animate-fade-in-up:nth-child(2) { animation-delay: 0.2s; }\n.animate-fade-in-up:nth-child(3) { animation-delay: 0.3s; }\n.animate-fade-in-up:nth-child(4) { animation-delay: 0.4s; }\n.animate-fade-in-up:nth-child(5) { animation-delay: 0.5s; }\n.animate-fade-in-up:nth-child(6) { animation-delay: 0.6s; }\n.animate-fade-in-up:nth-child(7) { animation-delay: 0.7s; }\n.animate-fade-in-up:nth-child(8) { animation-delay: 0.8s; }\n.animate-fade-in-up:nth-child(9) { animation-delay: 0.9s; }\n.animate-fade-in-up:nth-child(10) { animation-delay: 1.0s; }\n.animate-fade-in-up:nth-child(11) { animation-delay: 1.1s; }\n.animate-fade-in-up:nth-child(12) { animation-delay: 1.2s; }\n\n/* Enhanced backdrop blur effect */\n.backdrop-blur-sm {\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n}\n\n/* Smooth dialog entrance */\n.dialog-enter-active {\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.dialog-enter-from {\n  opacity: 0;\n  transform: scale(0.9) translateY(20px) rotate(1deg);\n}\n\n.dialog-enter-to {\n  opacity: 1;\n  transform: scale(1) translateY(0) rotate(0deg);\n}\n\n/* Enhanced shadow effects */\n.shadow-2xl {\n  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);\n}\n\n/* Gradient text effect for labels */\nlabel {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n/* Enhanced focus states */\ninput:focus, textarea:focus, select:focus {\n  outline: none;\n  border-color: transparent;\n  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1), 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n}\n\n/* Smooth scale transitions */\n.transform {\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Enhanced button states */\nbutton:active {\n  transform: scale(0.95);\n}\n\n/* Loading spinner enhancement */\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.animate-spin {\n  animation: spin 1s linear infinite;\n}\n\n/* Enhanced checkbox styling */\ninput[type=\"checkbox\"] {\n  transition: all 0.3s ease;\n}\n\ninput[type=\"checkbox\"]:checked {\n  transform: scale(1.1);\n}\n\n/* Smooth color transitions */\n.transition-colors {\n  transition: color 0.3s ease, background-color 0.3s ease, border-color 0.3s ease;\n}\n\n/* Enhanced border radius */\n.rounded-lg {\n  border-radius: 0.5rem;\n}\n\n.rounded-xl {\n  border-radius: 0.75rem;\n}\n\n/* Gradient backgrounds */\n.bg-gradient-to-r {\n  background-image: linear-gradient(to right, var(--tw-gradient-stops));\n}\n\n/* Enhanced hover effects for interactive elements */\n.hover\\:scale-\\[1\\.02\\]:hover {\n  transform: scale(1.02);\n}\n\n.hover\\:scale-105:hover {\n  transform: scale(1.05);\n}\n\n.hover\\:scale-110:hover {\n  transform: scale(1.1);\n}\n\n/* Smooth rotation effects */\n.hover\\:rotate-90:hover {\n  transform: rotate(90deg);\n}\n\n/* Enhanced shadow on hover */\n.hover\\:shadow-lg:hover {\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n}\n\n/* Disabled state styling */\n.disabled\\:cursor-not-allowed:disabled {\n  cursor: not-allowed;\n}\n\n.disabled\\:opacity-50:disabled {\n  opacity: 0.5;\n}\n</style>\n"],"file":"assets/VocabularyFormDialog-B6bsofK2.js"}