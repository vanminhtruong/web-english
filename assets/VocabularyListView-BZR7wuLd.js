const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["/web-english/assets/ConfirmToast-Kx7tg3SX.js","/web-english/assets/vue-vendor-Bt65BSdi.js","/web-english/assets/LazyLoadComponent-BObhRYWc.js","/web-english/assets/_plugin-vue_export-helper-BCo6x5W8.js","/web-english/assets/LazyLoadComponent-Cp5nP-fj.css","/web-english/assets/BaseAccordion-DQkowxOL.js","/web-english/assets/BaseAccordion-DsqjnQjB.css","/web-english/assets/GroupingToggle-Bpf41AOa.js","/web-english/assets/index-DmJNupMF.js","/web-english/assets/ui-vendor-D-J_fEQ5.js","/web-english/assets/index-Dhc0zPkL.css","/web-english/assets/TopicManagerPanel-DIMGyH6O.js","/web-english/assets/SaveControlPanel-ChoZA-mL.js","/web-english/assets/VocabularyHeader-BiB-g4G3.js","/web-english/assets/VocabularyFilters-DjFf9O_R.js","/web-english/assets/topicUtils-CuplmVBM.js","/web-english/assets/VocabularyList-CL43IQp2.js","/web-english/assets/import-helper-Bho6F3X4.js","/web-english/assets/dateUtils-N7QR9R2r.js","/web-english/assets/VocabularyFormDialog-DdOu1NR5.js","/web-english/assets/useVocabularyStore-CJz0zgKu.js","/web-english/assets/VocabularyFormDialog-C93YM_1o.css","/web-english/assets/VocabularyDetailDialog-dEnL9C7t.js","/web-english/assets/voiceStore-o6lhlGgY.js","/web-english/assets/VocabularyDetailDialog-BB-rQn6s.css","/web-english/assets/VocabularyNoteDialog-CG-S5I-Y.js","/web-english/assets/VocabularyNoteDialog-hKOklZhh.css","/web-english/assets/GrammarManagerModal-Cf9ha7xP.js","/web-english/assets/GrammarManagerModal-DI7ZWU9a.css","/web-english/assets/MoveModal-C_cZdUXg.js","/web-english/assets/MoveModal-CbFU7qyx.css","/web-english/assets/VoiceSelector-NMc1IGA3.js","/web-english/assets/TopicManager-elcQ92o-.js","/web-english/assets/TopicManager-C3xNGSdI.css","/web-english/assets/DeleteAllVocabulariesPanel-g2kz5xiA.js"])))=>i.map(i=>d[i]);
import{u as e,_ as o}from"./index-DmJNupMF.js";import{A as a,C as t,D as l,I as r,J as i,N as s,d as n,c,v as u,Z as d,f as g,y as v,w as m,t as p,u as b,E as h,M as y,e as f,g as w,O as S,Y as k,q as x}from"./vue-vendor-Bt65BSdi.js";import{u as A,a as T,P as I}from"./ui-vendor-D-J_fEQ5.js";import{u as D}from"./voiceStore-o6lhlGgY.js";import{u as E}from"./useVocabularyStore-CJz0zgKu.js";import{a as G,b as F}from"./dateUtils-N7QR9R2r.js";import{g as _}from"./topicUtils-CuplmVBM.js";function P(){const e=a(!1),o=a(5),t=a({}),l=()=>{const e=localStorage.getItem("vocabulary-use-grouping");return!!e&&JSON.parse(e)};e.value=l();return{useGrouping:e,itemsPerPageGrouped:o,dateGroupPages:t,toggleGrouping:()=>{var o;e.value=!e.value,o=e.value,localStorage.setItem("vocabulary-use-grouping",JSON.stringify(o))},reloadGroupingState:()=>{e.value=l()},dateGroupPrevious:(e,o)=>{const a=t.value[e]||1;a>1&&(t.value[e]=a-1)},dateGroupNext:(e,a)=>{const l=t.value[e]||1,r=a.filter(o=>G(o.createdAt)===e);l<Math.ceil(r.length/o.value)&&(t.value[e]=l+1)},dateGroupGoToPage:(e,o)=>{t.value[e]=o}}}const V=a(!1),O=a(!1),N=a(null),C=a(""),M=a(""),L="vocabulary-google-token",$="vocabulary-google-user",R="vocabulary-google-user-email",U="vocabulary-is-google-signed-in";class B{static instance;gapi=null;tokenClient=null;autoRefreshTimer=null;constructor(){this.loadSavedAuthState()}static getInstance(){return B.instance||(B.instance=new B),B.instance}loadSavedAuthState(){try{const e=localStorage.getItem(L),o=localStorage.getItem($),a=localStorage.getItem(R),t=localStorage.getItem(U);if(e&&o&&"true"===t){console.log("üìÇ Loading saved Google authentication state...");const t=JSON.parse(e),l=JSON.parse(o),r=Date.now()-(t.timestamp||0)>7776e6;N.value=l,C.value=a||"",O.value=!0,r?console.log("‚è∞ Saved Google token expired, will attempt silent refresh later"):console.log("‚úÖ Google authentication state restored from localStorage")}else console.log("‚ÑπÔ∏è No saved Google authentication state found")}catch(e){console.error("‚ùå Error loading saved auth state:",e)}}saveAuthState(e,o,a){try{localStorage.setItem(L,JSON.stringify({access_token:e.access_token,timestamp:Date.now()})),localStorage.setItem($,JSON.stringify(o)),localStorage.setItem(U,"true"),a&&localStorage.setItem(R,a),console.log("üíæ Google auth state saved to localStorage")}catch(t){console.error("‚ùå Error saving auth state:",t)}}clearSavedAuthState(){try{localStorage.removeItem(L),localStorage.removeItem($),localStorage.removeItem(R),localStorage.removeItem(U),console.log("üóëÔ∏è Google auth state cleared from localStorage")}catch(e){console.error("‚ùå Error clearing auth state:",e)}}async initialize(){if(V.value&&this.tokenClient&&this.gapi)console.log("Google APIs already initialized");else try{if(console.log("üöÄ Initializing Google APIs..."),M.value="",await this.loadGoogleScripts(),await Promise.all([this.initializeGapi(),this.initializeGIS()]),!this.tokenClient||!this.gapi)throw new Error("Google APIs initialization incomplete");V.value=!0,console.log("‚úÖ Google APIs initialized successfully"),await this.restoreTokenToGapi(),O.value&&(this.startAutoRefresh(),this.attachLifecycleListeners())}catch(e){throw console.error("‚ùå Failed to initialize Google APIs:",e),M.value="Failed to initialize Google APIs",V.value=!1,e}}async restoreTokenToGapi(){try{const e=localStorage.getItem(L);if(e&&this.gapi&&O.value){const o=JSON.parse(e),a=Date.now()-(o.timestamp||0);if(a>7776e6){console.log("‚è∞ Token expired during restoration, attempting silent refresh...");await this.attemptSilentRefresh()||(console.log("‚ö†Ô∏è Silent refresh failed during restoration. Keeping saved login state."),M.value="Token expired; will require refresh on next action")}else console.log("üîë Restoring token to GAPI client..."),this.gapi.client.setToken({access_token:o.access_token}),console.log("‚úÖ Token restored to GAPI client"),await this.verifyTokenValidity()}}catch(e){console.error("‚ùå Error restoring token to GAPI:",e),M.value="Failed to restore authentication"}}async loadGoogleScripts(){const e=e=>new Promise((o,a)=>{if(document.querySelector(`script[src="${e}"]`)&&window.gapi&&window.google)return void o();const t=document.createElement("script");t.src=e,t.async=!0,t.defer=!0,t.onload=()=>{console.log(`‚úÖ Script loaded: ${e}`),o()},t.onerror=()=>{console.error(`‚ùå Failed to load script: ${e}`),a(new Error(`Failed to load script: ${e}`))},document.head.appendChild(t)});try{if(await Promise.all([e("https://apis.google.com/js/api.js"),e("https://accounts.google.com/gsi/client")]),await new Promise(e=>setTimeout(e,500)),!window.gapi)throw new Error("Google API (gapi) not loaded");if(!window.google?.accounts)throw new Error("Google Identity Services not loaded");console.log("üìö Google scripts loaded and verified")}catch(o){throw console.error("‚ùå Error loading Google scripts:",o),o}}async initializeGapi(){return new Promise((e,o)=>{window.gapi.load("client",async()=>{try{await window.gapi.client.init({apiKey:"AIzaSyDQONqrEK8FmTVj2ci8AM-DMmBKFMMZz20",discoveryDocs:["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest"]}),this.gapi=window.gapi,console.log("‚úÖ GAPI client initialized"),e()}catch(a){o(a)}})})}async initializeGIS(){return new Promise((e,o)=>{try{this.tokenClient=window.google.accounts.oauth2.initTokenClient({client_id:"330597757388-cdngesnvlcn7uiev2ptar27bu1gco9bt.apps.googleusercontent.com",scope:"https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/userinfo.email",callback:e=>{e.error?(console.error("‚ùå Token client error:",e.error),M.value=e.error_description||"Authentication failed",O.value=!1):(console.log("‚úÖ Token received successfully"),this.handleAuthSuccess(e))}}),console.log("‚úÖ Google Identity Services initialized"),e()}catch(a){o(a)}})}async signIn(){try{if(console.log("üîê Initiating Google sign-in..."),this.tokenClient&&V.value||(console.log("üì° Auto-initializing Google APIs for sign-in..."),await this.initialize()),!this.tokenClient)throw new Error("Failed to initialize Google Identity Services");return M.value="",this.tokenClient.requestAccessToken({prompt:"consent"}),new Promise(e=>{const o=setTimeout(()=>{console.warn("‚ö†Ô∏è Google sign-in timeout"),M.value="Sign-in timeout",e(!1)},3e4),a=()=>{O.value?(clearTimeout(o),this.startAutoRefresh(),this.attachLifecycleListeners(),e(!0)):M.value?(clearTimeout(o),e(!1)):setTimeout(a,100)};a()})}catch(e){return console.error("‚ùå Sign-in failed:",e),M.value="Sign-in failed",!1}}async signOut(){try{this.gapi?.client?.getToken()&&window.google.accounts.oauth2.revoke(this.gapi.client.getToken().access_token),O.value=!1,N.value=null,C.value="",M.value="",this.stopAutoRefresh(),this.detachLifecycleListeners(),this.clearSavedAuthState(),console.log("‚úÖ Signed out successfully and cleared saved state")}catch(e){throw console.error("‚ùå Sign-out failed:",e),e}}async handleAuthSuccess(e){N.value=e,O.value=!0,this.gapi.client.setToken({access_token:e.access_token});const o=await this.fetchUserEmail();console.log("üîç Fetched user email:",o),o?(C.value=o,console.log("‚úÖ Email set to reactive state:",C.value)):console.log("‚ùå No email received from API"),this.saveAuthState({access_token:e.access_token},e,o||void 0),console.log("üîë Authentication successful and persisted"),this.startAutoRefresh()}async verifyTokenValidity(){try{if(!this.gapi?.client)return!1;const e=await this.gapi.client.request({path:"https://www.googleapis.com/drive/v3/about?fields=user"});return 200===e.status?(console.log("‚úÖ Token verification successful"),!0):(console.log("‚ùå Token verification failed:",e.status),!1)}catch(e){return console.log("‚ùå Token verification error:",e),!1}}async attemptSilentRefresh(){try{return this.tokenClient?(console.log("üîÑ Attempting silent token refresh..."),new Promise(e=>{const o=this.tokenClient.callback;let a;this.tokenClient.callback=t=>{this.tokenClient.callback=o,void 0!==a&&clearTimeout(a),t.error?(console.log("‚ùå Silent refresh failed:",t.error),"interaction_required"!==t.error&&"login_required"!==t.error||console.log("‚ö†Ô∏è Silent refresh requires user interaction, skipping"),e(!1)):(console.log("‚úÖ Silent refresh successful"),this.handleAuthSuccess(t),e(!0))};try{this.tokenClient.requestAccessToken({prompt:"none"}),a=setTimeout(()=>{this.tokenClient.callback=o,console.log("‚è∞ Silent refresh timeout"),e(!1)},5e3)}catch(t){this.tokenClient.callback=o,void 0!==a&&clearTimeout(a),console.log("‚ùå Silent refresh request failed:",t),e(!1)}})):(console.log("‚ùå No token client available for refresh"),!1)}catch(e){return console.error("‚ùå Silent refresh error:",e),!1}}async getAccessToken(){try{let e=this.gapi?.client?.getToken()?.access_token;if(!e){console.log("‚ùå No current token available, trying silent refresh...");if(!(await this.attemptSilentRefresh()))return null;e=this.gapi?.client?.getToken()?.access_token}const o=localStorage.getItem(L);if(o){const e=JSON.parse(o),a=Date.now()-(e.timestamp||0);if(a>7776e6){console.log("üîÑ Token near expiry, attempting refresh...");return await this.attemptSilentRefresh()?this.gapi?.client?.getToken()?.access_token||null:(console.log("‚ö†Ô∏è Token refresh failed, keeping saved login state"),null)}}return e}catch(e){return console.error("‚ùå Error getting access token:",e),null}}async isSignedIn(){if(!O.value)return!1;return null!==await this.getAccessToken()||O.value}isSignedInSync(){return O.value}getAuthError(){return M.value}startAutoRefresh(){this.stopAutoRefresh(),this.autoRefreshTimer=window.setInterval(async()=>{if(!O.value)return;await this.shouldRefreshToken()?(console.log("‚è±Ô∏è Auto-refresh timer triggered - token needs refresh"),await this.attemptSilentRefresh()):console.log("‚è±Ô∏è Auto-refresh timer checked - token still valid")},7776e6),console.log("üïí Auto-refresh timer started")}stopAutoRefresh(){this.autoRefreshTimer&&(clearInterval(this.autoRefreshTimer),this.autoRefreshTimer=null,console.log("üõë Auto-refresh timer stopped"))}visibilityHandler=async()=>{if("visible"===document.visibilityState&&O.value){await this.shouldRefreshToken()?(console.log("üëÄ Page visible, token needs refresh"),await this.attemptSilentRefresh()):console.log("üëÄ Page visible, token still valid")}};onlineHandler=async()=>{if(navigator.onLine&&O.value){await this.shouldRefreshToken()?(console.log("üåê Back online, token needs refresh"),await this.attemptSilentRefresh()):console.log("üåê Back online, token still valid")}};attachLifecycleListeners(){document.addEventListener("visibilitychange",this.visibilityHandler),window.addEventListener("online",this.onlineHandler),console.log("üîó Lifecycle listeners attached")}detachLifecycleListeners(){document.removeEventListener("visibilitychange",this.visibilityHandler),window.removeEventListener("online",this.onlineHandler),console.log("üîå Lifecycle listeners detached")}async fetchUserEmail(){try{if(!this.gapi?.client)return console.log("‚ùå No GAPI client available for fetching user email"),null;const e=await this.gapi.client.request({path:"https://www.googleapis.com/oauth2/v2/userinfo"});return 200===e.status&&e.result?.email?(console.log("‚úÖ User email fetched successfully"),e.result.email):(console.log("‚ùå Failed to fetch user email from API response"),null)}catch(e){return console.error("‚ùå Error fetching user email:",e),null}}async getUserEmail(){return C.value}async shouldRefreshToken(){try{const e=this.gapi?.client?.getToken()?.access_token;if(!e)return console.log("üîç No current token, refresh needed"),!0;const o=localStorage.getItem(L);if(!o)return console.log("üîç No saved token data, refresh needed"),!0;const a=JSON.parse(o),t=Date.now()-(a.timestamp||0);return t>7776e6?(console.log("üîç Token is near expiry, refresh needed"),!0):(console.log("üîç Token is still valid, no refresh needed"),!1)}catch(e){return console.error("‚ùå Error checking token refresh need:",e),!1}}}const j=B.getInstance();class J{static instance;VOCABULARY_FOLDER_NAME="Vocabulary Backup";BACKUP_FILE_NAME="vocabulary-auto-backup.json";vocabularyFolderId=null;constructor(){}static getInstance(){return J.instance||(J.instance=new J),J.instance}async ensureAuthenticated(){return!!(await j.isSignedIn())||(console.log("‚ö†Ô∏è User not signed in, attempting to sign in..."),await j.signIn())}async handleAuthError(e){try{const o=await e();if(401===o.status){console.log("üîÑ Received 401 error, attempting token refresh...");if(!(await j.getAccessToken()))throw new Error("Unable to refresh authentication token");console.log("‚ôªÔ∏è Retrying operation with refreshed token...");const o=await e();if(401===o.status)throw new Error("Authentication failed even after token refresh");return o}return o}catch(o){throw console.error("‚ùå Auth error handling failed:",o),o}}async findOrCreateVocabularyFolder(){try{if(!(await this.ensureAuthenticated()))throw new Error("Authentication failed");console.log("üìÅ Finding or creating vocabulary backup folder...");const e=await window.gapi.client.drive.files.list({q:`name='${this.VOCABULARY_FOLDER_NAME}' and mimeType='application/vnd.google-apps.folder' and trashed=false`,spaces:"drive",fields:"files(id, name)"});if(e.result.files&&e.result.files.length>0)return this.vocabularyFolderId=e.result.files[0].id,console.log("‚úÖ Found existing vocabulary folder:",this.vocabularyFolderId),this.vocabularyFolderId;const o=await window.gapi.client.drive.files.create({resource:{name:this.VOCABULARY_FOLDER_NAME,mimeType:"application/vnd.google-apps.folder",description:"Automatically created folder for vocabulary backup files"},fields:"id"});return this.vocabularyFolderId=o.result.id,console.log("‚úÖ Created new vocabulary folder:",this.vocabularyFolderId),this.vocabularyFolderId}catch(e){return console.error("‚ùå Failed to find or create vocabulary folder:",e),null}}async uploadVocabularyData(e){let o=0;try{if(!(await this.ensureAuthenticated()))throw new Error("Authentication failed");console.log("üì§ Starting vocabulary data upload to Google Drive...");const a=await this.findOrCreateVocabularyFolder();if(!a)throw new Error("Failed to create vocabulary folder");const t=await this.findVocabularyBackupFile(),l=JSON.stringify(e,null,2);o=Math.round(l.length/1024),console.log(`üìä Preparing upload: ${o}KB of vocabulary data`);const r=new Blob([l],{type:"application/json"});let i;if(t){console.log("üîÑ Updating existing backup file:",t.id);const e=async()=>{const e=await j.getAccessToken();if(!e)throw new Error("No access token available");console.log(`üîÑ Starting update request for ${o}KB data...`);const a=new FormData;a.append("metadata",new Blob([JSON.stringify({name:this.BACKUP_FILE_NAME,description:`Vocabulary backup - Updated: ${(new Date).toISOString()}`})],{type:"application/json"})),a.append("file",r);const l=new AbortController,i=Math.max(6e4,Math.min(6e5,6e4+60*o)),s=Math.round(i/6e4);console.log(`‚è±Ô∏è Setting ${s} minute timeout for ${o}KB file`);const n=setTimeout(()=>{console.log(`‚è∞ Upload timeout after ${s} minutes, aborting request...`),l.abort()},i);try{const o=await fetch(`https://www.googleapis.com/upload/drive/v3/files/${t.id}?uploadType=multipart&fields=id,name,modifiedTime,size`,{method:"PATCH",headers:{Authorization:`Bearer ${e}`},body:a,signal:l.signal});return clearTimeout(n),console.log(`‚úÖ Update request completed with status: ${o.status}`),o}catch(c){if(clearTimeout(n),"AbortError"===c.name)throw new Error(`Upload timeout after ${s} minutes for ${o}KB file`);throw c}};i=await this.handleAuthError(e)}else{console.log("üìÑ Creating new backup file...");const e=async()=>{const e=await j.getAccessToken();if(!e)throw new Error("No access token available");console.log(`üìÑ Starting new file creation for ${o}KB data...`);const t=new FormData;t.append("metadata",new Blob([JSON.stringify({name:this.BACKUP_FILE_NAME,parents:[a],description:`Vocabulary backup - Created: ${(new Date).toISOString()}`})],{type:"application/json"})),t.append("file",r);const l=new AbortController,i=Math.max(6e4,Math.min(6e5,6e4+60*o)),s=Math.round(i/6e4);console.log(`‚è±Ô∏è Setting ${s} minute timeout for ${o}KB file`);const n=setTimeout(()=>{console.log(`‚è∞ Upload timeout after ${s} minutes, aborting request...`),l.abort()},i);try{const o=await fetch("https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id,name,modifiedTime,size",{method:"POST",headers:{Authorization:`Bearer ${e}`},body:t,signal:l.signal});return clearTimeout(n),console.log(`‚úÖ New file creation completed with status: ${o.status}`),o}catch(c){if(clearTimeout(n),"AbortError"===c.name)throw new Error(`Upload timeout after ${s} minutes for ${o}KB file`);throw c}};i=await this.handleAuthError(e)}if(console.log(`üîç Checking response status: ${i.status}`),!i.ok){const e=await i.text().catch(()=>"Unknown error");throw console.error(`‚ùå HTTP error ${i.status} for ${o}KB upload:`,e),401===i.status?new Error("Authentication failed - please sign in to Google Drive again"):403===i.status?new Error("Permission denied - please check Google Drive permissions"):413===i.status?new Error(`File too large (${o}KB) - Google Drive limit exceeded`):429===i.status?new Error("Rate limit exceeded - please try again later"):new Error(`Upload failed with status ${i.status}: ${e}`)}console.log("üì• Parsing response JSON...");const s=await i.json();return console.log(`‚úÖ Vocabulary data (${o}KB) uploaded successfully:`,{fileId:s.id,fileName:s.name,size:s.size,modifiedTime:s.modifiedTime}),{success:!0,fileId:s.id}}catch(a){const e=a.message,t=void 0!==o?`${o}KB`:"unknown size";return console.error(`‚ùå Failed to upload vocabulary data (${t}):`,{error:e,stack:a.stack}),{success:!1,error:e}}}async downloadVocabularyData(){try{if(!(await this.ensureAuthenticated()))throw new Error("Authentication failed");console.log("‚¨áÔ∏è Starting vocabulary data download from Google Drive...");const e=await this.findVocabularyBackupFile();if(!e)return{success:!1,error:"No vocabulary backup file found on Google Drive"};console.log("üìÑ Found backup file:",e.name,e.id);const o=await window.gapi.client.drive.files.get({fileId:e.id,alt:"media"});if(!o.body)throw new Error("Empty response body");const a=JSON.parse(o.body);return console.log("‚úÖ Vocabulary data downloaded successfully"),{success:!0,data:a,lastModified:e.modifiedTime}}catch(e){return console.error("‚ùå Failed to download vocabulary data:",e),{success:!1,error:e.message}}}async findVocabularyBackupFile(){try{const e=await this.findOrCreateVocabularyFolder();if(!e)return null;const o=await window.gapi.client.drive.files.list({q:`name='${this.BACKUP_FILE_NAME}' and parents in '${e}' and trashed=false`,spaces:"drive",fields:"files(id, name, modifiedTime, size, mimeType)"});return o.result.files&&o.result.files.length>0?o.result.files[0]:null}catch(e){return console.error("‚ùå Failed to find vocabulary backup file:",e),null}}async getVocabularyBackupInfo(){try{if(!(await this.ensureAuthenticated()))throw new Error("Authentication failed");const e=await this.findVocabularyBackupFile();return{exists:!!e,file:e||void 0}}catch(e){return{exists:!1,error:e.message}}}async deleteVocabularyBackup(){try{if(!(await this.ensureAuthenticated()))throw new Error("Authentication failed");const e=await this.findVocabularyBackupFile();return e?(await window.gapi.client.drive.files.delete({fileId:e.id}),console.log("üóëÔ∏è Vocabulary backup file deleted successfully"),{success:!0}):{success:!0}}catch(e){return console.error("‚ùå Failed to delete vocabulary backup:",e),{success:!1,error:e.message}}}async checkForConflicts(e){try{const o=await this.downloadVocabularyData();if(!o.success)return{hasConflicts:!1,error:o.error};const a=e.exportDate||(new Date).toISOString(),t=o.lastModified;return{hasConflicts:new Date(t)>new Date(a),localModified:a,remoteModified:t,remoteData:o.data}}catch(o){return{hasConflicts:!1,error:o.message}}}}J.getInstance();const z=s(()=>o(()=>import("./ConfirmToast-Kx7tg3SX.js"),__vite__mapDeps([0,1]),import.meta.url));function q(){const{t:e}=A(),o=E(),l=T(),s=(()=>{const e=B.getInstance();return{isGoogleApiLoaded:t(()=>V.value),isGoogleSignedIn:t(()=>O.value),googleUser:t(()=>N.value),googleUserEmail:t(()=>C.value),authError:t(()=>M.value),initialize:()=>e.initialize(),signIn:()=>e.signIn(),signOut:()=>e.signOut(),isSignedIn:()=>e.isSignedIn(),isSignedInSync:()=>e.isSignedInSync(),getAccessToken:()=>e.getAccessToken(),getUserEmail:()=>e.getUserEmail()}})(),n=(()=>{const e=J.getInstance();return{uploadVocabularyData:o=>e.uploadVocabularyData(o),downloadVocabularyData:()=>e.downloadVocabularyData(),getVocabularyBackupInfo:()=>e.getVocabularyBackupInfo(),deleteVocabularyBackup:()=>e.deleteVocabularyBackup(),checkForConflicts:o=>e.checkForConflicts(o)}})(),c=a(!0),u=a(!1),d=a(""),g=a("idle"),v=a(null),m=a(!1),p=a(!1),b=a("local");let h=null,y=null;const f=a(""),w="file-handles",S="auto-save-file-handle",k=()=>new Promise((e,o)=>{const a=indexedDB.open("vocabulary-file-handles",1);a.onerror=()=>o(a.error),a.onsuccess=()=>e(a.result),a.onupgradeneeded=e=>{const o=e.target.result;o.objectStoreNames.contains(w)||o.createObjectStore(w)}}),x=async e=>{try{const o=await k(),a=o.transaction([w],"readwrite").objectStore(w);await new Promise((o,t)=>{const l=a.put(e,S);l.onerror=()=>t(l.error),l.onsuccess=()=>o()}),console.log("File handle saved to IndexedDB")}catch(o){console.error("Error saving file handle to IndexedDB:",o)}},D=async()=>{try{const e=await k(),o=e.transaction([w],"readwrite").objectStore(w);await new Promise((e,a)=>{const t=o.delete(S);t.onerror=()=>a(t.error),t.onsuccess=()=>e()}),console.log("File handle cleared from IndexedDB")}catch(e){console.error("Error clearing file handle from IndexedDB:",e)}},G=(e,o)=>{try{const a=localStorage.getItem(e);return null!==a?JSON.parse(a):o}catch{return o}},F=(e,o)=>{localStorage.setItem(e,JSON.stringify(o))};c.value=G("vocabulary-auto-save-enabled",!0),m.value=G("vocabulary-has-auto-save-file",!1),p.value=G("vocabulary-has-google-drive-file",!1),b.value=G("vocabulary-storage-type","local"),d.value=G("vocabulary-last-save-time","");const P=async()=>{if(console.log("üîß Initializing auto-save, hasAutoSaveFile:",m.value),m.value&&"showSaveFilePicker"in window)try{console.log("üîç Attempting to restore file handle from IndexedDB...");const a=await(async()=>{try{const e=(await k()).transaction([w],"readonly").objectStore(w);return new Promise((o,a)=>{const t=e.get(S);t.onerror=()=>a(t.error),t.onsuccess=()=>o(t.result||null)})}catch(e){return console.error("Error loading file handle from IndexedDB:",e),null}})();if(a){console.log("‚úÖ Found saved file handle in IndexedDB");try{const o={mode:"readwrite"},t=await a.queryPermission(o);if(console.log("üîê File handle permission:",t),"granted"===t||"prompt"===t){v.value=a,console.log("‚úÖ File handle restored to autoSaveFileHandle");try{const e=await a.getFile();f.value=e.name,console.log("üìÅ File handle restored successfully:",e.name),"prompt"===t&&(console.log("üîÑ Requesting permission for file handle..."),await a.requestPermission(o))}catch(e){console.log("‚ö†Ô∏è Could not get file properties, but handle seems valid:",e)}}else console.log("‚ùå File handle permission denied, clearing stored handle"),await D(),m.value=!1,F("vocabulary-has-auto-save-file",!1)}catch(o){console.log("‚ùå Saved file handle is invalid, clearing:",o),await D(),m.value=!1,F("vocabulary-has-auto-save-file",!1)}}else console.log("‚ùå No file handle found in IndexedDB"),m.value=!1,F("vocabulary-has-auto-save-file",!1)}catch(o){console.error("‚ùå Error initializing auto-save:",o),m.value=!1,F("vocabulary-has-auto-save-file",!1)}else console.log("‚ÑπÔ∏è Auto-save not enabled or File System API not supported")},L=async e=>{const o=JSON.stringify(e,null,2),a=new Blob([o],{type:"application/json"}),t=URL.createObjectURL(a),l=document.createElement("a");l.href=t,l.download=`vocabulary-backup-${(new Date).toISOString().split("T")[0]}.json`,document.body.appendChild(l),l.click(),document.body.removeChild(l),URL.revokeObjectURL(t)},$=()=>{const e=e=>{const o=_().find(o=>o.key===e);if(o)return o.en;return{technology:"Technology",business:"Business",travel:"Travel",food:"Food",health:"Health",education:"Education",sports:"Sports",entertainment:"Entertainment",science:"Science",art:"Art",music:"Music",literature:"Literature",politics:"Politics",environment:"Environment",fashion:"Fashion",finance:"Finance"}[e]||e.charAt(0).toUpperCase()+e.slice(1)};return{vocabularies:o.allVocabularies.value.map(o=>({...o,categoryName:e(o.category)})),customTopics:o.customTopics.value,groupTopics:(()=>{try{const e=localStorage.getItem("vocabulary-group-topics");return e?JSON.parse(e):{}}catch(e){return{}}})(),vocabularyNotes:(()=>{try{const e=localStorage.getItem("vocabulary-notes");return e?JSON.parse(e):{}}catch(e){return{}}})(),markedWords:(()=>{try{const e=localStorage.getItem("vocabulary-marked-words");return e?JSON.parse(e):{}}catch(e){return{}}})(),grammarRules:(()=>{try{const e=localStorage.getItem("grammar-rules");return e?JSON.parse(e):[]}catch(e){return[]}})(),practiceHistory:(()=>{try{const e=localStorage.getItem("flashcard-practice-history");return e?JSON.parse(e):[]}catch(e){return[]}})(),accordionState:JSON.parse(localStorage.getItem("vocabulary-accordion-state")||"{}"),useGrouping:JSON.parse(localStorage.getItem("vocabulary-use-grouping")||"false"),exportDate:(new Date).toISOString(),version:"1.6",totalCount:o.totalCount.value}},R=async()=>{if(c.value)try{g.value="saving";const e=$();o.saveToLocalStorage();let a=!1;a="google-drive"===b.value?await W(e):"local"!==b.value||!m.value||await U(e);const t=(new Date).toLocaleString("vi-VN");return d.value=t,F("vocabulary-last-save-time",t),a?(g.value="success",console.log("‚úÖ Auto-save completed successfully"),setTimeout(()=>{"success"===g.value&&(g.value="idle")},1e3)):(g.value="error",console.error("‚ùå Auto-save failed"),setTimeout(()=>{"error"===g.value&&(g.value="idle")},2e3)),a}catch(e){return console.error("Auto-save error:",e),g.value="error",setTimeout(()=>{"error"===g.value&&(g.value="idle")},2e3),!1}},U=async o=>{if(!("showSaveFilePicker"in window))return console.log("Browser doesn't support File System Access API"),!1;if(!v.value)return console.log("No auto-save file handle available"),!1;try{console.log("Attempting to auto-save to file...",f.value);const a={mode:"readwrite"};if("granted"!==await v.value.queryPermission(a)){console.log("Requesting permission to write to file...");if("granted"!==await v.value.requestPermission(a))return console.error("Permission to write to file denied"),l.error(e("vocabulary.save.errors.permissionDenied","Permission denied")),!1}console.log("Creating writable stream...");const t=await v.value.createWritable(),r=JSON.stringify(o,null,2);console.log(`Writing ${r.length} characters to file...`),await t.write(r),console.log("Closing writable stream..."),await t.close(),console.log("Auto-save to file completed successfully:",f.value);const i=(new Date).toLocaleString("vi-VN");return d.value=i,F("vocabulary-last-save-time",i),!0}catch(a){return console.error("Error auto-saving to file:",a),a instanceof DOMException&&"NotAllowedError"===a.name?l.error(e("vocabulary.save.errors.permissionDenied","Permission denied")):l.error(e("vocabulary.save.errors.autoSaveFileFailed","Auto save file failed")),a instanceof DOMException&&"NotAllowedError"===a.name||(v.value=null,m.value=!1,F("vocabulary-has-auto-save-file",!1),await D()),!1}},j=()=>{c.value?(console.log("Setting up debounce auto-save timer..."),y&&(console.log("Clearing existing debounce timer"),clearTimeout(y),y=null),console.log("Creating new debounce timer"),y=setTimeout(async()=>{if(console.log("Debounce timer triggered, performing auto-save..."),"local"===b.value&&!m.value)return console.log("No auto-save file selected, saving to localStorage only"),void o.saveToLocalStorage();if("google-drive"===b.value){if(!(await s.isSignedIn()))return console.log("Google Drive selected but not signed in or token invalid, saving to localStorage only"),void o.saveToLocalStorage()}const a=await R();if(console.log("Auto-save result:",a?"Success":"Failed"),!a){const o="google-drive"===b.value?e("vocabulary.save.googleDriveRetry","Google Drive save failed. Check connection.")||"Google Drive save failed. Check connection.":e("vocabulary.save.autoSaveRetry","Auto save failed. Click to select a new file.")||"Auto save failed. Click to select a new file.";l.info(o,{timeout:5e3,onClick:()=>{"local"===b.value&&H()}})}},500)):console.log("Auto-save is disabled, skipping debounce")},q=()=>{h&&clearTimeout(h),h=window.setTimeout(()=>{c.value&&(R(),q())},1e4)},H=async()=>{if("showSaveFilePicker"in window)try{console.log("Setting up auto-save file...");const a=await window.showSaveFilePicker({suggestedName:"vocabulary-auto-backup.json",types:[{description:"JSON files",accept:{"application/json":[".json"]}}]});v.value=a,await x(a);try{const e=await a.getFile();f.value=e.name,console.log("Selected auto-save file:",e.name)}catch(o){console.log("Could not get file properties:",o)}m.value=!0,F("vocabulary-has-auto-save-file",!0);const t=$();console.log("Testing auto-save with file handle:",v.value);await U(t)?(l.success(e("vocabulary.save.autoSaveFileSetup","Auto save file setup")),console.log("Auto-save file setup successful!")):(l.error(e("vocabulary.save.errors.autoSaveFileFailed","Auto save file failed")),console.error("Auto-save file setup failed!"))}catch(a){"AbortError"!==a.name&&(console.error("Error setting up auto-save file:",a),l.error(e("vocabulary.save.errors.fileSelectError",{error:a.message})||`File selection error: ${a.message}`))}else l.error(e("vocabulary.save.errors.browserNotSupported","Browser not supported"))},W=async e=>{try{if(!(await s.isSignedIn()))return console.log("‚ùå Not signed in to Google Drive or token invalid"),!1;console.log("‚¨ÜÔ∏è Attempting to auto-save to Google Drive...");let a=null;const t=2;for(let r=1;r<=t;r++)try{console.log(`üì§ Google Drive upload attempt ${r}/${t}...`);const o=await n.uploadVocabularyData(e);if(o.success)return console.log(`‚úÖ Auto-save to Google Drive completed successfully (attempt ${r})`),p.value=!0,F("vocabulary-has-google-drive-file",!0),!0;if(a=o.error,console.error(`‚ùå Google Drive save failed (attempt ${r}):`,o.error),o.error?.includes("timeout")){console.log("‚è∞ Upload timeout detected, stopping retries to avoid excessive wait");break}if(o.error?.includes("401")||o.error?.includes("unauthorized")){console.log("üîÑ Auth error detected, refreshing token...");if(!(await s.getAccessToken())){console.log("‚ùå Token refresh failed, stopping retries");break}}r<t&&(console.log(`‚è≥ Waiting ${2*r}s before retry...`),await new Promise(e=>setTimeout(e,2e3*r)))}catch(o){a=o;const e=o?.message||String(o);if(console.error(`‚ùå Google Drive API error (attempt ${r}):`,e),e.includes("timeout")){console.log("‚è∞ API timeout detected, stopping retries");break}r<t&&(console.log(`‚è≥ Waiting ${2*r}s before retry...`),await new Promise(e=>setTimeout(e,2e3*r)))}const l=a?.message||String(a);if(console.error("‚ùå All Google Drive auto-save attempts failed:",l),l?.includes("timeout")){const o=Math.round(JSON.stringify(e).length/1024);console.warn(`‚ö†Ô∏è Auto-save failed due to timeout for ${o}KB file. Consider reducing vocabulary size or checking internet connection.`)}return!1}catch(a){return console.error("‚ùå Error saving to Google Drive:",a),!1}},K=t(()=>{switch(g.value){case"saving":return"bg-yellow-500";case"success":return"bg-green-500";case"error":return"bg-red-500";default:return"bg-gray-400"}}),Q=t(()=>{switch(g.value){case"saving":return c.value?e("vocabulary.save.status.autoSaving","Auto Saving..."):e("vocabulary.save.status.saving","Saving...");case"success":return c.value?"google-drive"===b.value&&p.value?e("vocabulary.save.status.autoGoogleDrive","Auto saved to Google Drive"):"local"===b.value&&m.value?e("vocabulary.save.status.autoWithFile","Auto saved to file"):e("vocabulary.save.status.autoLocalStorage","Auto saved locally"):e("vocabulary.save.status.fileSaved","Saved to file");case"error":return e("vocabulary.save.status.error","Save error");default:return c.value?"google-drive"===b.value?s.isSignedInSync()?e("vocabulary.save.status.googleDriveReady","Google Drive ready"):e("vocabulary.save.status.googleDriveSignIn","Sign in to Google Drive"):m.value?e("vocabulary.save.status.autoFile","Auto save ready"):e("vocabulary.save.status.autoNoFile","Auto save (no file)"):e("vocabulary.save.manual","Manual save")}});return r(async()=>{console.log("üöÄ Component mounted, initializing auto-save..."),await P(),console.log("üì± Initializing Google APIs...");try{await s.initialize(),console.log("‚úÖ Google APIs initialized");if(await s.isSignedIn()){console.log("‚úÖ Google Drive authentication restored and validated");try{(await n.getVocabularyBackupInfo()).exists&&(p.value=!0,F("vocabulary-has-google-drive-file",!0),console.log("‚úÖ Google Drive backup file found"))}catch(e){console.warn("‚ö†Ô∏è Could not check Google Drive backup status:",e)}}else console.log("‚ö†Ô∏è Google Drive authentication could not be restored")}catch(e){console.error("‚ùå Failed to initialize Google APIs:",e)}}),i(()=>{h&&clearTimeout(h),y&&clearTimeout(y)}),{autoSaveEnabled:c,isSaving:u,lastSaveTime:d,hasAutoSaveFile:m,hasGoogleDriveFile:p,storageType:b,autoSaveFilePath:f,saveStatus:g,getSaveStatusColor:K,getSaveStatusText:Q,manualSave:async()=>{if(!u.value){u.value=!0,g.value="saving";try{const e=$();"showSaveFilePicker"in window?await(async e=>{try{const o=await window.showSaveFilePicker({suggestedName:`vocabulary-backup-${(new Date).toISOString().split("T")[0]}.json`,types:[{description:"JSON files",accept:{"application/json":[".json"]}}]}),a=await o.createWritable();await a.write(JSON.stringify(e,null,2)),await a.close(),v.value=o,m.value=!0,F("vocabulary-has-auto-save-file",!0),await x(o)}catch(o){"AbortError"!==o.name&&await L(e)}})(e):await L(e),o.saveToLocalStorage();const a=(new Date).toLocaleString("vi-VN");d.value=a,F("vocabulary-last-save-time",a),g.value="success",setTimeout(()=>{"success"===g.value&&(g.value="idle")},2e3)}catch(e){g.value="error",setTimeout(()=>{"error"===g.value&&(g.value="idle")},3e3)}finally{u.value=!1}}},debounceAutoSave:j,scheduleAutoSave:q,setupAutoSaveFile:H,setupGoogleDrive:async()=>{try{console.log("Setting up Google Drive auto-save...");if(!(await s.isSignedIn())){if(!(await s.signIn()))return l.error(e("vocabulary.save.errors.googleSignInFailed","Google sign-in failed")||"Google sign-in failed"),!1}const a=$();let t=null;for(let r=1;r<=2;r++)try{const o=await n.uploadVocabularyData(a);if(o.success)return p.value=!0,F("vocabulary-has-google-drive-file",!0),l.success(e("vocabulary.save.googleDriveSetup","Google Drive setup successful")||"Google Drive setup successful"),!0;t=o.error,console.error(`‚ùå Google Drive setup test failed (attempt ${r}):`,o.error),r<2&&await new Promise(e=>setTimeout(e,1e3))}catch(o){t=o,console.error(`‚ùå Google Drive setup API error (attempt ${r}):`,o),r<2&&await new Promise(e=>setTimeout(e,1e3))}return l.error(e("vocabulary.save.errors.googleDriveSetupFailed","Google Drive setup failed")||`Google Drive setup failed: ${t}`),!1}catch(a){return console.error("Error setting up Google Drive:",a),l.error(e("vocabulary.save.errors.googleDriveSetupFailed","Google Drive setup failed")||"Google Drive setup failed"),!1}},syncFromGoogleDrive:async()=>{try{if(!(await s.isSignedIn()))return l.error(e("vocabulary.save.errors.notSignedIn","Not signed in to Google")||"Not signed in to Google"),!1;console.log("Syncing from Google Drive...");let t=null;for(let r=1;r<=2;r++)try{const a=await n.downloadVocabularyData();if(a.success&&a.data){if(a.data.vocabularies&&Array.isArray(a.data.vocabularies))return o.importVocabularies(a.data.vocabularies),a.data.customTopics&&Array.isArray(a.data.customTopics)&&(localStorage.setItem("customTopics",JSON.stringify(a.data.customTopics)),o.refreshCustomTopics()),a.data.groupTopics&&"object"==typeof a.data.groupTopics&&localStorage.setItem("vocabulary-group-topics",JSON.stringify(a.data.groupTopics)),a.data.grammarRules&&Array.isArray(a.data.grammarRules)&&localStorage.setItem("grammar-rules",JSON.stringify(a.data.grammarRules)),a.data.practiceHistory&&Array.isArray(a.data.practiceHistory)&&localStorage.setItem("flashcard-practice-history",JSON.stringify(a.data.practiceHistory)),l.success(e("vocabulary.save.syncFromDriveSuccess","Successfully synced from Google Drive")||"Successfully synced from Google Drive"),!0}else t=a.error,console.error(`‚ùå Google Drive sync failed (attempt ${r}):`,a.error),r<2&&await new Promise(e=>setTimeout(e,1e3))}catch(a){t=a,console.error(`‚ùå Google Drive sync API error (attempt ${r}):`,a),r<2&&await new Promise(e=>setTimeout(e,1e3))}return l.error(t||e("vocabulary.save.errors.syncFailed","Sync failed")||"Sync failed"),!1}catch(t){return console.error("Error syncing from Google Drive:",t),l.error(e("vocabulary.save.errors.syncFailed","Sync failed")||"Sync failed"),!1}},handleGoogleSignIn:async()=>{try{console.log("Initiating Google sign-in..."),await s.initialize();const a=await s.signIn();if(a){l.success(e("vocabulary.save.googleSignInSuccess","Successfully signed in to Google")||"Successfully signed in to Google");try{(await n.getVocabularyBackupInfo()).exists&&(p.value=!0,F("vocabulary-has-google-drive-file",!0))}catch(o){console.warn("‚ö†Ô∏è Could not check backup status after sign-in:",o)}}else l.error(e("vocabulary.save.errors.googleSignInFailed","Google sign-in failed")||"Google sign-in failed");return a}catch(a){return console.error("Google sign-in error:",a),l.error(e("vocabulary.save.errors.googleSignInFailed","Google sign-in failed")||"Google sign-in failed"),!1}},handleGoogleSignOut:async()=>{try{await s.signOut(),p.value=!1,F("vocabulary-has-google-drive-file",!1),l.success(e("vocabulary.save.googleSignOutSuccess","Successfully signed out from Google")||"Successfully signed out from Google")}catch(o){console.error("Google sign-out error:",o),l.error(e("vocabulary.save.errors.googleSignOutFailed","Google sign-out failed")||"Google sign-out failed")}},handleFileImport:a=>{if(!a||!a.name.endsWith(".json"))return void l.error(e("vocabulary.save.errors.invalidFile","Invalid file"));const t=l({component:z,props:{message:e("vocabulary.save.import.confirmMessage",{filename:a.name},`Import ${a.name}? This will replace all current vocabulary.`),confirmText:e("common.confirm","Confirm"),cancelText:e("common.cancel","Cancel"),onConfirm:()=>{const r=new FileReader;r.onload=a=>{u.value=!0;try{const t=a.target?.result,r=JSON.parse(t);if(!r.vocabularies||!Array.isArray(r.vocabularies))return l.error(e("vocabulary.save.errors.invalidFile","Invalid file")),void(u.value=!1);o.importVocabularies(r.vocabularies),r.customTopics&&Array.isArray(r.customTopics)&&(localStorage.setItem("customTopics",JSON.stringify(r.customTopics)),o.refreshCustomTopics(),console.log("Imported custom topics:",r.customTopics)),r.topics&&Array.isArray(r.topics)&&(localStorage.setItem("customTopics",JSON.stringify(r.topics)),o.refreshCustomTopics(),console.log("Imported legacy topics:",r.topics)),r.groupTopics&&"object"==typeof r.groupTopics&&(localStorage.setItem("vocabulary-group-topics",JSON.stringify(r.groupTopics)),console.log("Imported group topics:",r.groupTopics)),r.accordionState&&"object"==typeof r.accordionState&&(localStorage.setItem("vocabulary-accordion-state",JSON.stringify(r.accordionState)),console.log("Imported accordion state:",r.accordionState)),"boolean"==typeof r.useGrouping&&(localStorage.setItem("vocabulary-use-grouping",JSON.stringify(r.useGrouping)),console.log("Imported grouping state:",r.useGrouping)),r.vocabularyNotes&&"object"==typeof r.vocabularyNotes&&(localStorage.setItem("vocabulary-notes",JSON.stringify(r.vocabularyNotes)),console.log("Imported vocabulary notes:",r.vocabularyNotes)),r.markedWords&&"object"==typeof r.markedWords&&(localStorage.setItem("vocabulary-marked-words",JSON.stringify(r.markedWords)),console.log("Imported marked words:",r.markedWords)),r.grammarRules&&Array.isArray(r.grammarRules)&&(localStorage.setItem("grammar-rules",JSON.stringify(r.grammarRules)),console.log("Imported grammar rules:",r.grammarRules)),r.practiceHistory&&Array.isArray(r.practiceHistory)&&(localStorage.setItem("flashcard-practice-history",JSON.stringify(r.practiceHistory)),console.log("Imported practice history:",r.practiceHistory)),u.value=!1;let i=e("vocabulary.save.import.successMessage",{count:r.vocabularies.length},`Successfully imported ${r.vocabularies.length} vocabulary words`);if(r.customTopics?.length>0&&(i+=` + ${r.customTopics.length} custom categories`),r.groupTopics&&Object.keys(r.groupTopics).length>0&&(i+=` + ${Object.keys(r.groupTopics).length} group topics`),"boolean"==typeof r.useGrouping&&(i+=" + grouping preference"),r.vocabularyNotes&&Object.keys(r.vocabularyNotes).length>0&&(i+=` + ${Object.keys(r.vocabularyNotes).length} vocabulary notes`),r.markedWords&&Object.keys(r.markedWords).length>0){let e=0;Object.values(r.markedWords).forEach(o=>{Array.isArray(o)&&(e+=o.length)}),i+=` + ${e} marked words`}r.grammarRules&&r.grammarRules.length>0&&(i+=` + ${r.grammarRules.length} grammar rules`),r.practiceHistory&&r.practiceHistory.length>0&&(i+=` + ${r.practiceHistory.length} practice sessions`),l.success(i),window.dispatchEvent(new CustomEvent("vocabularyImportComplete",{detail:{useGrouping:r.useGrouping}})),c.value&&j()}catch(t){u.value=!1,console.error(e("vocabulary.save.errors.invalidFile"),t),l.error(e("vocabulary.save.errors.invalidFile","Invalid file"))}},r.onerror=()=>{u.value=!1,console.error("Error reading file"),l.error(e("vocabulary.save.errors.fileReadError",{error:r.error?.message||"Unknown error"})||`Error reading file: ${r.error?.message||"Unknown error"}`)},r.readAsText(a),l.dismiss(t)},onCancel:()=>{u.value=!1,l.dismiss(t)}}},{position:I.TOP_CENTER,timeout:!1,closeButton:!1,draggable:!1,icon:!1})},resetAutoSaveFile:async()=>{v.value=null,m.value=!1,F("vocabulary-has-auto-save-file",!1),f.value="",await D(),console.log("Auto-save file reset completed")},isGoogleSignedIn:t(()=>s.isSignedInSync()),googleUserEmail:s.googleUserEmail,googleAuthError:s.authError}}const H={class:"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-[#0a0a0a] dark:to-[#0f0f0f] relative overflow-x-hidden"},W={class:"relative z-10 max-w-full sm:max-w-full md:max-w-full lg:max-w-7xl mx-auto px-2 xs:px-3 sm:px-4 md:px-6 lg:px-8 xl:px-10 2xl:px-12 pt-3 sm:pt-6"},K={class:"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6 mb-3 xs:mb-4 sm:mb-6"},Q={class:"flex items-center mb-4"},Y={class:"text-lg sm:text-xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-400 bg-clip-text text-transparent"},Z={class:"relative z-10 max-w-full sm:max-w-full md:max-w-full lg:max-w-7xl mx-auto py-3 px-2 xs:py-4 xs:px-3 sm:py-6 sm:px-4 md:px-6 lg:px-8 xl:px-10 2xl:px-12 overflow-x-hidden"},X={class:"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] mb-3 xs:mb-4 sm:mb-6 p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6"},ee={class:"flex items-center mb-4"},oe={class:"text-base sm:text-lg font-semibold bg-gradient-to-r from-blue-600 to-purple-600 dark:from-blue-400 dark:to-purple-400 bg-clip-text text-transparent"},ae={class:"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.005] mb-3 xs:mb-4 sm:mb-6 p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6"},te={class:"flex items-center mb-4"},le={class:"text-base sm:text-lg font-semibold bg-gradient-to-r from-green-600 to-blue-600 dark:from-green-400 dark:to-blue-400 bg-clip-text text-transparent"},re={class:"space-y-4 sm:space-y-6"},ie={class:"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-3 sm:p-4 md:p-5"},se={class:"flex items-center mb-3 sm:mb-4"},ne={class:"text-sm sm:text-base font-semibold bg-gradient-to-r from-purple-600 to-pink-600 dark:from-purple-400 dark:to-pink-400 bg-clip-text text-transparent"},ce={class:"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-3 sm:p-4 md:p-5"},ue={class:"flex items-center mb-3 sm:mb-4"},de={class:"text-sm sm:text-base font-semibold bg-gradient-to-r from-yellow-600 to-orange-600 dark:from-yellow-400 dark:to-orange-400 bg-clip-text text-transparent"},ge={class:"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-3 sm:p-4 md:p-5"},ve={class:"flex items-center mb-3 sm:mb-4"},me={class:"text-sm sm:text-base font-semibold bg-gradient-to-r from-cyan-600 to-blue-600 dark:from-cyan-400 dark:to-blue-400 bg-clip-text text-transparent"},pe={class:"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-[1.003] p-2 xs:p-3 sm:p-4 md:p-5 lg:p-6"},be={class:"fixed bottom-6 z-50 left-1/2 translate-x-4 md:translate-x-4 lg:left-auto lg:right-6 lg:translate-x-0"},he={key:0,class:"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 px-2 py-1 text-xs font-medium text-white bg-gray-900 dark:bg-black dark:text-white dark:border dark:border-dark-bg-mute rounded shadow-lg whitespace-nowrap z-50"},ye="vocabulary-hover-expand-enabled",fe=n({__name:"VocabularyListView",setup(n){const G=s(()=>o(()=>import("./LazyLoadComponent-BObhRYWc.js"),__vite__mapDeps([2,1,3,4]),import.meta.url)),_=s(()=>o(()=>import("./BaseAccordion-DQkowxOL.js"),__vite__mapDeps([5,1,3,6]),import.meta.url)),V=s(()=>o(()=>import("./GroupingToggle-Bpf41AOa.js"),__vite__mapDeps([7,8,1,9,10]),import.meta.url)),O=s(()=>o(()=>import("./ConfirmToast-Kx7tg3SX.js"),__vite__mapDeps([0,1]),import.meta.url)),N=s(()=>o(()=>import("./TopicManagerPanel-DIMGyH6O.js"),__vite__mapDeps([11,9,1]),import.meta.url)),C=s(()=>o(()=>import("./SaveControlPanel-ChoZA-mL.js"),__vite__mapDeps([12,9,1]),import.meta.url)),M=s(()=>o(()=>import("./VocabularyHeader-BiB-g4G3.js"),__vite__mapDeps([13,8,1,9,10]),import.meta.url)),L=s(()=>o(()=>import("./VocabularyFilters-DjFf9O_R.js"),__vite__mapDeps([14,8,1,9,10,15]),import.meta.url)),$=s(()=>o(()=>import("./VocabularyList-CL43IQp2.js"),__vite__mapDeps([16,8,1,9,10,17,18,15]),import.meta.url)),R=s(()=>o(()=>import("./VocabularyFormDialog-DdOu1NR5.js"),__vite__mapDeps([19,8,1,9,10,20,15,3,21]),import.meta.url)),U=s(()=>o(()=>import("./VocabularyDetailDialog-dEnL9C7t.js"),__vite__mapDeps([22,1,9,23,8,10,18,15,3,24]),import.meta.url)),B=s(()=>o(()=>import("./VocabularyNoteDialog-CG-S5I-Y.js"),__vite__mapDeps([25,1,9,18,23,3,26]),import.meta.url)),j=s(()=>o(()=>import("./GrammarManagerModal-Cf9ha7xP.js"),__vite__mapDeps([27,8,1,9,10,20,18,15,3,28]),import.meta.url)),J=s(()=>o(()=>import("./MoveModal-C_cZdUXg.js"),__vite__mapDeps([29,1,9,15,3,30]),import.meta.url)),z=s(()=>o(()=>import("./VoiceSelector-NMc1IGA3.js"),__vite__mapDeps([31,8,1,9,10,23]),import.meta.url)),fe=s(()=>o(()=>import("./TopicManager-elcQ92o-.js"),__vite__mapDeps([32,1,9,3,33]),import.meta.url)),we=s(()=>o(()=>import("./DeleteAllVocabulariesPanel-g2kz5xiA.js"),__vite__mapDeps([34,9,1,20,8,10,23]),import.meta.url)),{t:Se,locale:ke}=A(),xe=T(),Ae=E(),Te=D(),Ie=e(),De=a(5),{searchQuery:Ee,selectedCategory:Ge,selectedLevel:Fe,showFavoritesOnly:_e,updateShowFavoritesOnly:Pe,updateSearchQuery:Ve,updateSelectedCategory:Oe,updateSelectedLevel:Ne}=function(){const e=a(""),o=a(""),t=a(""),l=a(!1),r=a(1),i=a({});function s(e,o){try{const a=localStorage.getItem(e);return null!==a?JSON.parse(a):o}catch{return o}}function n(e,o){localStorage.setItem(e,JSON.stringify(o))}return l.value=s("vocabulary-show-favorites-only",!1),e.value=s("vocabulary-search-query",""),o.value=s("vocabulary-selected-category",""),t.value=s("vocabulary-selected-level",""),{searchQuery:e,selectedCategory:o,selectedLevel:t,showFavoritesOnly:l,currentPage:r,dateGroupPages:i,updateShowFavoritesOnly:e=>{l.value=e,n("vocabulary-show-favorites-only",e),r.value=1,i.value={}},updateSearchQuery:o=>{e.value=o,n("vocabulary-search-query",o),r.value=1,i.value={}},updateSelectedCategory:e=>{o.value=e,n("vocabulary-selected-category",e),r.value=1,i.value={}},updateSelectedLevel:e=>{t.value=e,n("vocabulary-selected-level",e),r.value=1,i.value={}}}}(),{useGrouping:Ce,itemsPerPageGrouped:Me,dateGroupPages:Le,toggleGrouping:$e,reloadGroupingState:Re,dateGroupPrevious:Ue,dateGroupNext:Be,dateGroupGoToPage:je}=P(),Je=e=>{try{localStorage.setItem(ye,JSON.stringify(e))}catch(o){console.warn("Failed to save hover expand state to localStorage:",o)}},ze=a((()=>{try{const e=localStorage.getItem(ye);return!!e&&JSON.parse(e)}catch(e){return console.warn("Failed to load hover expand state from localStorage:",e),!1}})()),{globalMoveMode:qe,showMoveModal:He,wordToMove:We,availableDateGroups:Ke,currentSourceDate:Qe,toggleMoveMode:Ye,handleMoveVocabulary:Ze,handleBatchMoveCategory:Xe,closeMoveModal:eo,confirmMove:oo}=function(){const{t:e,locale:o}=A(),t=E(),l=T(),r=a(d()),i=a(!1),s=a(null),n=a(""),c=a([]),u=a("");function d(){try{const e=localStorage.getItem("vocabulary-global-move-mode-enabled");return!!e&&JSON.parse(e)}catch(e){return console.warn("Failed to parse stored move mode preference:",e),!1}}function g(e){try{localStorage.setItem("vocabulary-global-move-mode-enabled",JSON.stringify(e))}catch(o){console.warn("Failed to store move mode preference:",o)}}const v=e=>{const o=F(t.allVocabularies.value);c.value=o.filter(e=>e.date!==u.value).map(e=>({date:e.date,count:e.vocabularies.length})).sort((e,o)=>new Date(o.date).getTime()-new Date(e.date).getTime())},m=async o=>{try{const a=t.allVocabularies.value.findIndex(e=>e.id===o.word.id);if(-1===a)throw new Error("Word not found");{const r={...o.word,createdAt:o.targetDate,updatedAt:o.targetDate};t.allVocabularies.value[a]=r,l.success(e("vocabulary.moveSuccess",{word:o.word.word,date:p(o.targetDate)},`Successfully moved "${o.word.word}" to ${p(o.targetDate)}`),{timeout:3e3}),console.log(`Moved vocabulary "${o.word.word}" to ${o.targetDate}`)}}catch(a){console.error("Failed to move vocabulary:",a),l.error(e("vocabulary.moveError",{word:o.word.word,error:a.message},`Failed to move "${o.word.word}": ${a.message}`),{timeout:5e3})}},p=e=>new Date(e).toLocaleDateString(o.value,{year:"numeric",month:"short",day:"numeric"}),b=()=>{i.value=!1,s.value=null,n.value="",c.value=[],u.value=""},h=async o=>{try{const a=s.value?.batchWords||[],r=s.value?.categoryName||"";a.forEach(e=>{const a=t.allVocabularies.value.findIndex(o=>o.id===e.id);if(-1!==a){const l={...e,createdAt:o,updatedAt:o};t.allVocabularies.value[a]=l}}),l.success(e("vocabulary.batchMoveSuccess",{count:a.length,category:r,date:p(o)},`Successfully moved ${a.length} words from "${r}" to ${p(o)}`),{timeout:3e3}),console.log(`Batch moved ${a.length} words from category "${r}" to ${o}`)}catch(a){console.error("Failed to batch move vocabulary:",a),l.error(e("vocabulary.batchMoveError",{error:a.message},`Failed to batch move: ${a.message}`),{timeout:5e3})}};return{globalMoveMode:r,showMoveModal:i,wordToMove:s,selectedTargetDate:n,availableDateGroups:c,currentSourceDate:u,toggleMoveMode:e=>{r.value=e,g(e)},handleMoveVocabulary:e=>{e.targetDate?m(e):(s.value={...e.word,categoryName:e.word.category,isBatchMove:!1},u.value=e.sourceDate||"",v(e.word.category),i.value=!0)},handleBatchMoveCategory:e=>{const o=e.words,a=e.topic;s.value={...o[0],isBatchMove:!0,batchWords:o,categoryName:a},u.value=e.sourceDate;const l=F(t.allVocabularies.value);c.value=l.filter(o=>o.date!==e.sourceDate).map(e=>({date:e.date,count:e.vocabularies.length})).sort((e,o)=>new Date(o.date).getTime()-new Date(e.date).getTime()),i.value=!0},loadAvailableDateGroups:v,performMoveVocabulary:m,performBatchMove:h,closeMoveModal:b,confirmMove:e=>{e.word.isBatchMove?h(e.targetDate):m(e),b()},formatDateForDisplay:p,getStoredMoveMode:d,setStoredMoveMode:g}}(),ao=a(!1),to=a(""),lo=a([]),ro=t(()=>Ae.allVocabularies.value.filter(e=>{const o=!Ee.value||e.word.toLowerCase().includes(Ee.value.toLowerCase())||e.meaning.toLowerCase().includes(Ee.value.toLowerCase()),a=!Ge.value||e.category===Ge.value,t=!Fe.value||e.level===Fe.value,l=!_e.value||!0===e.favorite;return o&&a&&t&&l})),{currentPage:io,totalPages:so,paginatedVocabulary:no,startIndex:co,endIndex:uo,visiblePages:go,previousPage:vo,nextPage:mo,goToPage:po}=function(e,o,l){const r=a(1),i=t(()=>o.value?1:Math.ceil(e.value.length/l.value)),s=t(()=>{if(o.value)return e.value;const a=(r.value-1)*l.value,t=a+l.value;return e.value.slice(a,t)}),n=t(()=>(r.value-1)*l.value+1),c=t(()=>Math.min(r.value*l.value,e.value.length)),u=t(()=>{const e=[],o=Math.max(1,r.value-2),a=Math.min(i.value,r.value+2);for(let t=o;t<=a;t++)e.push(t);return e});return{currentPage:r,totalPages:i,paginatedVocabulary:s,startIndex:n,endIndex:c,visiblePages:u,previousPage:()=>{r.value>1&&r.value--},nextPage:()=>{r.value<i.value&&r.value++},goToPage:e=>{r.value=e}}}(ro,Ce,De),{showFormDialog:bo,selectedVocabulary:ho,showDetailDialog:yo,selectedVocabularyForDetail:fo,openAddDialog:wo,openEditDialog:So,onVocabularySaved:ko,openDetailsDialog:xo,openEditFromDetail:Ao}=function(){const e=a(!1),o=a(null),t=a(!1),l=a(null);return{showFormDialog:e,selectedVocabulary:o,showDetailDialog:t,selectedVocabularyForDetail:l,openAddDialog:()=>{o.value=null,e.value=!0,window.dispatchEvent(new CustomEvent("vocabulary-edit-word"))},openEditDialog:a=>{o.value=a,e.value=!0,window.dispatchEvent(new CustomEvent("vocabulary-edit-word"))},onVocabularySaved:()=>{e.value=!1,o.value=null},openDetailsDialog:e=>{l.value=e,t.value=!0,window.dispatchEvent(new CustomEvent("vocabulary-view-details"))},openEditFromDetail:a=>{t.value=!1,o.value=a,e.value=!0,window.dispatchEvent(new CustomEvent("vocabulary-edit-word"))}}}(),To=a(null),Io=e=>{ko(),ba.value=null,e?.category&&(To.value=e.category,console.log("Recently added category:",e.category)),Do.value&&(Mo(),console.log("Auto-save triggered from Add Word in date group")),Ce.value&&x(()=>{Re(),console.log("Grouping state reloaded after vocabulary saved")})},{autoSaveEnabled:Do,isSaving:Eo,lastSaveTime:Go,hasAutoSaveFile:Fo,hasGoogleDriveFile:_o,storageType:Po,saveStatus:Vo,getSaveStatusColor:Oo,getSaveStatusText:No,manualSave:Co,debounceAutoSave:Mo,scheduleAutoSave:Lo,setupAutoSaveFile:$o,setupGoogleDrive:Ro,syncFromGoogleDrive:Uo,handleGoogleSignIn:Bo,handleGoogleSignOut:jo,handleFileImport:Jo,resetAutoSaveFile:zo,autoSaveFilePath:qo,isGoogleSignedIn:Ho,googleUserEmail:Wo,googleAuthError:Ko}=q(),{showTopicManager:Qo,openTopicManager:Yo,onTopicAdded:Zo,onTopicUpdated:Xo,onTopicDeleted:ea}=function(o){const t=a(!1),r=E(),i=e();return l(t,e=>{i.setTopicManager(e)}),{showTopicManager:t,openTopicManager:()=>{t.value=!0,i.setTopicManager(!0)},onTopicAdded:e=>{r.addCustomTopic(e),o(),window.dispatchEvent(new CustomEvent("topics-updated"))},onTopicUpdated:(e,a)=>{r.allVocabularies.value.forEach(o=>{o.category===e&&r.updateVocabulary(o.id,{category:a.key})}),r.updateCustomTopic(e,a),o(),window.dispatchEvent(new CustomEvent("topics-updated"))},onTopicDeleted:e=>{r.deleteCustomTopic(e),o(),window.dispatchEvent(new CustomEvent("topics-updated"))}}}(Mo),oa=t(()=>{const e=new Set(Ae.allVocabularies.value.map(e=>e.category));return Array.from(e).sort()}),aa=t(()=>Ae.getCategoryUsage.value),ta=t(()=>ca.value&&!bo.value&&!Ie.shouldHideAddNewWord),la=t(()=>{if(!Go.value)return Se("vocabulary.save.notSaved","Not saved");const e=No.value,o=Go.value,a=Se("vocabulary.save.lastSave",{time:o},"Last saved: {time}");let t;return t=a&&a.includes("{time}")?a.replace("{time}",o):a||`Last saved: ${o}`,`${t} - ${e}`}),ra=e=>{const o=xe({component:O,props:{message:Se("vocabulary.confirmDelete",{word:e.word}),confirmText:Se("common.confirm"),cancelText:Se("common.cancel"),onConfirm:()=>{Ae.deleteVocabulary(e.id),Mo(),xe.dismiss(o),xe.success(Se("vocabulary.deleteSuccess",{word:e.word})||`Successfully deleted "${e.word}"`)},onCancel:()=>{xe.dismiss(o)}}},{position:I.TOP_CENTER,timeout:!1,closeButton:!1,draggable:!1,icon:!1})},ia=e=>{Ae.toggleFavorite(e.id),fo.value&&fo.value.id===e.id&&(fo.value.favorite=!fo.value.favorite),Mo()},sa=async e=>{try{const o=Te.createUtterance(e);await new Promise((e,a)=>{o.onend=()=>e(),o.onerror=e=>a(e.error),"speechSynthesis"in window?speechSynthesis.speak(o):a(new Error("Speech synthesis not supported"))})}catch(o){if(console.error("Error playing audio:",o),"speechSynthesis"in window){const o=new SpeechSynthesisUtterance(e);o.lang="en-US",speechSynthesis.speak(o)}}};l(()=>Ae.allVocabularies.value,(e,o)=>{const a=e?.length||0,t=o?.length||0;Do.value&&a>0&&void 0!==t&&a!==t&&(Vo.value="saving",Mo()),Ce.value&&a!==t&&a>0&&x(()=>{Re(),console.log("Grouping state reloaded due to vocabulary count change")})},{deep:!0,immediate:!1}),l(()=>Ae.allVocabularies.value.map(e=>({id:e.id,favorite:e.favorite,word:e.word,meaning:e.meaning})),(e,o)=>{Do.value&&e.length>0&&o&&JSON.stringify(e)!==JSON.stringify(o)&&Mo()},{deep:!0}),l(ze,e=>{Je(e)}),l(ao,e=>{e?document.body.classList.add("modal-open"):bo.value||document.body.classList.remove("modal-open"),Ie.setNoteDialog(e)}),l(bo,e=>{e?(document.body.classList.add("modal-open"),ua.value=!1):ao.value||document.body.classList.remove("modal-open"),Ie.setVocabularyForm(e)}),r(()=>{Ae.initializeStore(),Do.value&&Lo(),window.addEventListener("vocabulary-notes-updated",()=>{Do.value&&Mo()}),window.addEventListener("grammar-rules-updated",()=>{Do.value&&Mo()}),window.addEventListener("scroll",ma,{passive:!0}),ma()});const na=e=>{const o=e=>{x(()=>{Re(),console.log("Grouping state reloaded after import")}),window.removeEventListener("vocabularyImportComplete",o)};window.addEventListener("vocabularyImportComplete",o),Jo(e)},ca=a(!1),ua=a(!1),da=a(0);a(!1);const ga=a(0),va=a(!0),ma=()=>{const e=window.scrollY,o=document.querySelector("[data-vocabulary-header]")||document.querySelector("header");0===da.value&&o&&(da.value=o.offsetHeight);const a=(()=>{try{const e=localStorage.getItem("accordion-vocabulary-header");return null===e||JSON.parse(e)}catch{return!0}})();va.value=a;const t=document.querySelector("[data-original-add-button]");let l=!1;if(t){const e=t.getBoundingClientRect(),o=window.getComputedStyle(t);l=e.height>0&&e.width>0&&"none"!==o.display&&"hidden"!==o.visibility&&"0"!==o.opacity}const r=da.value||120;let i;i=!va.value||!l&&e>r,ca.value=i,ga.value=e},pa=(e,o)=>{to.value=e,lo.value=o,ao.value=!0},ba=a(null),ha=a(!1),ya=a(null),fa=e=>{ba.value=e,ho.value=null,bo.value=!0,window.dispatchEvent(new CustomEvent("vocabulary-edit-word"))},wa=e=>{console.log("Opening grammar manager for date:",e),ya.value=e,ha.value=!0,Ie.setGrammarManager(!0),console.log("Modal state:",ha.value)};l(ha,e=>{e?document.body.classList.add("modal-open"):ao.value||bo.value||document.body.classList.remove("modal-open"),Ie.setGrammarManager(e)});const Sa=(e,o)=>{xe.success(Se("vocabulary.notes.saveSuccess","Notes saved successfully"),{timeout:2e3}),Do.value&&(xe.info(Se("vocabulary.notes.autoSaveNotice","Notes will be included in auto-save"),{timeout:3e3}),Mo()),console.log(`Note saved for ${to.value} with ${o.length} marked words`)},ka=()=>{io.value=1,To.value=null,Ce.value&&x(()=>{Re(),console.log("Grouping state reloaded after delete all")}),Do.value&&Mo()},xa=()=>{io.value=1,To.value=null,Ce.value=!1,Do.value=!1,ze.value=!1,qe.value=!1,x(()=>{Re(),console.log("Grouping state reloaded after local store clear")}),xe.info(Se("vocabulary.deleteAll.localStoreClearedInfo","Application has been reset to initial state. All local preferences have been cleared."),{timeout:5e3}),console.log("Local store cleared, application reset to initial state")};l(ze,e=>{Je(e)}),l(qe,e=>{Ye(e)});const Aa=e=>{"accordion-vocabulary-header"===e.key&&setTimeout(()=>ma(),50)};return r(()=>{document.addEventListener("scroll",ma),window.addEventListener("storage",Aa);const e=document.querySelector("[data-vocabulary-header] button");e&&e.addEventListener("click",()=>{setTimeout(()=>ma(),100)}),ma()}),i(()=>{document.removeEventListener("scroll",ma),window.removeEventListener("storage",Aa),document.body.classList.remove("modal-open")}),(e,o)=>(u(),c("div",H,[o[26]||(o[26]=d('<div class="absolute inset-0 overflow-hidden pointer-events-none z-0"><div class="floating-shapes"><div class="absolute top-20 left-10 w-64 h-64 bg-blue-300 dark:bg-blue-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob"></div><div class="absolute top-40 right-10 w-72 h-72 bg-purple-300 dark:bg-purple-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-2000"></div><div class="absolute -bottom-8 left-20 w-80 h-80 bg-pink-300 dark:bg-pink-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-4000"></div><div class="hidden sm:block absolute top-10 left-1/2 -translate-x-1/2 w-40 h-40 bg-cyan-300 dark:bg-cyan-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-1000"></div><div class="hidden sm:block absolute bottom-24 right-24 w-52 h-52 bg-indigo-300 dark:bg-indigo-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-3000"></div><div class="hidden md:block absolute top-1/3 right-1/3 w-36 h-36 bg-emerald-300 dark:bg-emerald-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-30 animate-blob animation-delay-1500"></div><div class="hidden md:block absolute -bottom-20 -right-10 w-96 h-96 bg-blue-200 dark:bg-blue-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-2xl opacity-20 animate-blob animation-delay-2500"></div><div class="hidden lg:block absolute top-1/2 -left-16 w-72 h-72 bg-fuchsia-300 dark:bg-fuchsia-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-3500"></div><div class="hidden xl:block absolute top-6 right-1/4 w-44 h-44 bg-teal-300 dark:bg-teal-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-25 animate-blob animation-delay-500"></div><div class="hidden sm:block absolute top-1/4 left-6 w-24 h-24 bg-sky-300 dark:bg-sky-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-lg opacity-20 animate-blob animation-delay-4500"></div><div class="hidden sm:block absolute bottom-8 left-1/3 w-28 h-28 bg-rose-300 dark:bg-rose-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-lg opacity-20 animate-blob animation-delay-5500"></div><div class="hidden md:block absolute top-16 right-1/3 w-20 h-20 bg-violet-300 dark:bg-violet-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-lg opacity-20 animate-blob animation-delay-6500"></div><div class="hidden md:block absolute bottom-1/3 right-6 w-24 h-24 bg-lime-300 dark:bg-lime-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-lg opacity-20 animate-blob animation-delay-7500"></div><div class="hidden lg:block absolute top-3/4 left-1/4 w-32 h-32 bg-amber-300 dark:bg-amber-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-20 animate-blob animation-delay-8500"></div><div class="hidden lg:block absolute top-8 right-8 w-16 h-16 bg-orange-300 dark:bg-orange-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-md opacity-25 animate-blob animation-delay-1200"></div><div class="hidden xl:block absolute bottom-10 left-1/2 -translate-x-1/2 w-28 h-28 bg-cyan-200 dark:bg-cyan-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-15 animate-blob animation-delay-2200"></div><div class="hidden 2xl:block absolute top-1/5 right-1/5 w-40 h-40 bg-indigo-200 dark:bg-indigo-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-2xl opacity-15 animate-blob animation-delay-5200"></div><div class="hidden lg:block absolute -top-24 left-1/3 w-96 h-96 bg-blue-100 dark:bg-blue-700 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-3xl opacity-10 animate-blob animation-delay-900"></div><div class="hidden lg:block absolute bottom-[-120px] left-[-80px] w-[420px] h-[420px] bg-purple-100 dark:bg-purple-700 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-3xl opacity-10 animate-blob animation-delay-1900"></div><div class="hidden xl:block absolute top-1/3 left-[70%] w-48 h-48 bg-pink-200 dark:bg-pink-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-2xl opacity-15 animate-blob animation-delay-3300"></div><div class="hidden xl:block absolute bottom-1/4 right-[35%] w-32 h-32 bg-cyan-300 dark:bg-cyan-500 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-xl opacity-15 animate-blob animation-delay-6100"></div><div class="hidden 2xl:block absolute top-[12%] left-[12%] w-56 h-56 bg-emerald-200 dark:bg-emerald-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-2xl opacity-15 animate-blob animation-delay-7100"></div><div class="hidden 2xl:block absolute bottom-[8%] right-[12%] w-64 h-64 bg-teal-200 dark:bg-teal-600 rounded-full mix-blend-multiply dark:mix-blend-normal filter blur-2xl opacity-15 animate-blob animation-delay-9100"></div></div></div>',1)),g("div",W,[v(b(G),{"animation-type":"fade-up",threshold:.1,"root-margin":"0px"},{default:m(()=>[g("div",K,[g("div",Q,[o[18]||(o[18]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-blue-400 to-indigo-500 rounded-full mr-2.5"})],-1)),g("h1",Y,p(b(Se)("vocabulary.header.title","Vocabulary")),1)]),v(b(M),{onAddVocabulary:b(wo)},null,8,["onAddVocabulary"])])]),_:1})]),g("div",Z,[v(b(G),{"animation-type":"slide-left",threshold:.1,"root-margin":"-50px"},{default:m(()=>[g("div",X,[g("div",ee,[o[19]||(o[19]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full mr-2.5"})],-1)),g("h3",oe,p(b(Se)("vocabulary.filters.title","Filters")),1)]),v(b(L),{"search-query":b(Ee),"selected-category":b(Ge),"selected-level":b(Fe),categories:oa.value,"show-favorites-only":b(_e),"onUpdate:searchQuery":b(Ve),"onUpdate:selectedCategory":b(Oe),"onUpdate:selectedLevel":b(Ne),"onUpdate:showFavoritesOnly":b(Pe)},null,8,["search-query","selected-category","selected-level","categories","show-favorites-only","onUpdate:searchQuery","onUpdate:selectedCategory","onUpdate:selectedLevel","onUpdate:showFavoritesOnly"])])]),_:1}),v(b(G),{"animation-type":"slide-right",threshold:.1,"root-margin":"-50px"},{default:m(()=>[g("div",ae,[g("div",te,[o[20]||(o[20]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-green-400 to-blue-500 rounded-full mr-2.5"})],-1)),g("h3",le,p(b(Se)("vocabulary.grouping.title","Grouping & Move Mode")),1)]),v(b(V),{"model-value":b(Ce),"hover-enabled":ze.value,"move-mode":b(qe),"onUpdate:modelValue":b($e),"onUpdate:hoverEnabled":o[0]||(o[0]=e=>ze.value=e),"onUpdate:moveMode":o[1]||(o[1]=e=>qe.value=e)},null,8,["model-value","hover-enabled","move-mode","onUpdate:modelValue"])])]),_:1}),v(b(G),{"animation-type":"scale",threshold:.1,"root-margin":"-50px"},{default:m(()=>[v(b(_),{title:b(Se)("vocabulary.tools.accordionTitle","Tools & Settings"),description:b(Se)("vocabulary.tools.accordionDescription","Voice settings, topic manager, and save & sync options"),icon:"settings","default-open":!0,"persist-key":"vocabulary-tools","status-text":la.value,"status-color":b(Oo),"show-status-when-closed":!0,class:"mb-3 xs:mb-4 sm:mb-6"},{default:m(()=>[g("div",re,[g("div",ie,[g("div",se,[o[21]||(o[21]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full mr-2.5"})],-1)),g("h3",ne,p(b(Se)("voice.settings.title","Voice Settings")),1)]),v(b(z),{"show-voice-info":!0})]),g("div",ce,[g("div",ue,[o[22]||(o[22]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full mr-2.5"})],-1)),g("h3",de,p(b(Se)("vocabulary.topicManager.title","Topic Manager")),1)]),v(b(N),{onOpen:b(Yo)},null,8,["onOpen"])]),g("div",ge,[g("div",ve,[o[23]||(o[23]=g("div",{class:"animate-pulse-slow"},[g("div",{class:"w-2.5 h-2.5 bg-gradient-to-r from-cyan-400 to-blue-500 rounded-full mr-2.5"})],-1)),g("h3",me,p(b(Se)("vocabulary.save.title","Save & Sync")),1)]),v(b(C),{"auto-save-enabled":b(Do),"onUpdate:autoSaveEnabled":o[2]||(o[2]=e=>Do.value=e),"is-saving":b(Eo),"has-auto-save-file":b(Fo),"onUpdate:hasAutoSaveFile":o[3]||(o[3]=e=>Fo.value=e),"has-google-drive-file":b(_o),"onUpdate:hasGoogleDriveFile":o[4]||(o[4]=e=>_o.value=e),"storage-type":b(Po),"onUpdate:storageType":o[5]||(o[5]=e=>Po.value=e),"is-google-signed-in":b(Ho),"onUpdate:isGoogleSignedIn":o[6]||(o[6]=e=>Ho.value=e),"google-user-email":b(Wo),"google-auth-error":b(Ko),"auto-save-file-path":b(qo),"onUpdate:autoSaveFilePath":o[7]||(o[7]=e=>qo.value=e),"last-save-time":b(Go),"save-status-color":b(Oo),"save-status-text":b(No),onManualSave:b(Co),onSetupAutoSave:b($o),onSetupGoogleDrive:b(Ro),onGoogleSignIn:b(Bo),onGoogleSignOut:b(jo),onSyncFromGoogleDrive:b(Uo),onResetAutoSave:b(zo),onImportFile:na},null,8,["auto-save-enabled","is-saving","has-auto-save-file","has-google-drive-file","storage-type","is-google-signed-in","google-user-email","google-auth-error","auto-save-file-path","last-save-time","save-status-color","save-status-text","onManualSave","onSetupAutoSave","onSetupGoogleDrive","onGoogleSignIn","onGoogleSignOut","onSyncFromGoogleDrive","onResetAutoSave"])]),v(b(we),{"total-count":ro.value.length,"auto-save-enabled":b(Do),"use-grouping":b(Ce),onVocabulariesDeleted:ka,onLocalStoreCleared:xa},null,8,["total-count","auto-save-enabled","use-grouping"])])]),_:1},8,["title","description","status-text","status-color"])]),_:1}),v(b(G),{"animation-type":"slide-left",threshold:.05,"root-margin":"-50px"},{default:m(()=>[g("div",pe,[v(b($),{"paginated-words":b(Ce)?[]:b(no),"current-page":b(io),"total-pages":b(so),"total-count":ro.value.length,"start-index":b(co),"end-index":b(uo),"visible-pages":b(go),"use-grouping":b(Ce),"all-words":b(Ce)?ro.value:void 0,"date-group-pages":b(Le),"items-per-page-grouped":b(Me),"hover-to-expand-enabled":ze.value,"global-move-mode":b(qe),"recently-added-category":To.value,onPlayAudio:sa,onEditWord:b(So),onDeleteWord:ra,onToggleFavorite:ia,onViewDetails:b(xo),onPreviousPage:b(vo),onNextPage:b(mo),onGoToPage:b(po),onDateGroupPrevious:o[8]||(o[8]=e=>b(Ue)(e,ro.value)),onDateGroupNext:o[9]||(o[9]=e=>b(Be)(e,ro.value)),onDateGroupGoToPage:b(je),onMoveVocabulary:b(Ze),onOpenNoteDialog:pa,onOpenAddVocabularyDialog:fa,onOpenGrammarManager:wa,onBatchMoveCategory:b(Xe)},null,8,["paginated-words","current-page","total-pages","total-count","start-index","end-index","visible-pages","use-grouping","all-words","date-group-pages","items-per-page-grouped","hover-to-expand-enabled","global-move-mode","recently-added-category","onEditWord","onViewDetails","onPreviousPage","onNextPage","onGoToPage","onDateGroupGoToPage","onMoveVocabulary","onBatchMoveCategory"])])]),_:1})]),v(b(R),{modelValue:b(bo),"onUpdate:modelValue":o[10]||(o[10]=e=>h(bo)?bo.value=e:null),vocabulary:b(ho),"target-date":ba.value,onVocabularySaved:Io},null,8,["modelValue","vocabulary","target-date"]),v(b(U),{modelValue:b(yo),"onUpdate:modelValue":o[11]||(o[11]=e=>h(yo)?yo.value=e:null),vocabulary:b(fo),onEditVocabulary:b(Ao),onToggleFavorite:ia},null,8,["modelValue","vocabulary","onEditVocabulary"]),v(b(fe),{modelValue:b(Qo),"onUpdate:modelValue":o[12]||(o[12]=e=>h(Qo)?Qo.value=e:null),"vocabulary-usage":aa.value,onTopicAdded:b(Zo),onTopicUpdated:b(Xo),onTopicDeleted:b(ea)},null,8,["modelValue","vocabulary-usage","onTopicAdded","onTopicUpdated","onTopicDeleted"]),v(b(B),{modelValue:ao.value,"onUpdate:modelValue":o[13]||(o[13]=e=>ao.value=e),date:to.value,"today-words":lo.value,onSaveNote:Sa},null,8,["modelValue","date","today-words"]),v(b(j),{modelValue:ha.value,"onUpdate:modelValue":o[14]||(o[14]=e=>ha.value=e),selectedDate:ya.value},null,8,["modelValue","selectedDate"]),v(k,{name:"fade-scale"},{default:m(()=>[y(g("div",be,[g("button",{onClick:o[15]||(o[15]=(...e)=>b(wo)&&b(wo)(...e)),onMouseenter:o[16]||(o[16]=e=>ua.value=!0),onMouseleave:o[17]||(o[17]=e=>ua.value=!1),class:"relative bg-blue-500 hover:bg-blue-600 text-white font-medium w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16 rounded-full shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105 flex items-center justify-center"},[o[25]||(o[25]=g("svg",{class:"w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8",fill:"currentColor",viewBox:"0 0 20 20"},[g("path",{"fill-rule":"evenodd",d:"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z","clip-rule":"evenodd"})],-1)),ua.value?(u(),c("div",he,[w(p(b(Se)("vocabulary.addNew","Add New Word"))+" ",1),o[24]||(o[24]=g("div",{class:"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900 dark:border-t-black"},null,-1))])):f("",!0)],32)],512),[[S,ta.value]])]),_:1}),v(b(J),{"show-modal":b(He),"word-to-move":b(We),"available-date-groups":b(Ke),"source-date":b(Qe),"all-vocabularies":b(Ae).allVocabularies.value,onClose:b(eo),onConfirmMove:b(oo)},null,8,["show-modal","word-to-move","available-date-groups","source-date","all-vocabularies","onClose","onConfirmMove"])]))}});export{fe as default};
