{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA,UAAM,gBAAgB,qBAAqB,0BAAM,OAAO,6BAAuC,oDAAC;AAQhG,UAAM,OAAO;AAEb,UAAM,EAAE,MAAM;;0BAjHZA,YAgGgBC,MAAA;AAAA,QA/Fb,OAAOA,MAAA,GAAC;AAAA,QACR,aAAaA,MAAA,GAAC;AAAA,QACf,MAAK;AAAA,QACJ,gBAAc;AAAA,QACf,eAAY;AAAA,QACZ,OAAM;AAAA;yBAEN,MAuFM;AAAA,UAvFNC,gBAuFM,OAvFN,YAuFM;AAAA,YArFNA,gBA0BM,OA1BN,YA0BM;AAAA,cAzBJA,gBAQM,OARN,YAQM;AAAA,0CAPJA,gBAEM;AAAA,kBAFD,OAAM;AAAA,kBAAyD,MAAK;AAAA,kBAAe,SAAQ;AAAA;kBAC9FA,gBAA0M;AAAA,oBAApM,aAAU;AAAA,oBAAU,GAAE;AAAA,oBAAyJ,aAAU;AAAA;;gBAEjMA,gBAGM;AAAA,kBAFJA,gBAAmI,MAAnI,YAAmIC,gBAAvDF,MAAA,GAAC;AAAA,kBAC7EC,gBAA6J,KAA7J,YAA6JC,gBAAtFF,MAAA,GAAC;AAAA;;cAG5EC,gBAeS;AAAA,gBAdN,SAAK,sCAAE,KAAI,sBAAuBE,eAAU;AAAA,gBAC5C,OAAKC,eAAA;AAAA;;kBAAgID,kBAAU;AAAA;;gBAMhJF,gBAME;AAAA,kBALC,OAAKG,eAAA;AAAA;;oBAAsID,kBAAU;AAAA;;;;YAUjJA,mBAAXE,UAAA,GAAAC,mBA0BM,OA1BN,YA0BM;AAAA,cAzBJL,gBAQM,OARN,YAQM;AAAA,0CAPJA,gBAEM;AAAA,kBAFD,OAAM;AAAA,kBAAyD,MAAK;AAAA,kBAAe,SAAQ;AAAA;kBAC9FA,gBAAiM;AAAA,oBAA3L,aAAU;AAAA,oBAAU,GAAE;AAAA,oBAAgJ,aAAU;AAAA;;gBAExLA,gBAGM;AAAA,kBAFJA,gBAA6I,MAA7I,YAA6IC,gBAAjEF,MAAA,GAAC;AAAA,kBAC7EC,gBAAuK,KAAvK,YAAuKC,gBAAhGF,MAAA,GAAC;AAAA;;cAG5EC,gBAeS;AAAA,gBAdN,SAAK,sCAAE,KAAI,wBAAyBM,iBAAY;AAAA,gBAChD,OAAKH,eAAA;AAAA;;kBAAgIG,oBAAY;AAAA;;gBAMlJN,gBAME;AAAA,kBALC,OAAKG,eAAA;AAAA;;oBAAsIG,oBAAY;AAAA;;;;YAUnJJ,mBAAXE,UAAA,GAAAC,mBA0BM,OA1BN,aA0BM;AAAA,cAzBJL,gBAQM,OARN,aAQM;AAAA,0CAPJA,gBAEM;AAAA,kBAFD,OAAM;AAAA,kBAAyD,MAAK;AAAA,kBAAe,SAAQ;AAAA;kBAC9FA,gBAA4L;AAAA,oBAAtL,aAAU;AAAA,oBAAU,GAAE;AAAA,oBAA2I,aAAU;AAAA;;gBAEnLA,gBAGM;AAAA,kBAFJA,gBAA+H,MAA/H,aAA+HC,gBAAnDF,MAAA,GAAC;AAAA,kBAC7EC,gBAA4O,KAA5O,aAA4OC,gBAArKM,gBAAWR,MAAA,0EAAyEA,MAAA,GAAC;AAAA;;cAGhKC,gBAeS;AAAA,gBAdN,SAAK,sCAAE,KAAI,oBAAqBO,aAAQ;AAAA,gBACxC,OAAKJ,eAAA;AAAA;;kBAAgII,gBAAQ;AAAA;;gBAM9IP,gBAME;AAAA,kBALC,OAAKG,eAAA;AAAA;;oBAAsII,gBAAQ;AAAA","names":["_createBlock","_unref","_createElementVNode","_toDisplayString","modelValue","_normalizeClass","_openBlock","_createElementBlock","hoverEnabled","moveMode"],"ignoreList":[],"sources":["../../src/views/vocabulary/components/GroupingToggle.vue"],"sourcesContent":["<template>\n  <BaseAccordion\n    :title=\"t('vocabulary.grouping.accordionTitle', 'Group by Date Settings')\"\n    :description=\"t('vocabulary.grouping.accordionDescription', 'Configure how vocabulary is grouped and displayed')\"\n    icon=\"vocabulary\"\n    :default-open=\"true\"\n    persist-key=\"vocabulary-grouping\"\n    class=\"mb-4 sm:mb-6\"\n  >\n    <div class=\"p-3 sm:p-4 md:p-5 lg:p-6\">\n    <!-- Group by Date Toggle -->\n    <div class=\"flex items-center justify-between mb-3 sm:mb-4\">\n      <div class=\"flex items-center space-x-2 sm:space-x-3\">\n        <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\" clip-rule=\"evenodd\"/>\n        </svg>\n        <div>\n          <h3 class=\"text-xs sm:text-sm font-medium text-gray-900 dark:text-white\">{{ t('vocabulary.grouping.title', 'Group by Date') }}</h3>\n          <p class=\"text-xs text-gray-500 dark:text-gray-400 hidden sm:block\">{{ t('vocabulary.grouping.description', 'Group vocabulary words by creation date') }}</p>\n        </div>\n      </div>\n      <button\n        @click=\"emit('update:modelValue', !modelValue)\"\n        :class=\"[\n          'relative inline-flex items-center rounded-full transition-colors',\n          'h-5 w-9 sm:h-6 sm:w-11',\n          modelValue ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-600'\n        ]\"\n      >\n        <span\n          :class=\"[\n            'inline-block transform rounded-full bg-white transition-transform',\n            'h-3 w-3 sm:h-4 sm:w-4',\n            modelValue ? 'translate-x-5 sm:translate-x-6' : 'translate-x-1'\n          ]\"\n        />\n      </button>\n    </div>\n    \n    <!-- Hover to Expand Toggle (only show when grouping is enabled) -->\n    <div v-if=\"modelValue\" class=\"flex items-center justify-between pt-3 sm:pt-4 border-t border-gray-200 dark:border-gray-700 mb-3 sm:mb-4\">\n      <div class=\"flex items-center space-x-2 sm:space-x-3\">\n        <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\"/>\n        </svg>\n        <div>\n          <h3 class=\"text-xs sm:text-sm font-medium text-gray-900 dark:text-white\">{{ t('vocabulary.grouping.hoverToExpand', 'Hover to Expand') }}</h3>\n          <p class=\"text-xs text-gray-500 dark:text-gray-400 hidden sm:block\">{{ t('vocabulary.grouping.hoverDescription', 'Expand date groups on hover instead of click') }}</p>\n        </div>\n      </div>\n      <button\n        @click=\"emit('update:hoverEnabled', !hoverEnabled)\"\n        :class=\"[\n          'relative inline-flex items-center rounded-full transition-colors',\n          'h-5 w-9 sm:h-6 sm:w-11',\n          hoverEnabled ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-600'\n        ]\"\n      >\n        <span\n          :class=\"[\n            'inline-block transform rounded-full bg-white transition-transform',\n            'h-3 w-3 sm:h-4 sm:w-4',\n            hoverEnabled ? 'translate-x-5 sm:translate-x-6' : 'translate-x-1'\n          ]\"\n        />\n      </button>\n    </div>\n    \n    <!-- Move Mode Toggle -->\n    <div v-if=\"modelValue\" class=\"flex items-center justify-between pt-3 sm:pt-4 border-t border-gray-200 dark:border-gray-700\">\n      <div class=\"flex items-center space-x-2 sm:space-x-3\">\n        <svg class=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\" clip-rule=\"evenodd\"/>\n        </svg>\n        <div>\n          <h3 class=\"text-xs sm:text-sm font-medium text-gray-900 dark:text-white\">{{ t('vocabulary.moveMode.title', 'Move Mode') }}</h3>\n          <p class=\"text-xs text-gray-500 dark:text-gray-400 hidden sm:block\">{{ moveMode ? t('vocabulary.moveMode.active', 'Active - Click arrows to move words') : t('vocabulary.moveMode.inactive', 'Inactive - Enable to show move arrows') }}</p>\n        </div>\n      </div>\n      <button\n        @click=\"emit('update:moveMode', !moveMode)\"\n        :class=\"[\n          'relative inline-flex items-center rounded-full transition-colors',\n          'h-5 w-9 sm:h-6 sm:w-11',\n          moveMode ? 'bg-blue-600' : 'bg-gray-200 dark:bg-gray-600'\n        ]\"\n      >\n        <span\n          :class=\"[\n            'inline-block transform rounded-full bg-white transition-transform',\n            'h-3 w-3 sm:h-4 sm:w-4',\n            moveMode ? 'translate-x-5 sm:translate-x-6' : 'translate-x-1'\n          ]\"\n        />\n      </button>\n    </div>\n    </div>\n  </BaseAccordion>\n</template>\n\n<script setup lang=\"ts\">\nimport { defineAsyncComponent } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nconst BaseAccordion = defineAsyncComponent(() => import('../../../components/BaseAccordion.vue'))\n\ndefineProps<{\n  modelValue: boolean;\n  hoverEnabled: boolean;\n  moveMode: boolean;\n}>();\n\nconst emit = defineEmits(['update:modelValue', 'update:hoverEnabled', 'update:moveMode']);\n\nconst { t } = useI18n();\n</script>"],"file":"assets/GroupingToggle-CwwnlzOL.js"}