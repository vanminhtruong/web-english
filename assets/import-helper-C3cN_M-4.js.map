{"version":3,"file":"import-helper-C3cN_M-4.js","sources":["../../src/utils/import-helper.ts"],"sourcesContent":["// Import Helper Utility - Gi·∫£i quy·∫øt l·ªói \"module has no default export\"\r\n// D√†nh ri√™ng cho Vue 3 components s·ª≠ d·ª•ng <script setup>\r\n\r\nimport type { DefineComponent } from 'vue'\r\n\r\n/**\r\n * Import Vue component m·ªôt c√°ch an to√†n\r\n * Gi·∫£i quy·∫øt l·ªói \"module has no default export\" v·ªõi Vue 3 script setup\r\n */\r\nexport async function safeImportComponent(path: string): Promise<DefineComponent> {\r\n  try {\r\n    const module = await import(/* @vite-ignore */ path)\r\n    return module.default || module\r\n  } catch (error) {\r\n    console.error(`Failed to import component from ${path}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Import module v·ªõi fallback\r\n */\r\nexport async function safeImportModule(path: string, fallbackKey?: string): Promise<any> {\r\n  try {\r\n    const module = await import(/* @vite-ignore */ path)\r\n    if (module.default) {\r\n      return module.default\r\n    }\r\n    if (fallbackKey && module[fallbackKey]) {\r\n      return module[fallbackKey]\r\n    }\r\n    return module\r\n  } catch (error) {\r\n    console.error(`Failed to import module from ${path}:`, error)\r\n    throw error\r\n  }\r\n}\r\n\r\n/**\r\n * Load component v·ªõi error handling\r\n */\r\nexport function loadComponentSafely(importFn: () => Promise<any>) {\r\n  return async () => {\r\n    try {\r\n      const module = await importFn()\r\n      return module.default || module\r\n    } catch (error) {\r\n      console.error('Component loading failed:', error)\r\n      // Return fallback component\r\n      return {\r\n        template: '<div class=\"error-component\">Component failed to load</div>'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Batch import components\r\n */\r\nexport async function importComponents(paths: Record<string, string>): Promise<Record<string, DefineComponent>> {\r\n  const components: Record<string, DefineComponent> = {}\r\n  \r\n  for (const [name, path] of Object.entries(paths)) {\r\n    try {\r\n      components[name] = await safeImportComponent(path)\r\n    } catch (error) {\r\n      console.error(`Failed to import component ${name} from ${path}:`, error)\r\n    }\r\n  }\r\n  \r\n  return components\r\n}\r\n\r\n/**\r\n * Import v·ªõi fallback mechanism cho c√°c tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát\r\n */\r\nexport function withImportFallback<T = any>(\r\n  importFn: () => Promise<any>,\r\n  fallback?: T\r\n): () => Promise<T> {\r\n  return async () => {\r\n    try {\r\n      const module = await importFn()\r\n      return module.default || module || fallback\r\n    } catch (error) {\r\n      console.warn('Import failed, using fallback:', error)\r\n      if (fallback !== undefined) {\r\n        return fallback\r\n      }\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\n// Debug utilities\r\nexport const ImportDebug = {\r\n  logImport: (path: string, success: boolean, error?: any) => {\r\n    if (success) {\r\n      console.log(`‚úÖ Successfully imported: ${path}`)\r\n    } else {\r\n      console.error(`‚ùå Failed to import: ${path}`, error)\r\n    }\r\n  },\r\n  \r\n  inspectModule: async (path: string) => {\r\n    try {\r\n      const module = await import(/* @vite-ignore */ path)\r\n      console.log(`üì¶ Module structure for ${path}:`, {\r\n        hasDefault: !!module.default,\r\n        keys: Object.keys(module),\r\n        module\r\n      })\r\n      return module\r\n    } catch (error) {\r\n      console.error(`‚ùå Failed to inspect module ${path}:`, error)\r\n      return null\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAyCO,SAAS,oBAAoB,UAA8B;AAChE,SAAO,YAAY;AACjB,QAAI;AACF,YAAM,SAAS,MAAM,SAAA;AACrB,aAAO,OAAO,WAAW;AAAA,IAC3B,SAAS,OAAO;AACd,cAAQ,MAAM,6BAA6B,KAAK;AAEhD,aAAO;AAAA,QACL,UAAU;AAAA,MAAA;AAAA,IAEd;AAAA,EACF;AACF;"}