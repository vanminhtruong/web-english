{"version":3,"file":"PronunciationExercise-D-oRxe78.js","sources":["../../src/views/grammar/components/PronunciationExercise.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white dark:bg-[#0a0a0a] rounded-xl shadow-lg border border-gray-200 dark:border-white/10 p-6\">\n    <!-- Instruction -->\n    <div class=\"mb-6\">\n      <h3 class=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n        {{ tf('grammar.practice.pronunciation.instruction', 'Pronounce the following correctly') }}\n      </h3>\n      \n      <!-- Target sentence/word -->\n      <div class=\"bg-gray-50 dark:bg-[#0a0a0a]/50 rounded-lg p-4 mb-4\">\n        <div class=\"text-center\">\n          <div class=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            {{ question.targetText }}\n          </div>\n          <div v-if=\"question.phonetic\" class=\"text-lg text-blue-600 dark:text-blue-400 mb-4\">\n            {{ question.phonetic }}\n          </div>\n        </div>\n        \n        <!-- Listen button -->\n        <div class=\"text-center\">\n          <button\n            @click=\"playTargetAudio\"\n            class=\"inline-flex items-center space-x-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.536 8.464a5 5 0 010 7.072m-2.036-5.036a2.5 2.5 0 010 3.536M6 10h4l4.5-4.5v9L10 10H6V8z\" />\n            </svg>\n            <span>{{ tf('grammar.practice.pronunciation.listen', 'Listen') }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Recording Section -->\n    <div class=\"mb-6\">\n      <div class=\"text-center\">\n        <!-- Recording Button -->\n        <button\n          @click=\"toggleRecording\"\n          :disabled=\"isProcessing\"\n          :class=\"[\n            'w-24 h-24 rounded-full border-4 flex items-center justify-center transition-all duration-200 mb-4',\n            isRecording\n              ? 'border-red-500 bg-red-100 dark:bg-red-900/30 animate-pulse'\n              : 'border-gray-300 dark:border-white/10 bg-gray-100 dark:bg-[#0a0a0a] hover:border-blue-500 hover:bg-blue-50 dark:hover:bg-blue-900/30',\n            isProcessing ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'\n          ]\"\n        >\n          <svg \n            v-if=\"!isRecording && !isProcessing\"\n            class=\"w-10 h-10 text-gray-600 dark:text-white/60\" \n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\n          </svg>\n          <svg \n            v-else-if=\"isRecording\"\n            class=\"w-10 h-10 text-red-600\" \n            fill=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n          </svg>\n          <svg \n            v-else\n            class=\"w-10 h-10 text-blue-600 animate-spin\" \n            fill=\"none\" \n            viewBox=\"0 0 24 24\"\n          >\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n        </button>\n        \n        <!-- Recording Status -->\n        <div class=\"text-sm text-gray-600 dark:text-white/60 mb-2\">\n          {{ recordingStatus }}\n        </div>\n        \n        <!-- Duration -->\n        <div v-if=\"isRecording || recordingDuration > 0\" class=\"text-lg font-mono text-blue-600 dark:text-blue-400\">\n          {{ formatTime(recordingDuration) }}\n        </div>\n      </div>\n    </div>\n\n    <!-- Audio Playback (User's Recording) -->\n    <div v-if=\"recordedAudio && !isRecording\" class=\"mb-6\">\n      <div class=\"bg-blue-50 dark:bg-blue-900/30 rounded-lg p-4\">\n        <div class=\"flex items-center justify-between\">\n          <div class=\"flex items-center space-x-3\">\n            <button\n              @click=\"playRecordedAudio\"\n              class=\"p-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h1m4 0h1m-6 4h8m2-10V9a2 2 0 01-2 2H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2z\" />\n              </svg>\n            </button>\n            <span class=\"text-blue-700 dark:text-blue-300 font-medium\">\n              {{ tf('grammar.practice.pronunciation.yourRecording', 'Your recording') }}\n            </span>\n          </div>\n          \n          <button\n            @click=\"clearRecording\"\n            class=\"p-2 text-gray-500 dark:text-white/60 hover:text-red-600 dark:hover:text-red-400 transition-colors\"\n          >\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Pronunciation Feedback -->\n    <div v-if=\"pronunciationScore !== null\" class=\"mb-6\">\n      <div :class=\"[\n        'p-4 rounded-lg border',\n        pronunciationScore >= 80 ? 'bg-green-50 dark:bg-green-900/30 border-green-200 dark:border-green-700' :\n        pronunciationScore >= 60 ? 'bg-yellow-50 dark:bg-yellow-900/30 border-yellow-200 dark:border-yellow-700' :\n        'bg-red-50 dark:bg-red-900/30 border-red-200 dark:border-red-700'\n      ]\">\n        <div class=\"flex items-center justify-between mb-3\">\n          <h4 :class=\"[\n            'font-medium',\n            pronunciationScore >= 80 ? 'text-green-800 dark:text-green-200' :\n            pronunciationScore >= 60 ? 'text-yellow-800 dark:text-yellow-200' :\n            'text-red-800 dark:text-red-200'\n          ]\">\n            {{ t('grammar.practice.pronunciation.feedback') }}\n          </h4>\n          <div :class=\"[\n            'text-2xl font-bold',\n            pronunciationScore >= 80 ? 'text-green-600 dark:text-green-400' :\n            pronunciationScore >= 60 ? 'text-yellow-600 dark:text-yellow-400' :\n            'text-red-600 dark:text-red-400'\n          ]\">\n            {{ pronunciationScore }}%\n          </div>\n        </div>\n        \n        <!-- Progress Bar -->\n        <div class=\"w-full bg-gray-200 dark:bg-white/10 rounded-full h-3 mb-3\">\n          <div \n            :class=\"[\n              'h-3 rounded-full transition-all duration-500',\n              pronunciationScore >= 80 ? 'bg-green-600' :\n              pronunciationScore >= 60 ? 'bg-yellow-600' :\n              'bg-red-600'\n            ]\"\n            :style=\"{ width: `${pronunciationScore}%` }\"\n          ></div>\n        </div>\n        \n        <!-- Feedback Message -->\n        <p :class=\"[\n          'text-sm',\n          pronunciationScore >= 80 ? 'text-green-700 dark:text-green-300' :\n          pronunciationScore >= 60 ? 'text-yellow-700 dark:text-yellow-300' :\n          'text-red-700 dark:text-red-300'\n        ]\">\n          {{ getFeedbackMessage() }}\n        </p>\n      </div>\n    </div>\n\n    <!-- Tips -->\n    <div v-if=\"question.tips && question.tips.length > 0\" class=\"mb-6\">\n      <button\n        @click=\"showTips = !showTips\"\n        class=\"flex items-center space-x-2 text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors\"\n      >\n        <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n        </svg>\n        <span>{{ tf('grammar.practice.pronunciation.tips', 'Tips') }}</span>\n      </button>\n      \n      <div v-if=\"showTips\" class=\"mt-3 p-4 bg-blue-50 dark:bg-blue-900/30 border border-blue-200 dark:border-blue-700 rounded-lg\">\n        <ul class=\"space-y-2\">\n          <li v-for=\"tip in question.tips\" :key=\"tip\" class=\"text-sm text-blue-700 dark:text-blue-300 flex items-start space-x-2\">\n            <span class=\"text-blue-500 mt-1\">â€¢</span>\n            <span>{{ tip }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n\n    <!-- Action Buttons -->\n    <div class=\"flex justify-between items-center\">\n      <div class=\"flex space-x-4\">\n        <!-- Try Again -->\n        <button\n          v-if=\"pronunciationScore !== null && pronunciationScore < 80\"\n          @click=\"resetExercise\"\n          class=\"flex items-center space-x-2 px-4 py-2 text-sm text-blue-600 dark:text-blue-400 hover:text-blue-700 dark:hover:text-blue-300 transition-colors\"\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n          </svg>\n          <span>{{ tf('grammar.practice.pronunciation.tryAgain', 'Try again') }}</span>\n        </button>\n      </div>\n\n      <div class=\"flex space-x-4\">\n        <!-- Submit/Next -->\n        <button\n          v-if=\"pronunciationScore === null\"\n          @click=\"analyzePronunciation\"\n          :disabled=\"!recordedAudio\"\n          class=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors\"\n        >\n          {{ tf('grammar.practice.pronunciation.analyze', 'Analyze pronunciation') }}\n        </button>\n        \n        <button\n          v-else\n          @click=\"nextQuestion\"\n          class=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n        >\n          {{ questionIndex === totalQuestions - 1 ? tf('grammar.practice.finish', 'Finish') : tf('grammar.practice.next', 'Next') }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useVoiceStore } from '../../../stores/voiceStore'\n\nconst { t } = useI18n()\n// Safe translation with explicit fallback and optional params\nconst tf = (key: string, fallback: string, params?: Record<string, any>) => {\n  try {\n    const translated = t(key as any, params as any)\n    return typeof translated === 'string' && translated !== key ? translated : fallback\n  } catch {\n    return fallback\n  }\n}\nconst { playAudio } = useVoiceStore()\n\n// Props\ninterface Props {\n  question: {\n    id: number\n    targetText: string\n    phonetic?: string\n    tips?: string[]\n    audio?: string\n  }\n  questionIndex: number\n  totalQuestions: number\n}\n\nconst props = defineProps<Props>()\n\n// Emits\nconst emit = defineEmits<{\n  answer: [answer: { isCorrect: boolean; score: number; targetText: string }]\n  next: []\n  complete: []\n}>()\n\n// State\nconst isMounted = ref(true)\nconst isRecording = ref(false)\nconst isProcessing = ref(false)\nconst recordedAudio = ref<Blob | null>(null)\nconst recordingDuration = ref(0)\nconst pronunciationScore = ref<number | null>(null)\nconst showTips = ref(false)\nconst mediaRecorder = ref<MediaRecorder | null>(null)\nconst audioChunks = ref<Blob[]>([])\nconst recordingTimer = ref<number | null>(null)\n\n// Computed\nconst recordingStatus = computed(() => {\n  if (isProcessing.value) return tf('grammar.practice.pronunciation.processing', 'Processing...')\n  if (isRecording.value) return tf('grammar.practice.pronunciation.recording', 'Recording...')\n  if (recordedAudio.value) return tf('grammar.practice.pronunciation.recorded', 'Recorded')\n  return tf('grammar.practice.pronunciation.ready', 'Ready to record')\n})\n\n// Methods\nconst toggleRecording = async () => {\n  if (!isRecording.value) {\n    await startRecording()\n  } else {\n    stopRecording()\n  }\n}\n\nconst startRecording = async () => {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n    mediaRecorder.value = new MediaRecorder(stream)\n    audioChunks.value = []\n    recordingDuration.value = 0\n\n    mediaRecorder.value.ondataavailable = (event) => {\n      audioChunks.value.push(event.data)\n    }\n\n    mediaRecorder.value.onstop = () => {\n      const audioBlob = new Blob(audioChunks.value, { type: 'audio/wav' })\n      recordedAudio.value = audioBlob\n      stream.getTracks().forEach(track => track.stop())\n    }\n\n    mediaRecorder.value.start()\n    isRecording.value = true\n    \n    // Start timer\n    recordingTimer.value = setInterval(() => {\n      recordingDuration.value += 1\n      if (recordingDuration.value >= 10) { // Auto-stop after 10 seconds\n        stopRecording()\n      }\n    }, 1000)\n    \n  } catch (error) {\n    console.error('Error accessing microphone:', error)\n    alert(tf('grammar.practice.pronunciation.microphoneError', 'Unable to access microphone. Please check your browser permissions and try again.'))\n  }\n}\n\nconst stopRecording = () => {\n  if (mediaRecorder.value && mediaRecorder.value.state !== 'inactive') {\n    mediaRecorder.value.stop()\n  }\n  isRecording.value = false\n  \n  if (recordingTimer.value) {\n    clearInterval(recordingTimer.value)\n    recordingTimer.value = null\n  }\n}\n\nconst playTargetAudio = async () => {\n  try {\n    await playAudio(props.question.targetText)\n  } catch (error) {\n    console.error('Error playing target audio:', error)\n  }\n}\n\nconst playRecordedAudio = () => {\n  if (recordedAudio.value) {\n    const audio = new Audio(URL.createObjectURL(recordedAudio.value))\n    audio.play()\n  }\n}\n\nconst clearRecording = () => {\n  recordedAudio.value = null\n  recordingDuration.value = 0\n  pronunciationScore.value = null\n}\n\nconst analyzePronunciation = async () => {\n  if (!recordedAudio.value) return\n  \n  isProcessing.value = true\n  \n  try {\n    // Simulate pronunciation analysis (in real app, you'd use speech recognition API)\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    \n    // Mock scoring (in real app, compare with target pronunciation)\n    const mockScore = Math.floor(Math.random() * 40) + 60 // 60-100%\n    pronunciationScore.value = mockScore\n    \n    emit('answer', {\n      isCorrect: mockScore >= 70,\n      score: mockScore,\n      targetText: props.question.targetText\n    })\n    \n  } catch (error) {\n    console.error('Error analyzing pronunciation:', error)\n  } finally {\n    isProcessing.value = false\n  }\r\n}\r\n\r\nconst getFeedbackMessage = () => {\r\n  if (pronunciationScore.value === null) return ''\r\n  \r\n  if (pronunciationScore.value >= 90) {\r\n    return tf('grammar.practice.pronunciation.excellent', 'Excellent pronunciation!')\r\n  } else if (pronunciationScore.value >= 80) {\r\n    return tf('grammar.practice.pronunciation.good', 'Good pronunciation!')\r\n  } else if (pronunciationScore.value >= 70) {\r\n    return tf('grammar.practice.pronunciation.fair', 'Fair pronunciation. Keep practicing!')\r\n  } else {\r\n    return tf('grammar.practice.pronunciation.needsImprovement', 'Needs improvement. Try again!')\r\n  }\r\n}\r\n\r\nconst resetExercise = () => {\r\n  clearRecording()\r\n  showTips.value = false\r\n}\r\n\r\nconst nextQuestion = () => {\r\n  if (props.questionIndex === props.totalQuestions - 1) {\r\n    emit('complete')\r\n  } else {\r\n    resetExercise()\r\n    emit('next')\r\n  }\r\n}\r\n\r\nconst formatTime = (seconds: number) => {\r\n  const mins = Math.floor(seconds / 60)\r\n  const secs = seconds % 60\r\n  return `${mins}:${secs.toString().padStart(2, '0')}`\r\n}\r\n\r\n// Cleanup\r\nonUnmounted(() => {\r\n  isMounted.value = false\r\n  if (recordingTimer.value) {\r\n    clearInterval(recordingTimer.value)\r\n    recordingTimer.value = null\r\n  }\r\n  if (mediaRecorder.value && mediaRecorder.value.state !== 'inactive') {\r\n    try {\r\n      mediaRecorder.value.stop()\r\n    } catch (error) {\r\n      console.warn('Error stopping media recorder:', error)\r\n    }\r\n  }\r\n  mediaRecorder.value = null\r\n})\r\n</script>\r\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","question","_normalizeClass","_unref","_Fragment","_renderList","questionIndex","totalQuestions"],"mappings":"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"}