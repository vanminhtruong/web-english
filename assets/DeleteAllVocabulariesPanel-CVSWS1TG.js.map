{"version":3,"file":"DeleteAllVocabulariesPanel-CVSWS1TG.js","sources":["../../src/views/vocabulary/components/DeleteAllVocabulariesPanel.vue"],"sourcesContent":["<template>\n  <div class=\"bg-white/60 dark:bg-[#0a0a0a]/60 backdrop-blur-sm rounded-xl border border-white/20 dark:border-white/10 p-3 sm:p-4 md:p-5\">\n    <div class=\"flex items-center mb-3 sm:mb-4\">\n      <div class=\"animate-pulse-slow\">\n        <div class=\"w-2.5 h-2.5 bg-gradient-to-r from-red-400 to-red-500 rounded-full mr-2.5\"></div>\n      </div>\n      <h3 class=\"text-sm sm:text-base font-semibold bg-gradient-to-r from-red-600 to-red-600 dark:from-red-400 dark:to-red-400 bg-clip-text text-transparent\">\n        {{ t('vocabulary.deleteAll.title', 'Delete All Vocabularies') }}\n      </h3>\n    </div>\n    <div class=\"flex flex-col space-y-3\">\n      <p class=\"text-xs sm:text-sm text-gray-600 dark:text-gray-300\">\n        {{ t('vocabulary.deleteAll.description', 'This will permanently delete all vocabulary words from your collection. This action cannot be undone.') }}\n      </p>\n      <div class=\"flex flex-col sm:flex-row gap-2\">\n        <button\n          @click=\"showDeleteAllModal = true\"\n          class=\"inline-flex items-center justify-center px-2 py-1.5 sm:px-3 sm:py-2 text-xs font-medium text-white bg-red-600 hover:bg-red-700 dark:bg-red-500 dark:hover:bg-red-600 rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 dark:focus:ring-offset-[#0a0a0a] w-fit\"\n        >\n          <svg class=\"w-3 h-3 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n          </svg>\n          {{ t('vocabulary.deleteAll.button', 'Delete All Vocabularies') }}\n        </button>\n        <button\n          @click=\"showClearLocalStoreModal = true\"\n          class=\"inline-flex items-center justify-center px-2 py-1.5 sm:px-3 sm:py-2 text-xs font-medium text-white bg-orange-600 hover:bg-orange-700 dark:bg-orange-500 dark:hover:bg-orange-600 rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 dark:focus:ring-offset-[#0a0a0a] w-fit\"\n        >\n          <svg class=\"w-3 h-3 mr-1.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n          </svg>\n          {{ t('vocabulary.deleteAll.clearLocalStore', 'Clear Local Store') }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Delete All Vocabularies Confirmation Modal -->\n    <Teleport to=\"body\">\n      <div \n        v-if=\"showDeleteAllModal\" \n        class=\"fixed inset-0 z-[9999] flex items-center justify-center p-4\" \n        aria-labelledby=\"modal-title\" \n        role=\"dialog\" \n        aria-modal=\"true\"\n      >\n        <div class=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm transition-opacity\" aria-hidden=\"true\"></div>\n\n        <div class=\"relative bg-white dark:bg-[#0a0a0a] rounded-lg shadow-xl w-full max-w-lg mx-auto border border-gray-200 dark:border-dark-bg-mute overflow-hidden p-6\">\n          <div class=\"sm:flex sm:items-start\">\n            <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 dark:bg-red-900/30 sm:mx-0 sm:h-10 sm:w-10\">\n              <svg class=\"h-6 w-6 text-red-600 dark:text-red-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\n              </svg>\n            </div>\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n              <h3 class=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\" id=\"modal-title\">\n                {{ t('vocabulary.deleteAll.confirmTitle', 'Delete All Vocabularies') }}\n              </h3>\n              <div class=\"mt-2\">\n                <p class=\"text-sm text-gray-500 dark:text-gray-300\">\n                  {{ t('vocabulary.deleteAll.confirmMessage', 'Are you sure you want to delete all vocabulary words? This action cannot be undone and will permanently remove all your saved words.') }}\n                </p>\n                <div class=\"mt-3 p-3 bg-red-50 dark:bg-red-900/20 rounded-md border border-red-200 dark:border-red-800\">\n                  <p class=\"text-sm text-red-800 dark:text-red-300 font-medium\">\n                    {{ t('vocabulary.deleteAll.warningCount', { count: totalCount }, `You are about to delete ${totalCount} vocabulary words.`) }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n            <button\n              @click=\"confirmDeleteAll\"\n              type=\"button\"\n              class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:focus:ring-offset-[#0a0a0a] sm:ml-3 sm:w-auto sm:text-sm transition-colors duration-200\"\n            >\n              {{ t('vocabulary.deleteAll.confirm', 'Delete All') }}\n            </button>\n            <button\n              @click=\"showDeleteAllModal = false\"\n              type=\"button\"\n              class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-dark-bg-mute shadow-sm px-4 py-2 bg-white dark:bg-dark-bg-soft text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-dark-bg-mute focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-[#0a0a0a] sm:mt-0 sm:w-auto sm:text-sm transition-colors duration-200\"\n            >\n              {{ t('common.cancel', 'Cancel') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </Teleport>\n\n    <!-- Clear Local Store Confirmation Modal -->\n    <Teleport to=\"body\">\n      <div \n        v-if=\"showClearLocalStoreModal\" \n        class=\"fixed inset-0 z-[9999] flex items-center justify-center p-4\" \n        aria-labelledby=\"clear-local-store-modal-title\" \n        role=\"dialog\" \n        aria-modal=\"true\"\n      >\n        <div class=\"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm transition-opacity\" aria-hidden=\"true\"></div>\n\n        <div class=\"relative bg-white dark:bg-[#0a0a0a] rounded-lg shadow-xl w-full max-w-lg mx-auto border border-gray-200 dark:border-dark-bg-mute overflow-hidden p-6\">\n          <div class=\"sm:flex sm:items-start\">\n            <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-orange-100 dark:bg-orange-900/30 sm:mx-0 sm:h-10 sm:w-10\">\n              <svg class=\"h-6 w-6 text-orange-600 dark:text-orange-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\n              </svg>\n            </div>\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n              <h3 class=\"text-lg leading-6 font-medium text-gray-900 dark:text-white\" id=\"clear-local-store-modal-title\">\n                {{ t('vocabulary.deleteAll.clearLocalStoreTitle', 'Clear Local Store Data') }}\n              </h3>\n              <div class=\"mt-2\">\n                <p class=\"text-sm text-gray-500 dark:text-gray-300\">\n                  {{ t('vocabulary.deleteAll.clearLocalStoreMessage', 'This will clear all data stored in your browser\\'s local storage, including vocabulary words, practice sessions, and user preferences. This action cannot be undone.') }}\n                </p>\n                <p class=\"text-sm text-orange-600 dark:text-orange-400 mt-2 font-medium\">\n                  {{ t('vocabulary.deleteAll.pageReloadNotice', 'Note: Page will automatically reload after clearing to ensure complete reset.') }}\n                </p>\n                <div class=\"mt-3 p-3 bg-orange-50 dark:bg-orange-900/20 rounded-md border border-orange-200 dark:border-orange-800\">\n                  <p class=\"text-sm text-orange-800 dark:text-orange-300 font-medium\">\n                    {{ t('vocabulary.deleteAll.clearLocalStoreWarning', 'Warning: This will remove all locally stored data and reset the application to its initial state.') }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n            <button\n              @click=\"confirmClearLocalStore\"\n              type=\"button\"\n              class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-orange-600 text-base font-medium text-white hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 dark:focus:ring-offset-[#0a0a0a] sm:ml-3 sm:w-auto sm:text-sm transition-colors duration-200\"\n            >\n              {{ t('vocabulary.deleteAll.clearLocalStoreConfirm', 'Clear All Data') }}\n            </button>\n            <button\n              @click=\"showClearLocalStoreModal = false\"\n              type=\"button\"\n              class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-dark-bg-mute shadow-sm px-4 py-2 bg-white dark:bg-dark-bg-soft text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-dark-bg-mute focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 dark:focus:ring-offset-[#0a0a0a] sm:mt-0 sm:w-auto sm:text-sm transition-colors duration-200\"\n            >\n              {{ t('common.cancel', 'Cancel') }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </Teleport>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, nextTick } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { useToast } from 'vue-toastification'\nimport { useVocabularyStore } from '../../../composables/useVocabularyStore'\nimport { useThemeStore } from '../../../stores/theme'\nimport { useVoiceStore } from '../../../stores/voiceStore'\n\ninterface Props {\n  totalCount: number\n  autoSaveEnabled: boolean\n  useGrouping: boolean\n}\n\ninterface Emits {\n  (e: 'vocabularies-deleted'): void\n  (e: 'local-store-cleared'): void\n}\n\nconst props = defineProps<Props>()\nconst emit = defineEmits<Emits>()\n\nconst { t } = useI18n()\nconst toast = useToast()\nconst vocabularyStore = useVocabularyStore()\nconst themeStore = useThemeStore()\nconst voiceStore = useVoiceStore()\n\n// Modal states\nconst showDeleteAllModal = ref(false)\nconst showClearLocalStoreModal = ref(false)\n\n// Prevent body scroll when modal is open\nwatch(showDeleteAllModal, (newValue) => {\n  if (newValue) {\n    document.body.classList.add('modal-open')\n  } else {\n    document.body.classList.remove('modal-open')\n  }\n})\n\nwatch(showClearLocalStoreModal, (newValue) => {\n  if (newValue) {\n    document.body.classList.add('modal-open')\n  } else {\n    document.body.classList.remove('modal-open')\n  }\n})\n\n// Confirm delete all vocabularies\nconst confirmDeleteAll = () => {\n  try {\n    // Clear all vocabularies from store\n    vocabularyStore.clearAllVocabularies()\n    \n    // Close modal\n    showDeleteAllModal.value = false\n    \n    // Show success message\n    toast.success(\n      t('vocabulary.deleteAll.success', 'All vocabulary words have been deleted successfully'),\n      { timeout: 3000 }\n    )\n    \n    // Emit event to parent to handle additional cleanup\n    emit('vocabularies-deleted')\n    \n    console.log('All vocabularies deleted successfully')\n  } catch (error) {\n    console.error('Error deleting all vocabularies:', error)\n    toast.error(\n      t('vocabulary.deleteAll.error', 'Failed to delete all vocabularies. Please try again.'),\n      { timeout: 5000 }\n    )\n  }\n}\n\n// Confirm clear local store\nconst confirmClearLocalStore = () => {\n  try {\n    // Clear all vocabularies from store\n    vocabularyStore.clearAllVocabularies()\n    \n    // Force clear all possible storage mechanisms\n    // 1. Clear localStorage completely\n    localStorage.clear()\n    \n    // 2. Clear sessionStorage completely\n    sessionStorage.clear()\n    \n    // 3. Clear IndexedDB if available\n    if ('indexedDB' in window) {\n      try {\n        indexedDB.deleteDatabase('vocabulary-db')\n        indexedDB.deleteDatabase('practice-sessions-db')\n        indexedDB.deleteDatabase('user-settings-db')\n        console.log('IndexedDB databases deleted')\n      } catch (dbError) {\n        console.log('IndexedDB not available or error deleting:', dbError)\n      }\n    }\n    \n    // 4. Clear all cookies for this domain\n    document.cookie.split(\";\").forEach(function(c) { \n      document.cookie = c.replace(/^ +/, \"\").replace(/=.*/, \"=;expires=\" + new Date().toUTCString() + \";path=/\"); \n    })\n    \n    // 5. Clear any cached data in memory\n    if ('caches' in window) {\n      caches.keys().then(function(names) {\n        for (let name of names) {\n          caches.delete(name)\n        }\n      })\n    }\n    \n    // 5.1. Clear any remaining cache storage\n    if ('cacheStorage' in window) {\n      caches.keys().then(function(names) {\n        for (let name of names) {\n          caches.delete(name)\n        }\n      })\n    }\n    \n    // 5.2. Clear any service worker registrations\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.getRegistrations().then(function(registrations) {\n        for (let registration of registrations) {\n          registration.unregister()\n        }\n      })\n    }\n    \n    // 6. Reset theme to system default\n    themeStore.setTheme(false)\n    \n    // 7. Reset voice settings to default for all voice types\n    const voiceTypes = ['female-sweet', 'female-clear', 'female-professional', 'male-strong', 'male-gentle', 'male-deep', 'korean-female', 'korean-male'] as const\n    voiceTypes.forEach(type => voiceStore.resetVoiceSettings(type))\n    \n    // 8. Force clear any remaining localStorage items by specific keys\n    const commonKeys = [\n      'vocabulary-data',\n      'practice-sessions',\n      'user-settings',\n      'theme',\n      'voice-settings',\n      'accordion-state',\n      'hover-expand-enabled',\n      'auto-save-enabled',\n      'move-mode-enabled',\n      'grouping-enabled',\n      'last-save-time',\n      'save-status',\n      'google-drive-token',\n      'google-drive-refresh-token',\n      'google-drive-file-id',\n      'auto-save-file-path',\n      'vocabulary-notes',\n      'grammar-rules',\n      'user-preferences',\n      'app-settings',\n      'vocabulary-filters',\n      'search-history',\n      'recent-searches',\n      'favorite-words',\n      'learning-progress',\n      'daily-targets',\n      'study-sessions',\n      'vocabulary-categories',\n      'topic-groups',\n      'date-grouping',\n      'pagination-settings',\n      'sort-preferences',\n      'display-options',\n      'accessibility-settings',\n      'performance-settings',\n      'debug-settings',\n      'error-logs',\n      'analytics-data',\n      'user-activity',\n      'session-data',\n      'cache-data',\n      'temp-data',\n      'backup-data',\n      'sync-data',\n      'offline-data',\n      'pending-changes',\n      'auto-save-queue',\n      'undo-redo-stack',\n      'clipboard-data',\n      'drag-drop-state',\n      'modal-state',\n      'tooltip-state',\n      'notification-state',\n      'loading-state',\n      'error-state',\n      'success-state',\n      'warning-state',\n      'info-state'\n    ]\n    \n    commonKeys.forEach(key => {\n      try {\n        localStorage.removeItem(key)\n        sessionStorage.removeItem(key)\n      } catch (e) {\n        console.log(`Error removing key ${key}:`, e)\n      }\n    })\n    \n    // 9. Clear any dynamic keys that might exist\n    // Clear localStorage completely with loop\n    let localStorageLength = localStorage.length\n    while (localStorageLength > 0) {\n      try {\n        const key = localStorage.key(0)\n        if (key) {\n          localStorage.removeItem(key)\n        }\n        localStorageLength = localStorage.length\n      } catch (e) {\n        console.log('Error removing dynamic localStorage key:', e)\n        break\n      }\n    }\n    \n    // Clear sessionStorage completely with loop\n    let sessionStorageLength = sessionStorage.length\n    while (sessionStorageLength > 0) {\n      try {\n        const key = sessionStorage.key(0)\n        if (key) {\n          sessionStorage.removeItem(key)\n        }\n        sessionStorageLength = sessionStorage.length\n      } catch (e) {\n        console.log('Error removing dynamic sessionStorage key:', e)\n        break\n      }\n    }\n    \n    // Double-check and force clear again\n    try {\n      localStorage.clear()\n      sessionStorage.clear()\n    } catch (e) {\n      console.log('Error in final clear:', e)\n    }\n    \n    // 10. Force garbage collection if available\n    if ('gc' in window) {\n      try {\n        (window as any).gc()\n      } catch (e) {\n        console.log('Garbage collection not available')\n      }\n    }\n    \n    // Close modal\n    showClearLocalStoreModal.value = false\n    \n    // Show success message\n    toast.success(\n      t('vocabulary.deleteAll.clearLocalStoreSuccess', 'All local store data has been cleared successfully'),\n      { timeout: 3000 }\n    )\n    \n    // Emit event to parent to handle additional cleanup\n    emit('local-store-cleared')\n    \n    console.log('Local store data cleared successfully - 100% complete')\n    \n    // 11. Force page reload after a short delay to ensure complete reset\n    setTimeout(() => {\n      // Final verification - check if any data remains\n      const remainingLocalStorage = localStorage.length\n      const remainingSessionStorage = sessionStorage.length\n      \n      if (remainingLocalStorage > 0 || remainingSessionStorage > 0) {\n        console.log(`Warning: ${remainingLocalStorage} localStorage items and ${remainingSessionStorage} sessionStorage items remain`)\n        // Force clear one more time\n        try {\n          localStorage.clear()\n          sessionStorage.clear()\n        } catch (e) {\n          console.log('Final clear attempt failed:', e)\n        }\n      }\n      \n      console.log('Reloading page to ensure complete reset...')\n      window.location.reload()\n    }, 1500)\n    \n  } catch (error) {\n    console.error('Error clearing local store data:', error)\n    toast.error(\n      t('vocabulary.deleteAll.clearLocalStoreError', 'Failed to clear local store data. Please try again.'),\n      { timeout: 5000 }\n    )\n  }\n}\n</script>\n"],"names":["_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","_unref","_createTextVNode","_createBlock","_Teleport","totalCount"],"mappings":"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"}