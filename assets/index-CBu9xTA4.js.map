{"version":3,"mappings":"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","names":["_openBlock","_createElementBlock","_createVNode","_unref","_createElementVNode","_vShow","App","Toast"],"ignoreList":[],"sources":["../../src/stores/modalStore.ts","../../src/App.vue","../../src/constants/routes.ts","../../src/router/index.ts","../../src/stores/theme.ts","../../src/i18n/index.ts","../../src/main.ts"],"sourcesContent":["import { ref, computed } from 'vue'\nimport { defineStore } from 'pinia'\n\nexport const useModalStore = defineStore('modal', () => {\n  // Modal states\n  const showVocabularyForm = ref(false)\n  const showTopicManager = ref(false) \n  const showNoteDialog = ref(false)\n  const showVocabularyDetail = ref(false)\n  const showGrammarManager = ref(false)\n  const showCompletionModal = ref(false)\n\n  // Computed properties to determine what should be hidden\n  const shouldHideBackToTop = computed(() => {\n    return showVocabularyForm.value || showTopicManager.value || showNoteDialog.value || showGrammarManager.value || showVocabularyDetail.value || showCompletionModal.value\n  })\n\n  const shouldHideAddNewWord = computed(() => {\n    return showTopicManager.value || showNoteDialog.value || showGrammarManager.value || showVocabularyDetail.value\n  })\n\n  // Actions to update modal states\n  const setVocabularyForm = (show: boolean) => {\n    showVocabularyForm.value = show\n  }\n\n  const setTopicManager = (show: boolean) => {\n    showTopicManager.value = show\n  }\n\n  const setNoteDialog = (show: boolean) => {\n    showNoteDialog.value = show\n  }\n\n  const setVocabularyDetail = (show: boolean) => {\n    showVocabularyDetail.value = show\n  }\n\n  const setGrammarManager = (show: boolean) => {\n    showGrammarManager.value = show\n  }\n\n  const setCompletionModal = (show: boolean) => {\n    showCompletionModal.value = show\n    // Control body scroll when completion modal is open\n    if (show) {\n      document.body.classList.add('modal-open')\n    } else {\n      document.body.classList.remove('modal-open')\n    }\n  }\n\n  return {\n    // States\n    showVocabularyForm,\n    showTopicManager,\n    showNoteDialog,\n    showVocabularyDetail,\n    showGrammarManager,\n    showCompletionModal,\n    \n    // Computed\n    shouldHideBackToTop,\n    shouldHideAddNewWord,\n    \n    // Actions\n    setVocabularyForm,\n    setTopicManager,\n    setNoteDialog,\n    setVocabularyDetail,\n    setGrammarManager,\n    setCompletionModal\n  }\n})\n","<script setup lang=\"ts\">\r\nimport { RouterView } from 'vue-router'\r\nimport { defineAsyncComponent } from 'vue'\r\nimport { loadComponentSafely } from './utils/import-helper'\r\nimport { useModalStore } from './stores/modalStore'\r\n\r\n// Import components - use direct import for header to ensure proper positioning\r\nconst AppHeader = defineAsyncComponent(\r\n  () => import('./components/common/AppHeader.vue')\r\n)\r\n\r\n// Import\r\nconst BackToTop = defineAsyncComponent(\r\n  () => import('./components/common/BackToTop.vue')\r\n)\r\nconst LazyLoadComponent = defineAsyncComponent(() => import('./components/LazyLoadComponent.vue'))\r\n\r\n// Modal store for managing button visibility\r\nconst modalStore = useModalStore()\r\n</script>\r\n\r\n<template>\r\n  <div id=\"app\" class=\"min-h-screen\">\r\n    <!-- Fixed header - positioned outside container constraints -->\r\n    <AppHeader />\r\n\r\n    <!-- Main content with proper padding for fixed header -->\r\n    <main class=\"flex-1 pt-16\">\r\n      <RouterView />\r\n    </main>\r\n\r\n    <!-- Back to Top Button - Fixed position -->\r\n    <BackToTop v-show=\"!modalStore.shouldHideBackToTop\" />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","/**\r\n * Module quản lý các route constants và component paths\r\n * Giúp tránh lỗi TypeScript khi import components\r\n */\r\n\r\n// Route names constants\r\nexport const ROUTE_NAMES = {\r\n  // Dashboard\r\n  DASHBOARD: 'dashboard',\r\n\r\n  // Vocabulary\r\n  VOCABULARY_LIST: 'vocabulary-list',\r\n  VOCABULARY_QUESTIONS: 'vocabulary-questions',\r\n  VOCABULARY_EXAMPLES: 'vocabulary-examples',\r\n  VOCABULARY_GENERATOR: 'vocabulary-generator',\r\n  VOCABULARY_ADD: 'vocabulary-add',\r\n  VOCABULARY_EDIT: 'vocabulary-edit',\r\n\r\n  // Grammar\r\n  GRAMMAR_LIST: 'grammar-list',\r\n  GRAMMAR_DETAIL: 'grammar-detail',\r\n  GRAMMAR_PRACTICE: 'grammar-practice',\r\n  GRAMMAR_ADD: 'grammar-add',\r\n  GRAMMAR_EDIT: 'grammar-edit',\r\n\r\n  // Practice\r\n  PRACTICE_FLASHCARD: 'practice-flashcard',\r\n  PRACTICE_QUIZ: 'practice-quiz',\r\n\r\n  // Test\r\n  TAILWIND_TEST: 'tailwind-test',\r\n  \r\n  // Not Found\r\n  NOT_FOUND: 'NotFound',\r\n} as const\r\n\r\n// Route paths constants\r\nexport const ROUTE_PATHS = {\r\n  ROOT: '/',\r\n\r\n  // Dashboard\r\n  DASHBOARD: '/dashboard',\r\n\r\n  // Vocabulary\r\n  VOCABULARY: '/vocabulary',\r\n  VOCABULARY_QUESTIONS: '/vocabulary/questions',\r\n  VOCABULARY_EXAMPLES: '/vocabulary/examples',\r\n  VOCABULARY_GENERATOR: '/vocabulary/generator',\r\n  VOCABULARY_ADD: '/vocabulary/add',\r\n  VOCABULARY_EDIT: '/vocabulary/edit/:id',\r\n\r\n  // Grammar\r\n  GRAMMAR: '/grammar',\r\n  GRAMMAR_DETAIL: '/grammar/:id',\r\n  GRAMMAR_PRACTICE: '/grammar/:id/practice',\r\n  GRAMMAR_ADD: '/grammar/add',\r\n  GRAMMAR_EDIT: '/grammar/edit/:id',\r\n\r\n  // Practice\r\n  PRACTICE_FLASHCARD: '/practice/flashcard',\r\n  PRACTICE_QUIZ: '/practice/quiz',\r\n\r\n  // Test\r\n  TEST: '/test',\r\n  \r\n  // Not Found\r\n  NOT_FOUND: '/:pathMatch(.*)*',\r\n} as const\r\n\r\n// Component paths constants (để sử dụng với dynamic import)\r\nexport const COMPONENT_PATHS = {\r\n  // Dashboard\r\n  DASHBOARD: '../views/dashboard/DashboardView.vue',\r\n\r\n  // Vocabulary\r\n  VOCABULARY_LIST: '../views/vocabulary/VocabularyListView.vue',\r\n  VOCABULARY_QUESTIONS: '../views/vocabulary/VocabularyQuestionsView.vue',\r\n  VOCABULARY_EXAMPLES: '../views/vocabulary/VocabularyExamplesView.vue',\r\n  VOCABULARY_GENERATOR: '../views/vocabulary/AutoGeneratorView.vue',\r\n  VOCABULARY_ADD: '../views/vocabulary/AddVocabularyView.vue',\r\n  VOCABULARY_EDIT: '../views/vocabulary/EditVocabularyView.vue',\r\n\r\n  // Grammar\r\n  GRAMMAR_LIST: '../views/grammar/GrammarListView.vue',\r\n  GRAMMAR_DETAIL: '../views/grammar/GrammarDetailView.vue',\r\n  GRAMMAR_PRACTICE: '../views/grammar/GrammarPracticeView.vue',\r\n  GRAMMAR_ADD: '../views/grammar/AddGrammarView.vue',\r\n  GRAMMAR_EDIT: '../views/grammar/EditGrammarView.vue',\r\n\r\n  // Practice\r\n  PRACTICE_FLASHCARD: '../views/practice/FlashcardView.vue',\r\n  PRACTICE_QUIZ: '../views/practice/QuizView.vue',\r\n\r\n  // Test\r\n  TAILWIND_TEST: '../components/TailwindTest.vue',\r\n  \r\n  // Not Found\r\n  NOT_FOUND: '../views/NotFoundView.vue',\r\n} as const\r\n\r\n// Type definitions\r\nexport type RouteNameType = typeof ROUTE_NAMES[keyof typeof ROUTE_NAMES]\r\nexport type RoutePathType = typeof ROUTE_PATHS[keyof typeof ROUTE_PATHS]\r\nexport type ComponentPathType = typeof COMPONENT_PATHS[keyof typeof COMPONENT_PATHS]\r\n\r\n/**\r\n * Helper function để tạo dynamic import cho component\r\n * @param componentPath - Đường dẫn đến component\r\n * @returns Function để dynamic import component\r\n */\r\nexport const createComponentImport = (componentPath: ComponentPathType) => {\r\n  return () => import(/* @vite-ignore */ componentPath)\r\n}\r\n\r\n/**\r\n * Route configuration object\r\n */\r\nexport const ROUTE_CONFIG = {\r\n  // Dashboard\r\n  DASHBOARD: {\r\n    path: ROUTE_PATHS.DASHBOARD,\r\n    name: ROUTE_NAMES.DASHBOARD,\r\n    componentPath: COMPONENT_PATHS.DASHBOARD,\r\n  },\r\n\r\n  // Vocabulary\r\n  VOCABULARY_LIST: {\r\n    path: ROUTE_PATHS.VOCABULARY,\r\n    name: ROUTE_NAMES.VOCABULARY_LIST,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_LIST,\r\n  },\r\n  VOCABULARY_QUESTIONS: {\r\n    path: ROUTE_PATHS.VOCABULARY_QUESTIONS,\r\n    name: ROUTE_NAMES.VOCABULARY_QUESTIONS,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_QUESTIONS,\r\n  },\r\n  VOCABULARY_EXAMPLES: {\r\n    path: ROUTE_PATHS.VOCABULARY_EXAMPLES,\r\n    name: ROUTE_NAMES.VOCABULARY_EXAMPLES,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_EXAMPLES,\r\n  },\r\n  VOCABULARY_GENERATOR: {\r\n    path: ROUTE_PATHS.VOCABULARY_GENERATOR,\r\n    name: ROUTE_NAMES.VOCABULARY_GENERATOR,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_GENERATOR,\r\n  },\r\n  VOCABULARY_ADD: {\r\n    path: ROUTE_PATHS.VOCABULARY_ADD,\r\n    name: ROUTE_NAMES.VOCABULARY_ADD,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_ADD,\r\n  },\r\n  VOCABULARY_EDIT: {\r\n    path: ROUTE_PATHS.VOCABULARY_EDIT,\r\n    name: ROUTE_NAMES.VOCABULARY_EDIT,\r\n    componentPath: COMPONENT_PATHS.VOCABULARY_EDIT,\r\n  },\r\n\r\n  // Grammar\r\n  GRAMMAR_LIST: {\r\n    path: ROUTE_PATHS.GRAMMAR,\r\n    name: ROUTE_NAMES.GRAMMAR_LIST,\r\n    componentPath: COMPONENT_PATHS.GRAMMAR_LIST,\r\n  },\r\n  GRAMMAR_DETAIL: {\r\n    path: ROUTE_PATHS.GRAMMAR_DETAIL,\r\n    name: ROUTE_NAMES.GRAMMAR_DETAIL,\r\n    componentPath: COMPONENT_PATHS.GRAMMAR_DETAIL,\r\n  },\r\n  GRAMMAR_PRACTICE: {\r\n    path: ROUTE_PATHS.GRAMMAR_PRACTICE,\r\n    name: ROUTE_NAMES.GRAMMAR_PRACTICE,\r\n    componentPath: COMPONENT_PATHS.GRAMMAR_PRACTICE,\r\n  },\r\n  GRAMMAR_ADD: {\r\n    path: ROUTE_PATHS.GRAMMAR_ADD,\r\n    name: ROUTE_NAMES.GRAMMAR_ADD,\r\n    componentPath: COMPONENT_PATHS.GRAMMAR_ADD,\r\n  },\r\n  GRAMMAR_EDIT: {\r\n    path: ROUTE_PATHS.GRAMMAR_EDIT,\r\n    name: ROUTE_NAMES.GRAMMAR_EDIT,\r\n    componentPath: COMPONENT_PATHS.GRAMMAR_EDIT,\r\n  },\r\n\r\n  // Practice\r\n  PRACTICE_FLASHCARD: {\r\n    path: ROUTE_PATHS.PRACTICE_FLASHCARD,\r\n    name: ROUTE_NAMES.PRACTICE_FLASHCARD,\r\n    componentPath: COMPONENT_PATHS.PRACTICE_FLASHCARD,\r\n  },\r\n  PRACTICE_QUIZ: {\r\n    path: ROUTE_PATHS.PRACTICE_QUIZ,\r\n    name: ROUTE_NAMES.PRACTICE_QUIZ,\r\n    componentPath: COMPONENT_PATHS.PRACTICE_QUIZ,\r\n  },\r\n\r\n  // Test\r\n  TAILWIND_TEST: {\r\n    path: ROUTE_PATHS.TEST,\r\n    name: ROUTE_NAMES.TAILWIND_TEST,\r\n    componentPath: COMPONENT_PATHS.TAILWIND_TEST,\r\n  },\r\n  \r\n  // Not Found\r\n  NOT_FOUND: {\r\n    path: ROUTE_PATHS.NOT_FOUND,\r\n    name: ROUTE_NAMES.NOT_FOUND,\r\n    componentPath: COMPONENT_PATHS.NOT_FOUND,\r\n  },\r\n} as const\r\n","import { createRouter, createWebHashHistory } from 'vue-router'\r\nimport { ROUTE_PATHS, ROUTE_CONFIG, createComponentImport } from '../constants/routes'\r\n\r\nconst router = createRouter({\r\n  history: createWebHashHistory(import.meta.env.BASE_URL),\r\n  routes: [\r\n    {\r\n      path: ROUTE_PATHS.ROOT,\r\n      redirect: ROUTE_PATHS.DASHBOARD,\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.DASHBOARD.path,\r\n      name: ROUTE_CONFIG.DASHBOARD.name,\r\n      component: createComponentImport(ROUTE_CONFIG.DASHBOARD.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.VOCABULARY_LIST.path,\r\n      name: ROUTE_CONFIG.VOCABULARY_LIST.name,\r\n      component: createComponentImport(ROUTE_CONFIG.VOCABULARY_LIST.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.VOCABULARY_QUESTIONS.path,\r\n      name: ROUTE_CONFIG.VOCABULARY_QUESTIONS.name,\r\n      component: createComponentImport(ROUTE_CONFIG.VOCABULARY_QUESTIONS.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.VOCABULARY_EXAMPLES.path,\r\n      name: ROUTE_CONFIG.VOCABULARY_EXAMPLES.name,\r\n      component: createComponentImport(ROUTE_CONFIG.VOCABULARY_EXAMPLES.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.VOCABULARY_GENERATOR.path,\r\n      name: ROUTE_CONFIG.VOCABULARY_GENERATOR.name,\r\n      component: createComponentImport(ROUTE_CONFIG.VOCABULARY_GENERATOR.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.GRAMMAR_LIST.path,\r\n      name: ROUTE_CONFIG.GRAMMAR_LIST.name,\r\n      component: createComponentImport(ROUTE_CONFIG.GRAMMAR_LIST.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.GRAMMAR_DETAIL.path,\r\n      name: ROUTE_CONFIG.GRAMMAR_DETAIL.name,\r\n      component: createComponentImport(ROUTE_CONFIG.GRAMMAR_DETAIL.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.GRAMMAR_PRACTICE.path,\r\n      name: ROUTE_CONFIG.GRAMMAR_PRACTICE.name,\r\n      component: createComponentImport(ROUTE_CONFIG.GRAMMAR_PRACTICE.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.PRACTICE_FLASHCARD.path,\r\n      name: ROUTE_CONFIG.PRACTICE_FLASHCARD.name,\r\n      component: createComponentImport(ROUTE_CONFIG.PRACTICE_FLASHCARD.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.PRACTICE_QUIZ.path,\r\n      name: ROUTE_CONFIG.PRACTICE_QUIZ.name,\r\n      component: createComponentImport(ROUTE_CONFIG.PRACTICE_QUIZ.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.TAILWIND_TEST.path,\r\n      name: ROUTE_CONFIG.TAILWIND_TEST.name,\r\n      component: createComponentImport(ROUTE_CONFIG.TAILWIND_TEST.componentPath),\r\n    },\r\n    {\r\n      path: ROUTE_CONFIG.NOT_FOUND.path,\r\n      name: ROUTE_CONFIG.NOT_FOUND.name,\r\n      component: createComponentImport(ROUTE_CONFIG.NOT_FOUND.componentPath),\r\n    },\r\n  ],\r\n})\r\n\r\n// Navigation Guards (removed authentication checks)\r\n// router.beforeEach((to, _from, next) => {\r\n//   next()\r\n// })\r\n\r\nexport default router\r\n","import { defineStore } from 'pinia'\r\nimport { ref, watch } from 'vue'\r\n\r\nexport const useThemeStore = defineStore('theme', () => {\r\n  // State\r\n  const isDarkMode = ref(false)\r\n  \r\n  // Actions\r\n  const toggleTheme = () => {\r\n    isDarkMode.value = !isDarkMode.value\r\n    applyTheme()\r\n    saveThemeToStorage()\r\n  }\r\n  \r\n  const setTheme = (dark: boolean) => {\r\n    isDarkMode.value = dark\r\n    applyTheme()\r\n    saveThemeToStorage()\r\n  }\r\n  \r\n  const applyTheme = () => {\r\n    const html = document.documentElement\r\n    \r\n    if (isDarkMode.value) {\r\n      html.classList.add('dark')\r\n      html.style.colorScheme = 'dark'\r\n    } else {\r\n      html.classList.remove('dark')\r\n      html.style.colorScheme = 'light'\r\n    }\r\n  }\r\n  \r\n  const saveThemeToStorage = () => {\r\n    localStorage.setItem('theme', isDarkMode.value ? 'dark' : 'light')\r\n  }\r\n  \r\n  const loadThemeFromStorage = () => {\r\n    const savedTheme = localStorage.getItem('theme')\r\n    \r\n    if (savedTheme) {\r\n      isDarkMode.value = savedTheme === 'dark'\r\n    } else {\r\n      // Detect system preference\r\n      isDarkMode.value = window.matchMedia('(prefers-color-scheme: dark)').matches\r\n    }\r\n    \r\n    applyTheme()\r\n  }\r\n  \r\n  const initTheme = () => {\r\n    loadThemeFromStorage()\r\n    \r\n    // Listen for system theme changes\r\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\r\n    mediaQuery.addEventListener('change', (e) => {\r\n      if (!localStorage.getItem('theme')) {\r\n        isDarkMode.value = e.matches\r\n        applyTheme()\r\n      }\r\n    })\r\n  }\r\n  \r\n  // Getters\r\n  const currentTheme = () => isDarkMode.value ? 'dark' : 'light'\r\n  const themeIcon = () => isDarkMode.value ? '🌙' : '☀️'\r\n  const themeLabel = () => isDarkMode.value ? 'Chế độ tối' : 'Chế độ sáng'\r\n  \r\n  return {\r\n    // State\r\n    isDarkMode,\r\n    \r\n    // Actions\r\n    toggleTheme,\r\n    setTheme,\r\n    initTheme,\r\n    \r\n    // Getters\r\n    currentTheme,\r\n    themeIcon,\r\n    themeLabel\r\n  }\r\n})\r\n","import { createI18n } from 'vue-i18n'\nimport type { I18n } from 'vue-i18n'\nimport en from './locales/en.json'\nimport vi from './locales/vi.json'\nimport ko from './locales/ko.json'\n\n// Safe locale getter with fallback\nfunction getInitialLocale(): 'en' | 'vi' | 'ko' {\n  try {\n    const savedLocale = localStorage.getItem('locale')\n    return (savedLocale === 'en' || savedLocale === 'vi' || savedLocale === 'ko') ? savedLocale as 'en' | 'vi' | 'ko' : 'vi'\n  } catch (error) {\n    console.warn('localStorage not available, using default locale:', error)\n    return 'vi'\n  }\n}\n\nconst i18n: I18n = createI18n({\n  legacy: false,\n  locale: getInitialLocale(),\n  fallbackLocale: 'en',\n  globalInjection: true,\n  missingWarn: false,\n  fallbackWarn: false,\n  silentTranslationWarn: true,\n  silentFallbackWarn: true,\n  messages: {\n    en,\n    vi,\n    ko\n  }\n})\n\nexport default i18n\n\n// Utility function to change locale\nexport function setLocale(locale: 'en' | 'vi' | 'ko') {\n  // In vue-i18n v9 with legacy: false, locale is a ref\n  if (typeof i18n.global.locale === 'object' && 'value' in i18n.global.locale) {\n    i18n.global.locale.value = locale\n  } else {\n    i18n.global.locale = locale\n  }\n  try {\n    localStorage.setItem('locale', locale)\n  } catch (error) {\n    console.warn('Could not save locale to localStorage:', error)\n  }\n  document.querySelector('html')?.setAttribute('lang', locale)\n}\n\n// Utility function to get current locale\nexport function getLocale(): 'en' | 'vi' | 'ko' {\n  // Check if locale is a ref or plain value\n  const locale = typeof i18n.global.locale === 'object' && 'value' in i18n.global.locale\n    ? i18n.global.locale.value\n    : i18n.global.locale\n  return locale as 'en' | 'vi' | 'ko'\n}\n\n// Utility function to check if current locale is English\nexport function isEnglish(): boolean {\n  const locale = typeof i18n.global.locale === 'object' && 'value' in i18n.global.locale\n    ? i18n.global.locale.value\n    : i18n.global.locale\n  return locale === 'en'\n}\n\n// Utility function to toggle locale (cycle en -> vi -> ko)\nexport function toggleLocale(): 'en' | 'vi' | 'ko' {\n  const currentLocale = getLocale()\n  const order: Array<'en' | 'vi' | 'ko'> = ['en', 'vi', 'ko']\n  const idx = order.indexOf(currentLocale)\n  const newLocale = order[(idx + 1) % order.length]\n  setLocale(newLocale)\n  return newLocale\n}","import './style.css'\r\nimport './assets/main.css'\r\n\r\nimport { createApp } from 'vue'\r\nimport { createPinia } from 'pinia'\r\nimport Toast, { type PluginOptions } from 'vue-toastification'\r\nimport 'vue-toastification/dist/index.css'\r\n\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport { useThemeStore } from './stores/theme'\r\nimport i18n from './i18n'\r\n\r\nconst app = createApp(App)\r\nconst pinia = createPinia()\r\n\r\napp.use(pinia)\r\napp.use(router)\r\napp.use(i18n)\r\n\r\nconst options: PluginOptions = {\r\n  transition: 'Vue-Toastification__bounce',\r\n  maxToasts: 5,\r\n  newestOnTop: true,\r\n  filterBeforeCreate: (toast, toasts) => {\r\n    if (toasts.filter(t => t.content === toast.content).length !== 0) {\r\n      return false\r\n    }\r\n    return toast\r\n  },\r\n  bodyClassName: ['font-sans', 'text-sm'],\r\n  toastClassName: ['custom-toast'],\r\n  closeButtonClassName: 'dark:text-white dark:hover:text-gray-200'\r\n}\r\n\r\napp.use(Toast, options)\r\n\r\n// Initialize theme after Pinia is set up\r\nconst themeStore = useThemeStore()\r\nthemeStore.initTheme()\r\n\r\napp.mount('#app')\r\n"],"file":"assets/index-CBu9xTA4.js"}