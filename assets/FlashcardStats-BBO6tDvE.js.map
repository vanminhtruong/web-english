{"version":3,"file":"FlashcardStats-BBO6tDvE.js","sources":["../../src/views/dashboard/composables/useFlashcardDashboardStats.ts","../../src/views/dashboard/components/CircularProgress.vue","../../src/views/dashboard/components/FlashcardStats.vue"],"sourcesContent":["import { ref, computed, onMounted } from 'vue'\nimport type { PracticeHistoryItem } from '../../practice/composables/useFlashcardHistory'\n\nexport interface FlashcardDashboardStats {\n  totalSessions: number\n  totalPracticeTime: number\n  averageAccuracy: number\n  bestScore: number\n  favoriteMode: string\n  totalCardsStudied: number\n  streakDays: number\n  weeklyProgress: number\n  sessionsThisWeek: number\n  sessionsThisMonth: number\n}\n\nexport function useFlashcardDashboardStats() {\n  const practiceHistory = ref<PracticeHistoryItem[]>([])\n  const isLoading = ref(true)\n\n  // Load practice history from localStorage\n  const loadPracticeHistory = () => {\n    try {\n      const saved = localStorage.getItem('flashcard-practice-history')\n      if (saved) {\n        const parsed: PracticeHistoryItem[] = JSON.parse(saved)\n        practiceHistory.value = parsed\n      }\n    } catch (error) {\n      console.error('Error loading flashcard practice history:', error)\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  // Calculate streak days (consecutive days with practice)\n  const getStreakDays = (): number => {\n    if (practiceHistory.value.length === 0) return 0\n\n    const today = new Date()\n    today.setHours(0, 0, 0, 0)\n    \n    // Get unique practice dates sorted descending\n    const practiceDates = [...new Set(\n      practiceHistory.value.map(item => {\n        const date = new Date(item.date)\n        date.setHours(0, 0, 0, 0)\n        return date.getTime()\n      })\n    )].sort((a, b) => b - a)\n\n    if (practiceDates.length === 0) return 0\n\n    // Check if practiced today or yesterday\n    const mostRecentDate = new Date(practiceDates[0])\n    const daysDiff = Math.floor((today.getTime() - mostRecentDate.getTime()) / (1000 * 60 * 60 * 24))\n    \n    if (daysDiff > 1) return 0 // Break in streak\n\n    let streak = 0\n    let expectedDate = today.getTime()\n\n    for (const practiceDate of practiceDates) {\n      const date = new Date(practiceDate)\n      if (date.getTime() === expectedDate) {\n        streak++\n        expectedDate -= 24 * 60 * 60 * 1000 // Previous day\n      } else if (date.getTime() === expectedDate + 24 * 60 * 60 * 1000 && streak === 0) {\n        // Allow for practicing yesterday if we haven't practiced today yet\n        streak++\n        expectedDate -= 24 * 60 * 60 * 1000\n      } else {\n        break // Streak broken\n      }\n    }\n\n    return streak\n  }\n\n  // Get sessions from last 7 days\n  const getWeeklyProgress = (): { sessionsThisWeek: number; weeklyProgress: number } => {\n    const now = new Date()\n    const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000)\n    \n    const thisWeekSessions = practiceHistory.value.filter(item => {\n      const itemDate = new Date(item.date)\n      return itemDate >= weekAgo && itemDate <= now\n    })\n\n    // Calculate weekly progress (sessions completed vs target of 7)\n    const weeklyProgress = Math.min(Math.round((thisWeekSessions.length / 7) * 100), 100)\n\n    return {\n      sessionsThisWeek: thisWeekSessions.length,\n      weeklyProgress\n    }\n  }\n\n  // Get sessions from last 30 days\n  const getSessionsThisMonth = (): number => {\n    const now = new Date()\n    const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000)\n    \n    return practiceHistory.value.filter(item => {\n      const itemDate = new Date(item.date)\n      return itemDate >= monthAgo && itemDate <= now\n    }).length\n  }\n\n  // Get most used mode\n  const getFavoriteMode = (): string => {\n    if (practiceHistory.value.length === 0) return ''\n\n    const modeCount = practiceHistory.value.reduce((acc, item) => {\n      acc[item.mode] = (acc[item.mode] || 0) + 1\n      return acc\n    }, {} as Record<string, number>)\n\n    return Object.entries(modeCount)\n      .sort(([, a], [, b]) => b - a)[0]?.[0] || ''\n  }\n\n  // Main computed stats\n  const stats = computed((): FlashcardDashboardStats => {\n    if (isLoading.value || practiceHistory.value.length === 0) {\n      return {\n        totalSessions: 0,\n        totalPracticeTime: 0,\n        averageAccuracy: 0,\n        bestScore: 0,\n        favoriteMode: '',\n        totalCardsStudied: 0,\n        streakDays: 0,\n        weeklyProgress: 0,\n        sessionsThisWeek: 0,\n        sessionsThisMonth: 0\n      }\n    }\n\n    const totalSessions = practiceHistory.value.length\n    const totalPracticeTime = practiceHistory.value.reduce((sum, item) => sum + item.duration, 0)\n    const averageAccuracy = Math.round(\n      practiceHistory.value.reduce((sum, item) => sum + item.accuracy, 0) / totalSessions\n    )\n    const bestScore = Math.max(...practiceHistory.value.map(item => item.score))\n    const totalCardsStudied = practiceHistory.value.reduce((sum, item) => sum + item.totalCards, 0)\n    \n    const favoriteMode = getFavoriteMode()\n    const streakDays = getStreakDays()\n    const { sessionsThisWeek, weeklyProgress } = getWeeklyProgress()\n    const sessionsThisMonth = getSessionsThisMonth()\n\n    return {\n      totalSessions,\n      totalPracticeTime: Math.round(totalPracticeTime / 60), // Convert to minutes\n      averageAccuracy,\n      bestScore,\n      favoriteMode,\n      totalCardsStudied,\n      streakDays,\n      weeklyProgress,\n      sessionsThisWeek,\n      sessionsThisMonth\n    }\n  })\n\n  // Get formatted stats for display\n  const getFormattedStats = computed(() => {\n    const currentStats = stats.value\n    \n    return {\n      ...currentStats,\n      totalPracticeTimeFormatted: formatDuration(currentStats.totalPracticeTime),\n      favoriteModeFormatted: formatMode(currentStats.favoriteMode),\n      accuracyLevel: getAccuracyLevel(currentStats.averageAccuracy),\n      streakLevel: getStreakLevel(currentStats.streakDays),\n      progressLevel: getProgressLevel(currentStats.weeklyProgress)\n    }\n  })\n\n  // Helper formatting functions\n  const formatDuration = (minutes: number): string => {\n    if (minutes < 60) {\n      return `${minutes}m`\n    }\n    const hours = Math.floor(minutes / 60)\n    const remainingMinutes = minutes % 60\n    return remainingMinutes > 0 ? `${hours}h ${remainingMinutes}m` : `${hours}h`\n  }\n\n  const formatMode = (mode: string): string => {\n    const modeNames: Record<string, string> = {\n      'flashcard': 'Flashcard',\n      'quiz': 'Quiz',\n      'typing': 'Typing',\n      'listening': 'Listening',\n      'image': 'Image',\n      'pictionary': 'Pictionary',\n      'pronunciation': 'Pronunciation',\n      'bubble-shooter': 'Bubble Shooter',\n      'snake-game': 'Snake Hunt'\n    }\n    return modeNames[mode] || mode\n  }\n\n  const getAccuracyLevel = (accuracy: number): { level: string; color: string } => {\n    if (accuracy >= 90) return { level: 'Excellent', color: 'text-green-600 dark:text-green-400' }\n    if (accuracy >= 80) return { level: 'Good', color: 'text-blue-600 dark:text-blue-400' }\n    if (accuracy >= 70) return { level: 'Fair', color: 'text-yellow-600 dark:text-yellow-400' }\n    if (accuracy >= 60) return { level: 'Average', color: 'text-orange-600 dark:text-orange-400' }\n    return { level: 'Needs Work', color: 'text-red-600 dark:text-red-400' }\n  }\n\n  const getStreakLevel = (days: number): { level: string; color: string } => {\n    if (days >= 30) return { level: 'Amazing', color: 'text-purple-600 dark:text-purple-400' }\n    if (days >= 14) return { level: 'Great', color: 'text-green-600 dark:text-green-400' }\n    if (days >= 7) return { level: 'Good', color: 'text-blue-600 dark:text-blue-400' }\n    if (days >= 3) return { level: 'Building', color: 'text-yellow-600 dark:text-yellow-400' }\n    if (days >= 1) return { level: 'Started', color: 'text-orange-600 dark:text-orange-400' }\n    return { level: 'None', color: 'text-gray-600 dark:text-gray-400' }\n  }\n\n  const getProgressLevel = (progress: number): { level: string; color: string } => {\n    if (progress >= 90) return { level: 'Outstanding', color: 'text-green-600 dark:text-green-400' }\n    if (progress >= 70) return { level: 'Strong', color: 'text-blue-600 dark:text-blue-400' }\n    if (progress >= 50) return { level: 'Moderate', color: 'text-yellow-600 dark:text-yellow-400' }\n    if (progress >= 30) return { level: 'Light', color: 'text-orange-600 dark:text-orange-400' }\n    return { level: 'Minimal', color: 'text-red-600 dark:text-red-400' }\n  }\n\n  // Refresh stats\n  const refreshStats = () => {\n    loadPracticeHistory()\n  }\n\n  onMounted(() => {\n    loadPracticeHistory()\n  })\n\n  return {\n    stats,\n    getFormattedStats,\n    isLoading,\n    refreshStats\n  }\n}\n","<template>\n  <div \n    ref=\"circularProgressRef\"\n    class=\"relative group cursor-pointer rounded-full overflow-hidden\"\n    style=\"display: inline-block; background: transparent !important; box-shadow: none !important;\"\n    :style=\"{ width: size + 'px', height: size + 'px', clipPath: 'circle(50% at 50% 50%)' }\"\n  >\n    <!-- Animated Background Glow -->\n    <div \n      class=\"absolute inset-0 rounded-full overflow-hidden pointer-events-none opacity-0 group-hover:opacity-30 transition-all duration-700 blur-xl animate-pulse\"\n      :style=\"{ \n        background: `radial-gradient(circle, ${progressColor}20, transparent 70%)`,\n        transform: 'scale(1.2)'\n      }\"\n    ></div>\n    \n    <!-- SVG Circle with Gradients -->\n    <svg \n      :width=\"size\" \n      :height=\"size\" \n      class=\"transform -rotate-90 transition-all duration-500 group-hover:scale-105 relative z-10\"\n      style=\"display: block; background: transparent !important;\"\n    >\n      <!-- Gradient Definitions -->\n      <defs>\n        <linearGradient :id=\"`progressGradient-${gradientId}`\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" :style=\"{ stopColor: progressColor, stopOpacity: 1 }\" />\n          <stop offset=\"50%\" :style=\"{ stopColor: progressColorSecondary, stopOpacity: 0.9 }\" />\n          <stop offset=\"100%\" :style=\"{ stopColor: progressColorTertiary, stopOpacity: 1 }\" />\n        </linearGradient>\n        <linearGradient :id=\"`backgroundGradient-${gradientId}`\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" :style=\"{ stopColor: backgroundColor, stopOpacity: 0.1 }\" />\n          <stop offset=\"100%\" :style=\"{ stopColor: backgroundColor, stopOpacity: 0.3 }\" />\n        </linearGradient>\n        <!-- Glowing Effect -->\n        <filter :id=\"`glow-${gradientId}`\">\n          <feGaussianBlur stdDeviation=\"3\" result=\"coloredBlur\"/>\n          <feMerge> \n            <feMergeNode in=\"coloredBlur\"/>\n            <feMergeNode in=\"SourceGraphic\"/>\n          </feMerge>\n        </filter>\n      </defs>\n      \n      <!-- Background Circle with Gradient -->\n      <circle\n        :cx=\"size / 2\"\n        :cy=\"size / 2\"\n        :r=\"radius\"\n        :stroke=\"`url(#backgroundGradient-${gradientId})`\"\n        :stroke-width=\"strokeWidth\"\n        fill=\"transparent\"\n        class=\"opacity-40\"\n      />\n      \n      <!-- Progress Circle with Animated Gradient -->\n      <circle\n        :cx=\"size / 2\"\n        :cy=\"size / 2\"\n        :r=\"radius\"\n        :stroke=\"`url(#progressGradient-${gradientId})`\"\n        :stroke-width=\"strokeWidth + 1\"\n        fill=\"transparent\"\n        :stroke-dasharray=\"circumference\"\n        :stroke-dashoffset=\"strokeDashoffset\"\n        stroke-linecap=\"round\"\n        class=\"transition-all duration-1500 ease-out transform-gpu\"\n        :style=\"{ \n          filter: glowEffect ? `url(#glow-${gradientId})` : 'none',\n          animation: 'progressShine 3s infinite linear'\n        }\"\n      />\n      \n      <!-- Shimmer Effect -->\n      <circle\n        v-if=\"showShimmer\"\n        :cx=\"size / 2\"\n        :cy=\"size / 2\"\n        :r=\"radius\"\n        stroke=\"rgba(255, 255, 255, 0.6)\"\n        :stroke-width=\"1\"\n        fill=\"transparent\"\n        stroke-dasharray=\"20 80\"\n        :stroke-dashoffset=\"shimmerOffset\"\n        stroke-linecap=\"round\"\n        class=\"animate-spin\"\n        style=\"animation-duration: 4s;\"\n        opacity=\"0.8\"\n      />\n    </svg>\n    \n    <!-- Center Content with Enhanced Typography -->\n    <div \n      class=\"pointer-events-none absolute inset-0 flex items-center justify-center\"\n      :style=\"{ \n        width: size + 'px', \n        height: size + 'px' \n      }\"\n    >\n      <div class=\"flex flex-col items-center justify-center text-center space-y-1 transform transition-all duration-300 group-hover:scale-105\">\n        <!-- Icon with Glow -->\n        <div v-if=\"showIcon\" class=\"flex-shrink-0 mb-1 relative\">\n          <div \n            :class=\"['transition-all duration-300 group-hover:text-white', iconSize]\"\n            :style=\"{ \n              color: progressColor,\n              filter: `drop-shadow(0 0 8px ${progressColor}40)`,\n              textShadow: `0 0 10px ${progressColor}60`\n            }\"\n          >\n            <slot name=\"icon\" />\n          </div>\n        </div>\n        \n        <!-- Value and Unit with Enhanced Typography -->\n        <div class=\"flex flex-col items-center justify-center\">\n          <div \n            :class=\"['font-bold tracking-tight transition-all duration-300 group-hover:scale-110', valueClass]\"\n            :style=\"{ \n              color: 'white',\n              textShadow: `0 0 15px ${progressColor}50, 0 2px 4px rgba(0,0,0,0.3)`,\n              letterSpacing: '-0.02em'\n            }\"\n          >\n            {{ displayValue }}{{ unit }}\n          </div>\n          \n          <!-- Label with Enhanced Styling -->\n          <div \n            v-if=\"label\" \n            class=\"text-xs font-semibold uppercase tracking-wider transition-all duration-300 group-hover:text-white mt-1\"\n            :style=\"{ \n              color: `${progressColor}dd`,\n              textShadow: `0 0 8px ${progressColor}40`,\n              letterSpacing: '0.05em'\n            }\"\n          >\n            {{ label }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Floating Particles Effect -->\n    <div v-if=\"showShimmer\" class=\"absolute inset-0 pointer-events-none overflow-hidden rounded-full\">\n      <div \n        v-for=\"i in 3\" \n        :key=\"i\"\n        class=\"absolute w-1 h-1 rounded-full animate-pulse\"\n        :style=\"{ \n          background: `radial-gradient(circle, ${progressColor}, transparent)`,\n          top: Math.random() * 80 + 10 + '%',\n          left: Math.random() * 80 + 10 + '%',\n          animationDelay: i * 0.5 + 's',\n          animationDuration: '2s'\n        }\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, onMounted } from 'vue'\n\ninterface Props {\n  value: number\n  max: number\n  size?: number\n  strokeWidth?: number\n  progressColor?: string\n  progressColorSecondary?: string\n  progressColorThertiary?: string\n  backgroundColor?: string\n  label?: string\n  unit?: string\n  showIcon?: boolean\n  valueClass?: string\n  showShimmer?: boolean\n  glowEffect?: boolean\n  animationDelay?: number\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  size: 120,\n  strokeWidth: 8,\n  progressColor: '#3b82f6',\n  progressColorSecondary: '#60a5fa',\n  progressColorThertiary: '#93c5fd',\n  backgroundColor: '#e5e7eb',\n  unit: '',\n  showIcon: false,\n  valueClass: 'text-xl font-bold',\n  showShimmer: false,\n  glowEffect: false,\n  animationDelay: 0\n})\n\n// Animation state\nconst animatedValue = ref(0)\nconst animatedProgress = ref(0)\nconst isAnimating = ref(false)\n\nconst radius = computed(() => (props.size - props.strokeWidth) / 2)\nconst circumference = computed(() => 2 * Math.PI * radius.value)\nconst percentage = computed(() => Math.min((props.value / props.max) * 100, 100))\n\n// Use animated progress for stroke calculation\nconst strokeDashoffset = computed(() => \n  circumference.value - (animatedProgress.value / 100) * circumference.value\n)\n\nconst displayValue = computed(() => {\n  if (props.unit === '%') {\n    return Math.round(animatedProgress.value)\n  }\n  return Math.round(animatedValue.value)\n})\n\n// Animation functions\nconst animateValue = (from: number, to: number, duration = 1500) => {\n  const startTime = Date.now()\n  const update = () => {\n    const elapsed = Date.now() - startTime\n    const progress = Math.min(elapsed / duration, 1)\n    const easeOutCubic = 1 - Math.pow(1 - progress, 3)\n    \n    animatedValue.value = from + (to - from) * easeOutCubic\n    animatedProgress.value = from + (percentage.value - from) * easeOutCubic\n    \n    if (progress < 1) {\n      requestAnimationFrame(update)\n    } else {\n      isAnimating.value = false\n    }\n  }\n  isAnimating.value = true\n  requestAnimationFrame(update)\n}\n\n// Intersection Observer for scroll-triggered animation\nconst circularProgressRef = ref<HTMLElement>()\nconst hasAnimatedOnScroll = ref(false)\n\nconst startAnimation = () => {\n  setTimeout(() => {\n    animateValue(0, props.value)\n  }, props.animationDelay)\n}\n\n// Start animation on mount with delay (F5/page load)\nonMounted(() => {\n  startAnimation()\n  \n  // Add Intersection Observer for scroll-triggered animation\n  if (!circularProgressRef.value) return\n  \n  const observer = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting && !isAnimating.value) {\n          // Reset to 0 first for scroll animation\n          animatedValue.value = 0\n          animatedProgress.value = 0\n          startAnimation()\n        }\n      })\n    },\n    {\n      threshold: 0.3, // Trigger when 30% visible\n      rootMargin: '0px 0px -20px 0px'\n    }\n  )\n  \n  observer.observe(circularProgressRef.value)\n  \n  // Cleanup observer on unmount\n  return () => observer.disconnect()\n})\n\nconst iconSize = computed(() => {\n  if (props.size >= 140) return 'w-6 h-6'\n  if (props.size >= 100) return 'w-5 h-5'\n  return 'w-4 h-4'\n})\n\n// Generate unique ID for gradients\nconst gradientId = computed(() => Math.random().toString(36).substr(2, 9))\n\n// Shimmer animation offset\nconst shimmerOffset = computed(() => circumference.value)\n\n// Additional computed properties\nconst progressColorTertiary = computed(() => props.progressColorThertiary)\n</script>\n\n<script lang=\"ts\">\nexport default {\n  name: 'CircularProgress'\n}\n</script>\n\n<style scoped>\n/* Add animation delay support */\n.transition-all {\n  transition-delay: v-bind('animationDelay + \"ms\"');\n}\n\n/* Progressive shimmer animation */\n@keyframes progressShine {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Floating glow animation */\n@keyframes floatingGlow {\n  0%, 100% { \n    transform: scale(1.1);\n    opacity: 0.4;\n  }\n  50% { \n    transform: scale(1.3);\n    opacity: 0.7;\n  }\n}\n\n/* Enhanced hover animations */\n.group:hover .animate-pulse {\n  animation: floatingGlow 2s ease-in-out infinite;\n}\n\n/* Gradient animation for progress stroke */\n@keyframes gradientShift {\n  0% { stroke-dasharray: 0 100; }\n  50% { stroke-dasharray: 50 50; }\n  100% { stroke-dasharray: 100 0; }\n}\n\n/* 3D depth shadow */\n.group {\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.group:hover {\n  transform: translateY(-2px);\n}\n\n/* Responsive glow intensity */\n@media (prefers-reduced-motion: no-preference) {\n  .transition-all {\n    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n\n/* Remove any unintended background artifacts */\n</style>\n","<template>\n  <div class=\"group bg-white/80 dark:bg-[#0a0a0a]/80 backdrop-blur-md shadow-xl hover:shadow-2xl rounded-2xl border border-white/20 dark:border-white/10 transition-all duration-500 hover:scale-105 hover:-translate-y-2 h-full min-h-[420px] flex flex-col\">\n    <div class=\"px-6 py-8 sm:p-8 flex-1 flex flex-col\">\n      <!-- Header with title and icon -->\n      <div class=\"flex items-center mb-6\">\n        <div class=\"animate-pulse-slow\">\n          <div class=\"w-3 h-3 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full mr-3\"></div>\n        </div>\n        <h3 class=\"text-lg sm:text-xl md:text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 dark:from-purple-400 dark:to-pink-400 bg-clip-text text-transparent\">\n          {{ t('dashboard.flashcardStats.title', 'Flashcard Practice') }}\n        </h3>\n      </div>\n\n      <!-- Loading state -->\n      <div v-if=\"isLoading\" class=\"flex-1 flex items-center justify-center\">\n        <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-purple-500\"></div>\n      </div>\n\n      <!-- No data state -->\n      <div v-else-if=\"stats.totalSessions === 0\" class=\"flex-1 flex flex-col items-center justify-center text-center space-y-4\">\n        <div class=\"w-16 h-16 bg-gradient-to-br from-purple-100 to-pink-100 dark:bg-gradient-to-br dark:from-purple-900/30 dark:to-pink-900/30 rounded-full flex items-center justify-center\">\n          <svg class=\"w-8 h-8 text-purple-500 dark:text-purple-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"/>\n          </svg>\n        </div>\n        <div>\n          <p class=\"text-sm font-medium text-gray-600 dark:text-gray-300\">\n            {{ t('dashboard.flashcardStats.noData', 'No practice sessions yet') }}\n          </p>\n          <p class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            {{ t('dashboard.flashcardStats.startPracticing', 'Start practicing to see your stats!') }}\n          </p>\n        </div>\n      </div>\n\n      <!-- Stats content -->\n      <div v-else class=\"space-y-6 flex-1\">\n        <!-- Circular Progress Displays -->\n        <div class=\"grid grid-cols-2 lg:grid-cols-4 place-items-center justify-center gap-8 lg:gap-6\" style=\"background: transparent !important;\">\n          <!-- Total Sessions -->\n          <div class=\"flex flex-col items-center text-center\" style=\"background: transparent !important;\">\n            <CircularProgress\n              :value=\"stats.totalSessions\"\n              :max=\"Math.max(stats.totalSessions + 10, 50)\"\n              :size=\"110\"\n              :stroke-width=\"7\"\n              progress-color=\"#8b5cf6\"\n              progress-color-secondary=\"#a855f7\"\n              progress-color-tertiary=\"#c084fc\"\n              background-color=\"#1e1b4b\"\n              :label=\"t('dashboard.flashcardStats.sessions', 'Sessions')\"\n              show-icon\n              :show-shimmer=\"true\"\n              :glow-effect=\"true\"\n              value-class=\"text-lg sm:text-xl font-bold\"\n              :animation-delay=\"100\"\n            >\n              <template #icon>\n                <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                </svg>\n              </template>\n            </CircularProgress>\n          </div>\n\n          <!-- Current Streak -->\n          <div style=\"background: transparent !important;\">\n            <CircularProgress\n              :value=\"stats.streakDays\"\n              :max=\"Math.max(stats.streakDays + 5, 30)\"\n              :size=\"110\"\n              :stroke-width=\"7\"\n              progress-color=\"#f97316\"\n              progress-color-secondary=\"#fb923c\"\n              progress-color-tertiary=\"#fdba74\"\n              background-color=\"#7c2d12\"\n              :label=\"t('dashboard.flashcardStats.streak', 'Streak')\"\n              :unit=\"t('dashboard.flashcardStats.days', 'days')\"\n              show-icon\n              :show-shimmer=\"true\"\n              :glow-effect=\"true\"\n              value-class=\"text-lg sm:text-xl font-bold\"\n              :animation-delay=\"200\"\n            >\n              <template #icon>\n                <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M17.657 18.657A8 8 0 716.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\"/>\n                </svg>\n              </template>\n            </CircularProgress>\n          </div>\n\n          <!-- Average Accuracy -->\n          <div class=\"flex flex-col items-center text-center\" style=\"background: transparent !important;\">\n            <CircularProgress\n              :value=\"stats.averageAccuracy\"\n              :max=\"100\"\n              :size=\"110\"\n              :stroke-width=\"7\"\n              progress-color=\"#10b981\"\n              progress-color-secondary=\"#34d399\"\n              progress-color-tertiary=\"#6ee7b7\"\n              background-color=\"#064e3b\"\n              :label=\"t('dashboard.flashcardStats.accuracy', 'Accuracy')\"\n              unit=\"%\"\n              show-icon\n              :show-shimmer=\"true\"\n              :glow-effect=\"true\"\n              value-class=\"text-lg sm:text-xl font-bold\"\n              :animation-delay=\"300\"\n            >\n              <template #icon>\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                </svg>\n              </template>\n            </CircularProgress>\n            <p class=\"text-xs font-medium mt-1\" :class=\"formattedStats.accuracyLevel.color\">\n              {{ formattedStats.accuracyLevel.level }}\n            </p>\n          </div>\n\n          <!-- Weekly Progress -->\n          <div class=\"flex flex-col items-center text-center\" style=\"background: transparent !important;\">\n            <CircularProgress\n              :value=\"stats.sessionsThisWeek\"\n              :max=\"7\"\n              :size=\"110\"\n              :stroke-width=\"7\"\n              progress-color=\"#3b82f6\"\n              progress-color-secondary=\"#60a5fa\"\n              progress-color-tertiary=\"#93c5fd\"\n              background-color=\"#1e3a8a\"\n              :label=\"t('dashboard.flashcardStats.weeklyProgress', 'This Week')\"\n              show-icon\n              :show-shimmer=\"true\"\n              :glow-effect=\"true\"\n              value-class=\"text-lg sm:text-xl font-bold\"\n              :animation-delay=\"400\"\n            >\n              <template #icon>\n                <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"/>\n                </svg>\n              </template>\n            </CircularProgress>\n            <p class=\"text-xs font-medium mt-1\" :class=\"formattedStats.progressLevel.color\">\n              {{ stats.sessionsThisWeek }}/7 {{ t('dashboard.flashcardStats.sessions', 'sessions') }}\n            </p>\n          </div>\n        </div>\n\n        <!-- Additional Stats Cards -->\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n          <!-- Best Score -->\n          <div class=\"bg-white/50 dark:bg-[#0a0a0a]/30 rounded-xl p-4 group/stat hover:bg-white/70 dark:hover:bg-[#0a0a0a]/50 transition-all duration-300\"\n               style=\"animation-delay: 0.5s\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-xs font-semibold text-blue-600 dark:text-blue-400 uppercase tracking-wide\">\n                {{ t('dashboard.flashcardStats.bestScore', 'Best Score') }}\n              </span>\n              <div class=\"w-6 h-6 bg-blue-100 dark:bg-blue-900/50 rounded-lg flex items-center justify-center group-hover/stat:scale-110 transition-transform duration-300\">\n                <svg class=\"w-3 h-3 text-blue-600 dark:text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"/>\n                </svg>\n              </div>\n            </div>\n            <p class=\"text-2xl font-bold text-gray-900 dark:text-white counter-animate\">{{ stats.bestScore }}</p>\n          </div>\n\n          <!-- Cards Studied -->\n          <div class=\"bg-white/50 dark:bg-[#0a0a0a]/30 rounded-xl p-4 group/stat hover:bg-white/70 dark:hover:bg-[#0a0a0a]/50 transition-all duration-300\"\n               style=\"animation-delay: 0.6s\">\n            <div class=\"flex items-center justify-between mb-2\">\n              <span class=\"text-xs font-semibold text-pink-600 dark:text-pink-400 uppercase tracking-wide\">\n                {{ t('dashboard.flashcardStats.cardsStudied', 'Cards Studied') }}\n              </span>\n              <div class=\"w-6 h-6 bg-pink-100 dark:bg-pink-900/50 rounded-lg flex items-center justify-center group-hover/stat:scale-110 transition-transform duration-300\">\n                <svg class=\"w-3 h-3 text-pink-600 dark:text-pink-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"/>\n                </svg>\n              </div>\n            </div>\n            <p class=\"text-2xl font-bold text-gray-900 dark:text-white counter-animate\">{{ stats.totalCardsStudied.toLocaleString() }}</p>\n          </div>\n        </div>\n\n        <!-- Additional Information -->\n        <div class=\"space-y-3\">\n          <!-- Practice Time -->\n          <div class=\"group/activity flex items-center space-x-4 p-3 rounded-xl hover:bg-white/50 dark:hover:bg-[#0a0a0a]/20 transition-all duration-300\"\n               style=\"animation-delay: 0.7s\">\n            <div class=\"flex-shrink-0\">\n              <div class=\"w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center transform group-hover/activity:rotate-12 group-hover/activity:scale-110 transition-all duration-300\">\n                <svg class=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"flex-1 min-w-0\">\n              <p class=\"text-xs sm:text-sm font-semibold text-gray-900 dark:text-white\">\n                {{ t('dashboard.flashcardStats.totalTime', 'Total Practice Time') }}\n              </p>\n              <p class=\"text-xs text-purple-600 dark:text-purple-400 font-medium\">{{ formattedStats.totalPracticeTimeFormatted }}</p>\n            </div>\n          </div>\n\n          <!-- Favorite Mode -->\n          <div v-if=\"stats.favoriteMode\" class=\"group/activity flex items-center space-x-4 p-3 rounded-xl hover:bg-white/50 dark:hover:bg-[#0a0a0a]/20 transition-all duration-300\"\n               style=\"animation-delay: 0.8s\">\n            <div class=\"flex-shrink-0\">\n              <div class=\"w-8 h-8 bg-gradient-to-br from-yellow-500 to-orange-500 rounded-lg flex items-center justify-center transform group-hover/activity:rotate-12 group-hover/activity:scale-110 transition-all duration-300\">\n                <svg class=\"w-4 h-4 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\"/>\n                </svg>\n              </div>\n            </div>\n            <div class=\"flex-1 min-w-0\">\n              <p class=\"text-xs sm:text-sm font-semibold text-gray-900 dark:text-white\">\n                {{ t('dashboard.flashcardStats.favoriteMode', 'Favorite Mode') }}\n              </p>\n              <p class=\"text-xs text-yellow-600 dark:text-yellow-400 font-medium\">{{ formattedStats.favoriteModeFormatted }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useI18n } from 'vue-i18n'\nimport { useFlashcardDashboardStats } from '../composables/useFlashcardDashboardStats'\nimport CircularProgress from './CircularProgress.vue'\n\nconst { t } = useI18n()\nconst { stats, getFormattedStats: formattedStats, isLoading } = useFlashcardDashboardStats()\n</script>\n\n<style scoped>\n.counter-animate {\n  animation: counter-animate 0.6s ease-out;\n}\n\n.animate-progress-slide {\n  animation: progress-slide 1.5s ease-out;\n}\n\n@keyframes counter-animate {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes progress-slide {\n  from {\n    width: 0%;\n  }\n  to {\n    width: var(--target-width);\n  }\n}\n\n.animate-pulse-slow {\n  animation: pulse-slow 3s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n}\n\n@keyframes pulse-slow {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.5;\n  }\n}\n\n.animate-fade-in-up {\n  animation: fade-in-up 0.6s ease-out forwards;\n}\n\n@keyframes fade-in-up {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>\n"],"names":["_createElementBlock","_normalizeStyle","size","_createElementVNode","progressColor","progressColorSecondary","backgroundColor","strokeWidth","glowEffect","showShimmer","_hoisted_8","showIcon","_openBlock","_hoisted_9","_renderSlot","_hoisted_10","valueClass","_toDisplayString","unit","label","_hoisted_11","_Fragment","_renderList","_unref","_createVNode"],"mappings":"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"}